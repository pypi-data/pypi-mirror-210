Metadata-Version: 2.1
Name: visual-compare
Version: 1.0.2.3
Summary: Image and PDF Compare
Home-page: https://github.com/cuidingyong/visual-compare
Author: Dillon
Author-email: cuidingyong@yeah.net
License: MIT
Keywords: visual compare image pdf diff
Platform: UNKNOWN
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3 :: Only
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Description-Content-Type: text/markdown
Requires-Dist: opencv-python-headless (~=4.7)
Requires-Dist: numpy (~=1.24.3)
Requires-Dist: imutils (~=0.5.4)
Requires-Dist: scikit-image (~=0.20)
Requires-Dist: pytesseract (~=0.3.10)
Requires-Dist: parsimonious (~=0.10)
Requires-Dist: PyMuPDF (~=1.22)
Requires-Dist: pyzbar (~=0.1.9)
Requires-Dist: pylibdmtx (~=0.1.10)
Requires-Dist: Wand (~=0.6.11)
Requires-Dist: pydantic (~=1.8.2)
Requires-Dist: deepdiff (~=6.3.0)
Requires-Dist: easyocr (~=1.6.2)

Visual Compare
==============

## Installation

```commandline
pip install visual-compare
```

## Examples

### Compare images ###

```python
from visual_compare.doc.visual import Visual

def get_path(filename):
    image_base = '../../files/images/'
    return image_base + filename

reference_image = get_path('123.png')
test_image = get_path('124.png')
vt = Visual()
is_diff, res = vt.compare_images(reference_image, test_image)
print(res)
assert is_diff is True
```

 Result as follows

![1.jpg](https://github.com/cuidingyong/visual-compare/raw/main/files/result/1.jpg)

### Compare images with mask ###

```python
from visual_compare.doc.visual import Visual

def get_path(filename):
    image_base = '../../files/images/'
    return image_base + filename

reference_image = get_path('123.png')
test_image = get_path('124.png')
mask_images = [get_path('000.png')]
vt = Visual()
mask = vt.generate_mask(reference_image, mask_images)
is_diff, res = vt.compare_images(reference_image, test_image, mask=mask)
print(res)
assert is_diff is True
```

 Result as follows

![2.jpg](https://github.com/cuidingyong/visual-compare/raw/main/files/result/2.jpg)

### Compare images with OCR ###

```python
from visual_compare.doc.visual import Visual

def get_path(filename):
    image_base = '../../files/images/'
    return image_base + filename

reference_image = get_path('123.png')
test_image = get_path('124.png')
vt = Visual()
is_diff, res = vt.compare_images(reference_image, test_image, force_ocr=True, lang=['ch_sim', 'en'])
print(res)
assert is_diff is True
```

 Result as follows

![3.jpg](https://github.com/cuidingyong/visual-compare/raw/main/files/result/3.jpg)

