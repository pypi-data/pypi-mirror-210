[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[project]
name = "unirange"
description = "Unirange is a notation for specifying multiple Unicode codepoints."
readme = "README.md"
requires-python = ">=3.11"
version = "1.0"
license = {text = "MIT"}
authors = [{name = "WhoAteMyButter"}]
keywords = [
    "unicode",
    "characters",
    "range",
    "unirange",
]
classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.11",
    "Operating System :: OS Independent",
    "Topic :: Text Processing",
    "Topic :: Utilities",
    "Typing :: Typed",
    "Development Status :: 4 - Beta",
    "Intended Audience :: Other Audience",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English"
]
dependencies = []


[project.urls]
Source = "https://gitlab.com/whoatemybutter/unirange"
Changelog = "https://gitlab.com/whoatemybutter/unirange/-/blob/master/CHANGELOG.md"
Issues = "https://gitlab.com/whoatemybutter/unirange/-/issues"

[tool.black]
line-length = 120
target-version = ["py311"]

[tool.pylint."MASTER"]
jobs = 0
py-version = "3.11"
suggestion-mode = true
max-line-length = 120
# Needed for lxml not playing nice with pylint
fail-on = "I"
# Enable many optional extensions:
load-plugins = [
   "pylint.extensions.bad_builtin",
   "pylint.extensions.code_style",
   "pylint.extensions.comparison_placement",
   "pylint.extensions.consider_refactoring_into_while_condition",
   "pylint.extensions.docparams",
   "pylint.extensions.dunder",
   "pylint.extensions.eq_without_hash",
   "pylint.extensions.for_any_all",
   "pylint.extensions.mccabe",
   "pylint.extensions.no_self_use",
   "pylint.extensions.overlapping_exceptions",
   "pylint.extensions.private_import",
   "pylint.extensions.redefined_loop_name",
   "pylint.extensions.redefined_variable_type",
   "pylint.extensions.set_membership",
   "pylint.extensions.typing",
   "pylint.extensions.while_used"
]
[tool.pylint."MESSAGES CONTROL"]
disable = ["logging-fstring-interpolation"]
enable = [
    "bad-inline-option",
    "deprecated-pragma",
    "file-ignored",
    "use-symbolic-message-instead",
    "useless-suppression"
]
include-naming-hint = true
[tool.pylint."STRING CONSTANT"]
check-quote-consistency = true


# Include some helpful details on errors messages for naming rules:
include-naming-hint = "yes"
confidence = []
[tool.pylint."STRING_CONSTANT"]
check-quote-consistency = "yes"
[tool.pylint."VARIABLES"]
allow-global-unused-variables = "yes"

[tool.pydocstyle]
convention = "pep257"

[tool.setuptools.package-data]
unirange = ["py.typed", "LICENSE.txt"]

[tool.mypy]
show_error_codes = true
pretty = true