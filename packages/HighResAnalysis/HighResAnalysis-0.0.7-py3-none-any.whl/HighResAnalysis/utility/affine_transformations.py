# AUTOGENERATED! DO NOT EDIT! File to edit: ../../nbs/27_utility.affine_transformations.ipynb.

# %% auto 0
__all__ = ['scale_matrix', 'transition_matrix', 'rotation_matrix', 'matrix_order', 'multiply', 'matrix', 'transform',
           'm_transform']

# %% ../../nbs/27_utility.affine_transformations.ipynb 3
from numpy import array, append, sin, cos, ones
from numpy.linalg import inv

# %% ../../nbs/27_utility.affine_transformations.ipynb 4
def scale_matrix(sx=1, sy=None):
    return array([[sx, 0, 0], [0, sx if sy is None else sy, 0], [0, 0, 1]])

# %% ../../nbs/27_utility.affine_transformations.ipynb 5
def transition_matrix(ox=0, oy=0):
    return array([[1, 0, ox], [0, 1, oy], [0, 0, 1]])

# %% ../../nbs/27_utility.affine_transformations.ipynb 6
def rotation_matrix(rx=0, ry=None):
    x = [cos(rx), -sin(rx), 0] if ry is None else append(rx[:2], 0)
    y = [sin(rx), cos(rx), 0] if ry is None else append(ry[:2], 0)
    return array([x, y, [0, 0, 1]])

# %% ../../nbs/27_utility.affine_transformations.ipynb 7
def matrix_order(order):
    d = {'s': 0, 't': 1, 'r': 2}
    return array([d[i] for i in order])

# %% ../../nbs/27_utility.affine_transformations.ipynb 8
def multiply(m0, m1, m2):
    """returns: M0 * M1 * M2 """
    return m0 @ m1 @ m2

# %% ../../nbs/27_utility.affine_transformations.ipynb 9
def matrix(sx=1, sy=1, ox=0, oy=0, rx=0, ry=None, order='srt'):
    s, t, r = scale_matrix(sx, sy), transition_matrix(ox, oy), rotation_matrix(rx, ry)
    return multiply(*array([s, t, r])[matrix_order(order)])

# %% ../../nbs/27_utility.affine_transformations.ipynb 10
def transform(x, y, sx=1, sy=1, ox=0, oy=0, rx=0, ry=None, order='srt', invert=False):
    m = matrix(sx, sy, ox, oy, rx, ry, order)
    return ((inv(m) if invert else m) @ array([x, y, ones(x.size, 'i')]))[:2]

# %% ../../nbs/27_utility.affine_transformations.ipynb 11
def m_transform(m, x, y, invert=False):
    return ((inv(m) if invert else m) @ array([x, y, ones(x.size, 'i')]))[:2]
