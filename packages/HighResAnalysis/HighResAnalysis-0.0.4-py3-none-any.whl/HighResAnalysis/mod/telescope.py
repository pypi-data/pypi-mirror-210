# AUTOGENERATED! DO NOT EDIT! File to edit: ../../nbs/24_mod.telescope.ipynb.

# %% auto 0
__all__ = ['tel_analysis']

# %% ../../nbs/24_mod.telescope.ipynb 2
#!/usr/bin/env python 

# %% ../../nbs/24_mod.telescope.ipynb 3
from ..src.dut_analysis import DUTAnalysis
from ..src.analysis import *
from .tel_cuts import TelCut
from .residuals import res_analysis
from ..plotting.utils import prep_kw
from numpy import array

# %% ../../nbs/24_mod.telescope.ipynb 4
def tel_analysis(cls):
    class TelescopeAnalysis(cls):

        def __init__(self, parent: DUTAnalysis):  # noqa

            self.Parent = parent
            self.__dict__.update(parent.__dict__)
            self.MetaSubDir = 'tel'

            self.NPlanes = self.Config.getint('TELESCOPE', 'planes')
            self.Plane = self.Planes[0]
            self.Cut = TelCut(self)
            self.Residuals = res_analysis(cls)(self)

        @property
        def planes(self):
            return arange(self.NPlanes)

        # ----------------------------------------
        # region DATA
        def get_all(self, f, cut=True, **kwargs):
            return [f(pl=pl, cut=self.Cut.make_all_cluster() & cut, **kwargs) for pl in range(self.NPlanes)]

        def get_n_clusters(self, cut=None, pl=0):
            return self.get_data('Clusters', 'N', cut, pl)

        def get_us(self, cut=True):
            return array(self.get_all(self.get_u, cut, centre=True))

        def get_vs(self, cut=True):
            return array(self.get_all(self.get_u, cut, centre=True))
        # endregion DATA
        # ----------------------------------------

        # ----------------------------------------
        # region DRAW
        def draw_occupancy(self, local=True, bw=10, cut=None, pl=None, **dkw):
            return super().draw_occupancy(local, bw, cut, fid=False, pl=pl, **dkw)

        def draw_n_clusters(self, pl=0, cut=None, **dkw):
            return self.Draw.distribution(self.get_n_clusters(cut, pl), **prep_kw(dkw, title='NClusters', x_tit='Number of Clusters', w=1, x0=-.5))
        # endregion DRAW
        # ----------------------------------------

    return TelescopeAnalysis
