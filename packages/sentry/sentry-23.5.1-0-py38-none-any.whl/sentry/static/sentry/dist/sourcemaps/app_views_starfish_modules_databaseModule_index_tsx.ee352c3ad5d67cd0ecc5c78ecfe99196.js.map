{"version":3,"file":"chunks/app_views_starfish_modules_databaseModule_index_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/performance/searchBar.tsx","webpack:///./app/components/searchBar.tsx","webpack:///./app/views/starfish/modules/databaseModule/databaseChartView.tsx","webpack:///./app/views/starfish/modules/databaseModule/index.tsx","webpack:///./app/views/starfish/utils/combineTableDataWithSparklineData.tsx"],"sourcesContent":["import {useCallback, useRef, useState} from 'react';\nimport {browserHistory} from 'react-router';\nimport styled from '@emotion/styled';\nimport debounce from 'lodash/debounce';\n\nimport BaseSearchBar from 'sentry/components/searchBar';\nimport {getSearchGroupWithItemMarkedActive} from 'sentry/components/smartSearchBar/utils';\nimport {DEFAULT_DEBOUNCE_DURATION} from 'sentry/constants';\nimport {t} from 'sentry/locale';\nimport {Organization} from 'sentry/types';\nimport EventView from 'sentry/utils/discover/eventView';\nimport {doDiscoverQuery} from 'sentry/utils/discover/genericDiscoverQuery';\nimport {MutableSearch} from 'sentry/utils/tokenizeSearch';\nimport useApi from 'sentry/utils/useApi';\nimport useOnClickOutside from 'sentry/utils/useOnClickOutside';\nimport {normalizeUrl} from 'sentry/utils/withDomainRequired';\nimport {transactionSummaryRouteWithQuery} from 'sentry/views/performance/transactionSummary/utils';\n\nimport SearchDropdown from '../smartSearchBar/searchDropdown';\nimport {ItemType, SearchGroup} from '../smartSearchBar/types';\n\nexport type SearchBarProps = {\n  eventView: EventView;\n  onSearch: (query: string) => void;\n  organization: Organization;\n  query: string;\n  className?: string;\n};\n\nfunction SearchBar(props: SearchBarProps) {\n  const {\n    organization,\n    eventView: _eventView,\n    onSearch,\n    query: searchQuery,\n    className,\n  } = props;\n\n  const [searchResults, setSearchResults] = useState<SearchGroup[]>([]);\n  const transactionCount = searchResults[0]?.children?.length || 0;\n  const [highlightedItemIndex, setHighlightedItemIndex] = useState(-1);\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\n  const openDropdown = () => setIsDropdownOpen(true);\n  const closeDropdown = () => setIsDropdownOpen(false);\n  const [loading, setLoading] = useState(false);\n  const [searchString, setSearchString] = useState(searchQuery);\n  const containerRef = useRef<HTMLDivElement>(null);\n  useOnClickOutside(containerRef, useCallback(closeDropdown, []));\n\n  const api = useApi();\n  const eventView = _eventView.clone();\n\n  const url = `/organizations/${organization.slug}/events/`;\n\n  const projectIdStrings = (eventView.project as Readonly<number>[])?.map(String);\n\n  const handleSearchChange = query => {\n    setSearchString(query);\n\n    if (query.length === 0) {\n      onSearch('');\n    }\n\n    if (query.length < 3) {\n      setSearchResults([]);\n      closeDropdown();\n      return;\n    }\n\n    openDropdown();\n    getSuggestedTransactions(query);\n  };\n\n  const handleKeyDown = (event: React.KeyboardEvent) => {\n    const {key} = event;\n\n    if (loading) {\n      return;\n    }\n\n    if (key === 'Escape' && isDropdownOpen) {\n      closeDropdown();\n      return;\n    }\n\n    if (\n      (key === 'ArrowUp' || key === 'ArrowDown') &&\n      isDropdownOpen &&\n      transactionCount > 0\n    ) {\n      const currentHighlightedItem = searchResults[0].children[highlightedItemIndex];\n      const nextHighlightedItemIndex =\n        (highlightedItemIndex + transactionCount + (key === 'ArrowUp' ? -1 : 1)) %\n        transactionCount;\n      setHighlightedItemIndex(nextHighlightedItemIndex);\n      const nextHighlightedItem = searchResults[0].children[nextHighlightedItemIndex];\n\n      let newSearchResults = searchResults;\n      if (currentHighlightedItem) {\n        newSearchResults = getSearchGroupWithItemMarkedActive(\n          searchResults,\n          currentHighlightedItem,\n          false\n        );\n      }\n\n      if (nextHighlightedItem) {\n        newSearchResults = getSearchGroupWithItemMarkedActive(\n          newSearchResults,\n          nextHighlightedItem,\n          true\n        );\n      }\n\n      setSearchResults(newSearchResults);\n      return;\n    }\n\n    if (key === 'Enter') {\n      event.preventDefault();\n      const currentItem = searchResults[0]?.children[highlightedItemIndex];\n\n      if (currentItem?.value) {\n        handleChooseItem(currentItem.value);\n      } else {\n        handleSearch(searchString, true);\n      }\n    }\n  };\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const getSuggestedTransactions = useCallback(\n    debounce(\n      async query => {\n        try {\n          setLoading(true);\n          const conditions = new MutableSearch('');\n          conditions.addFilterValues('transaction', [wrapQueryInWildcards(query)], false);\n          conditions.addFilterValues('event.type', ['transaction']);\n\n          // clear any active requests\n          if (Object.keys(api.activeRequests).length) {\n            api.clear();\n          }\n\n          const [results] = await doDiscoverQuery<{\n            data: DataItem[];\n          }>(api, url, {\n            field: ['transaction', 'project_id', 'count()'],\n            project: projectIdStrings,\n            sort: '-count()',\n            query: conditions.formatString(),\n            statsPeriod: eventView.statsPeriod,\n            referrer: 'api.performance.transaction-name-search-bar',\n          });\n\n          const parsedResults = results.data.reduce(\n            (searchGroup: SearchGroup, item) => {\n              searchGroup.children.push({\n                value: encodeItemToValue(item),\n                title: item.transaction,\n                type: ItemType.LINK,\n                desc: '',\n              });\n              return searchGroup;\n            },\n            {\n              title: 'All Transactions',\n              children: [],\n              icon: null,\n              type: 'header',\n            }\n          );\n\n          setHighlightedItemIndex(-1);\n\n          setSearchResults([parsedResults]);\n        } catch (_) {\n          throw new Error('Unable to fetch event field values');\n        } finally {\n          setLoading(false);\n        }\n      },\n      DEFAULT_DEBOUNCE_DURATION,\n      {leading: true}\n    ),\n    [api, url, eventView.statsPeriod, projectIdStrings.join(',')]\n  );\n\n  const handleChooseItem = (value: string) => {\n    const item = decodeValueToItem(value);\n    handleSearch(item.transaction, false);\n  };\n\n  const handleClickItemIcon = (value: string) => {\n    const item = decodeValueToItem(value);\n    navigateToItemTransactionSummary(item);\n  };\n\n  const handleSearch = (query: string, asRawText: boolean) => {\n    setSearchResults([]);\n    setSearchString(query);\n    query = new MutableSearch(query).formatString();\n\n    const fullQuery = asRawText ? query : `transaction:\"${query}\"`;\n    onSearch(query ? fullQuery : '');\n    closeDropdown();\n  };\n\n  const navigateToItemTransactionSummary = (item: DataItem) => {\n    const {transaction, project_id} = item;\n\n    const query = eventView.generateQueryStringObject();\n    setSearchResults([]);\n\n    const next = transactionSummaryRouteWithQuery({\n      orgSlug: organization.slug,\n      transaction,\n      projectID: String(project_id),\n      query,\n    });\n\n    browserHistory.push(normalizeUrl(next));\n  };\n\n  return (\n    <Container\n      className={className || ''}\n      data-test-id=\"transaction-search-bar\"\n      ref={containerRef}\n    >\n      <BaseSearchBar\n        placeholder={t('Search Transactions')}\n        onChange={handleSearchChange}\n        onKeyDown={handleKeyDown}\n        query={searchString}\n      />\n      {isDropdownOpen && (\n        <SearchDropdown\n          maxMenuHeight={300}\n          searchSubstring={searchString}\n          loading={loading}\n          items={searchResults}\n          onClick={handleChooseItem}\n          onIconClick={handleClickItemIcon}\n        />\n      )}\n    </Container>\n  );\n}\n\nconst encodeItemToValue = (item: DataItem) => {\n  return `${item.transaction}:${item.project_id}`;\n};\n\nconst decodeValueToItem = (value: string): DataItem => {\n  const lastIndex = value.lastIndexOf(':');\n\n  return {\n    project_id: parseInt(value.slice(lastIndex + 1), 10),\n    transaction: value.slice(0, lastIndex),\n  };\n};\n\ninterface DataItem {\n  project_id: number;\n  transaction: string;\n  'count()'?: number;\n}\n\nexport const wrapQueryInWildcards = (query: string) => {\n  if (!query.startsWith('*')) {\n    query = '*' + query;\n  }\n\n  if (!query.endsWith('*')) {\n    query = query + '*';\n  }\n\n  return query;\n};\n\nconst Container = styled('div')`\n  position: relative;\n`;\n\nexport default SearchBar;\n","import {useCallback, useEffect, useRef, useState} from 'react';\nimport styled from '@emotion/styled';\n\nimport {Button} from 'sentry/components/button';\nimport {InputGroup, InputProps} from 'sentry/components/inputGroup';\nimport {IconSearch} from 'sentry/icons';\nimport {IconClose} from 'sentry/icons/iconClose';\nimport {t} from 'sentry/locale';\nimport {space} from 'sentry/styles/space';\n\ninterface SearchBarProps extends Omit<InputProps, 'onChange'> {\n  defaultQuery?: string;\n  onChange?: (query: string) => void;\n  onSearch?: (query: string) => void;\n  query?: string;\n  trailing?: React.ReactNode;\n  width?: string;\n}\n\nfunction SearchBar({\n  query: queryProp,\n  defaultQuery = '',\n  onChange,\n  onSearch,\n  width,\n  size,\n  className,\n  trailing,\n  ...inputProps\n}: SearchBarProps) {\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  const [query, setQuery] = useState(queryProp ?? defaultQuery);\n\n  // if query prop keeps changing we should treat this as\n  // a controlled component and its internal state should be in sync\n  useEffect(() => {\n    if (typeof queryProp === 'string') {\n      setQuery(queryProp);\n    }\n  }, [queryProp]);\n\n  const onQueryChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      const {value} = e.target;\n      setQuery(value);\n      onChange?.(value);\n    },\n    [onChange]\n  );\n\n  const onSubmit = useCallback(\n    (e: React.FormEvent<HTMLFormElement>) => {\n      e.preventDefault();\n      inputRef.current?.blur();\n      onSearch?.(query);\n    },\n    [onSearch, query]\n  );\n\n  const clearSearch = useCallback(() => {\n    setQuery('');\n    onChange?.('');\n    onSearch?.('');\n  }, [onChange, onSearch]);\n\n  return (\n    <FormWrap onSubmit={onSubmit} className={className}>\n      <InputGroup>\n        <InputGroup.LeadingItems disablePointerEvents>\n          <IconSearch color=\"subText\" size={size === 'xs' ? 'xs' : 'sm'} />\n        </InputGroup.LeadingItems>\n        <StyledInput\n          {...inputProps}\n          ref={inputRef}\n          type=\"text\"\n          name=\"query\"\n          autoComplete=\"off\"\n          value={query}\n          onChange={onQueryChange}\n          width={width}\n          size={size}\n        />\n        <InputGroup.TrailingItems>\n          {trailing}\n          {!!query && (\n            <SearchBarTrailingButton\n              size=\"zero\"\n              borderless\n              onClick={clearSearch}\n              icon={<IconClose size=\"xs\" />}\n              aria-label={t('Clear')}\n            />\n          )}\n        </InputGroup.TrailingItems>\n      </InputGroup>\n    </FormWrap>\n  );\n}\n\nconst FormWrap = styled('form')`\n  display: block;\n  position: relative;\n`;\n\nconst StyledInput = styled(InputGroup.Input)`\n  ${p => p.width && `width: ${p.width};`}\n`;\n\nexport const SearchBarTrailingButton = styled(Button)`\n  color: ${p => p.theme.subText};\n  padding: ${space(0.5)};\n`;\n\nexport default SearchBar;\n","import {Fragment} from 'react';\nimport {useTheme} from '@emotion/react';\nimport styled from '@emotion/styled';\nimport {Location} from 'history';\nimport moment from 'moment';\n\nimport {CompactSelect} from 'sentry/components/compactSelect';\nimport {t} from 'sentry/locale';\nimport {space} from 'sentry/styles/space';\nimport {Series} from 'sentry/types/echarts';\nimport {getDuration} from 'sentry/utils/formatters';\nimport usePageFilters from 'sentry/utils/usePageFilters';\nimport Chart, {useSynchronizeCharts} from 'sentry/views/starfish/components/chart';\nimport ChartPanel from 'sentry/views/starfish/components/chartPanel';\nimport {\n  useQueryDbTables,\n  useQueryTopDbOperationsChart,\n  useQueryTopTablesChart,\n} from 'sentry/views/starfish/modules/databaseModule/queries';\nimport {datetimeToClickhouseFilterTimestamps} from 'sentry/views/starfish/utils/dates';\nimport {zeroFillSeries} from 'sentry/views/starfish/utils/zeroFillSeries';\n\nconst INTERVAL = 12;\n\ntype Props = {\n  location: Location;\n  onChange: (value: string) => void;\n  table: string;\n};\n\nfunction parseOptions(options, label) {\n  const prefix = <span>{t('Operation')}</span>;\n\n  return [\n    {\n      value: 'ALL',\n      prefix,\n      label: `ALL`,\n    },\n    ...options.map(action => {\n      return {\n        value: action.key,\n        prefix,\n        label: `${action.key || 'null'} - ${getDuration(\n          action.value / 1000,\n          2,\n          true\n        )} ${label}`,\n      };\n    }),\n  ];\n}\n\nexport default function DatabaseChartView({table, onChange}: Props) {\n  const pageFilter = usePageFilters();\n  const theme = useTheme();\n  const {start_timestamp, end_timestamp} = datetimeToClickhouseFilterTimestamps(\n    pageFilter.selection.datetime\n  );\n\n  const {data: tableData} = useQueryDbTables();\n  const {isLoading: isTopGraphLoading, data: topGraphData} =\n    useQueryTopDbOperationsChart(INTERVAL);\n  const {isLoading: tableGraphLoading, data: tableGraphData} =\n    useQueryTopTablesChart(INTERVAL);\n\n  const seriesByDomain: {[action: string]: Series} = {};\n  const tpmByDomain: {[action: string]: Series} = {};\n  if (!tableGraphLoading) {\n    tableGraphData.forEach(datum => {\n      seriesByDomain[datum.domain] = {\n        seriesName: datum.domain,\n        data: [],\n      };\n      tpmByDomain[datum.domain] = {\n        seriesName: datum.domain,\n        data: [],\n      };\n    });\n\n    tableGraphData.forEach(datum => {\n      seriesByDomain[datum.domain].data.push({\n        value: datum.p50,\n        name: datum.interval,\n      });\n      tpmByDomain[datum.domain].data.push({\n        value: datum.count,\n        name: datum.interval,\n      });\n    });\n  }\n\n  const topDomains = Object.values(seriesByDomain).map(series =>\n    zeroFillSeries(\n      series,\n      moment.duration(INTERVAL, 'hours'),\n      moment(start_timestamp),\n      moment(end_timestamp)\n    )\n  );\n  const tpmDomains = Object.values(tpmByDomain).map(series =>\n    zeroFillSeries(\n      series,\n      moment.duration(INTERVAL, 'hours'),\n      moment(start_timestamp),\n      moment(end_timestamp)\n    )\n  );\n\n  const tpmByQuery: {[query: string]: Series} = {};\n\n  const seriesByQuery: {[action: string]: Series} = {};\n  if (!isTopGraphLoading) {\n    topGraphData.forEach(datum => {\n      seriesByQuery[datum.action] = {\n        seriesName: datum.action,\n        data: [],\n      };\n      tpmByQuery[datum.action] = {\n        seriesName: datum.action,\n        data: [],\n      };\n    });\n\n    topGraphData.forEach(datum => {\n      seriesByQuery[datum.action].data.push({\n        value: datum.p50,\n        name: datum.interval,\n      });\n      tpmByQuery[datum.action].data.push({\n        value: datum.count,\n        name: datum.interval,\n      });\n    });\n  }\n\n  const chartColors = [...theme.charts.getColorPalette(6).slice(2, 7), theme.gray300];\n  useSynchronizeCharts([!tableGraphLoading]);\n\n  return (\n    <Fragment>\n      {tableData.length === 1 && tableData[0].key === '' ? (\n        <Fragment />\n      ) : (\n        <Fragment>\n          <ChartsContainer>\n            <ChartsContainerItem>\n              <ChartPanel title={t('Slowest Tables P50')}>\n                <Chart\n                  statsPeriod=\"24h\"\n                  height={180}\n                  data={topDomains}\n                  start=\"\"\n                  end=\"\"\n                  chartColors={chartColors}\n                  loading={tableGraphLoading}\n                  utc={false}\n                  grid={{\n                    left: '0',\n                    right: '0',\n                    top: '16px',\n                    bottom: '8px',\n                  }}\n                  definedAxisTicks={4}\n                  isLineChart\n                  showLegend\n                />\n              </ChartPanel>\n            </ChartsContainerItem>\n            <ChartsContainerItem>\n              <ChartPanel title={t('Table Throughput')}>\n                <Chart\n                  statsPeriod=\"24h\"\n                  height={180}\n                  data={tpmDomains}\n                  start=\"\"\n                  end=\"\"\n                  chartColors={chartColors}\n                  loading={isTopGraphLoading}\n                  utc={false}\n                  grid={{\n                    left: '0',\n                    right: '0',\n                    top: '16px',\n                    bottom: '8px',\n                  }}\n                  definedAxisTicks={4}\n                  showLegend\n                  isLineChart\n                />\n              </ChartPanel>\n            </ChartsContainerItem>\n          </ChartsContainer>\n          <Selectors>\n            <CompactSelect\n              value={table}\n              triggerProps={{prefix: t('Table')}}\n              options={parseOptions(tableData, 'p50')}\n              menuTitle=\"Table\"\n              onChange={opt => onChange(opt.value)}\n            />\n          </Selectors>\n        </Fragment>\n      )}\n    </Fragment>\n  );\n}\n\nconst Selectors = styled(`div`)`\n  display: flex;\n  margin-bottom: ${space(2)};\n`;\n\nconst ChartsContainer = styled('div')`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  gap: ${space(2)};\n`;\n\nconst ChartsContainerItem = styled('div')`\n  flex: 1;\n`;\n","import {useEffect, useState} from 'react';\nimport styled from '@emotion/styled';\nimport moment from 'moment';\n\nimport DatePageFilter from 'sentry/components/datePageFilter';\nimport * as Layout from 'sentry/components/layouts/thirds';\nimport {normalizeDateTimeParams} from 'sentry/components/organizations/pageFilters/parse';\nimport TransactionNameSearchBar from 'sentry/components/performance/searchBar';\nimport Switch from 'sentry/components/switchButton';\nimport {t} from 'sentry/locale';\nimport {space} from 'sentry/styles/space';\nimport EventView from 'sentry/utils/discover/eventView';\nimport {\n  PageErrorAlert,\n  PageErrorProvider,\n} from 'sentry/utils/performance/contexts/pageError';\nimport {useApiQuery, useQuery} from 'sentry/utils/queryClient';\nimport {MutableSearch} from 'sentry/utils/tokenizeSearch';\nimport {useLocation} from 'sentry/utils/useLocation';\nimport useOrganization from 'sentry/utils/useOrganization';\nimport usePageFilters from 'sentry/utils/usePageFilters';\nimport {\n  getDbAggregatesQuery,\n  useQueryMainTable,\n} from 'sentry/views/starfish/modules/databaseModule/queries';\nimport combineTableDataWithSparklineData from 'sentry/views/starfish/utils/combineTableDataWithSparklineData';\nimport {HOST} from 'sentry/views/starfish/utils/constants';\nimport {datetimeToClickhouseFilterTimestamps} from 'sentry/views/starfish/utils/dates';\n\nimport DatabaseChartView from './databaseChartView';\nimport DatabaseTableView, {DataRow, MainTableSort} from './databaseTableView';\nimport QueryDetail from './panel';\n\nexport type Sort<T> = {\n  direction: 'desc' | 'asc' | undefined;\n  sortHeader: T | undefined;\n};\n\nfunction DatabaseModule() {\n  const location = useLocation();\n  const organization = useOrganization();\n  const eventView = EventView.fromLocation(location);\n  const [table, setTable] = useState<string>('ALL');\n  const [filterNew, setFilterNew] = useState<boolean>(false);\n  const [filterOld, setFilterOld] = useState<boolean>(false);\n  const [filterOutlier, setFilterOutlier] = useState<boolean>(true);\n  const [transaction, setTransaction] = useState<string>('');\n  const [sort, setSort] = useState<MainTableSort>({\n    direction: undefined,\n    sortHeader: undefined,\n  });\n  const [rows, setRows] = useState<{next?: DataRow; prev?: DataRow; selected?: DataRow}>({\n    selected: undefined,\n    next: undefined,\n    prev: undefined,\n  });\n  const {\n    isLoading: isTableDataLoading,\n    data: tableData,\n    isRefetching: isTableRefetching,\n  } = useQueryMainTable({\n    transaction,\n    table,\n    filterNew,\n    filterOld,\n    filterOutlier,\n    sortKey: sort.sortHeader?.key,\n    sortDirection: sort.direction,\n  });\n  const pageFilters = usePageFilters();\n\n  // Experiments\n  const [p95asNumber, setp95asNumber] = useState<boolean>(false);\n  const [noP95, setnoP95] = useState<boolean>(false);\n\n  const {selection} = pageFilters;\n  const {projects, environments, datetime} = selection;\n\n  useApiQuery<null>(\n    [\n      `/organizations/${organization.slug}/events-starfish/`,\n      {\n        query: {\n          ...{\n            environment: environments,\n            project: projects.map(proj => String(proj)),\n          },\n          ...normalizeDateTimeParams(datetime),\n        },\n      },\n    ],\n    {\n      staleTime: 10,\n    }\n  );\n\n  const {data: dbAggregateData} = useQuery({\n    queryKey: [\n      'dbAggregates',\n      transaction,\n      filterNew,\n      filterOld,\n      pageFilters.selection.datetime,\n    ],\n    queryFn: () =>\n      fetch(\n        `${HOST}/?query=${getDbAggregatesQuery({\n          datetime: pageFilters.selection.datetime,\n          transaction,\n        })}`\n      ).then(res => res.json()),\n    retry: false,\n    initialData: [],\n  });\n\n  const {start_timestamp, end_timestamp} = datetimeToClickhouseFilterTimestamps(\n    pageFilters.selection.datetime\n  );\n\n  const combinedDbData = combineTableDataWithSparklineData(\n    tableData,\n    dbAggregateData,\n    moment.duration(12, 'hours'),\n    moment(start_timestamp),\n    moment(end_timestamp)\n  );\n\n  useEffect(() => {\n    function handleKeyDown({keyCode}) {\n      setRows(currentRow => {\n        if (currentRow.selected) {\n          if (currentRow.prev && keyCode === 37) {\n            return getUpdatedRows(currentRow.prev);\n          }\n          if (currentRow.next && keyCode === 39) {\n            return getUpdatedRows(currentRow.next);\n          }\n        }\n        return currentRow;\n      });\n    }\n\n    document.addEventListener('keydown', handleKeyDown);\n\n    return function cleanup() {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [tableData]);\n\n  const toggleFilterNew = () => {\n    setFilterNew(!filterNew);\n    if (!filterNew) {\n      setFilterOld(false);\n    }\n  };\n  const toggleFilterOld = () => {\n    setFilterOld(!filterOld);\n    if (!filterOld) {\n      setFilterNew(false);\n    }\n  };\n  const toggleOutlier = () => {\n    setFilterOutlier(!filterOutlier);\n  };\n  const toggleNoP95 = () => {\n    setnoP95(!noP95);\n  };\n  const toggleP95asNumber = () => {\n    setp95asNumber(!p95asNumber);\n  };\n\n  const getUpdatedRows = (row: DataRow, rowIndex?: number) => {\n    rowIndex ??= tableData.findIndex(data => data.group_id === row.group_id);\n    const prevRow = rowIndex > 0 ? tableData[rowIndex - 1] : undefined;\n    const nextRow = rowIndex < tableData.length - 1 ? tableData[rowIndex + 1] : undefined;\n    return {selected: row, next: nextRow, prev: prevRow};\n  };\n\n  const setSelectedRow = (row: DataRow, rowIndex?: number) => {\n    setRows(getUpdatedRows(row, rowIndex));\n  };\n\n  const unsetSelectedSpanGroup = () => setRows({selected: undefined});\n\n  const handleSearch = (query: string) => {\n    const conditions = new MutableSearch(query);\n    const transactionValues = conditions.getFilterValues('transaction');\n    if (transactionValues.length) {\n      setTransaction(transactionValues[0]);\n      return;\n    }\n    if (conditions.freeText.length > 0) {\n      // so no need to wrap it here\n      setTransaction(conditions.freeText.join(' '));\n      return;\n    }\n    setTransaction('');\n  };\n\n  return (\n    <Layout.Page>\n      <PageErrorProvider>\n        <Layout.Header>\n          <Layout.HeaderContent>\n            <Layout.Title>{t('Database')}</Layout.Title>\n          </Layout.HeaderContent>\n        </Layout.Header>\n\n        <Layout.Body>\n          <Layout.Main fullWidth>\n            <PageErrorAlert />\n            <FilterOptionsContainer>\n              <DatePageFilter alignDropdown=\"left\" />\n            </FilterOptionsContainer>\n            <DatabaseChartView location={location} table={table} onChange={setTable} />\n            <SearchFilterContainer>\n              <LabelledSwitch\n                label=\"Filter New Queries\"\n                isActive={filterNew}\n                size=\"lg\"\n                toggle={toggleFilterNew}\n              />\n              <LabelledSwitch\n                label=\"Filter Old Queries\"\n                isActive={filterOld}\n                size=\"lg\"\n                toggle={toggleFilterOld}\n              />\n              <LabelledSwitch\n                label=\"Exclude Outliers\"\n                isActive={filterOutlier}\n                size=\"lg\"\n                toggle={toggleOutlier}\n              />\n            </SearchFilterContainer>\n            <SearchFilterContainer>\n              <TransactionNameSearchBar\n                organization={organization}\n                eventView={eventView}\n                onSearch={(query: string) => handleSearch(query)}\n                query={transaction}\n              />\n            </SearchFilterContainer>\n            <DatabaseTableView\n              location={location}\n              data={combinedDbData as DataRow[]}\n              isDataLoading={isTableDataLoading || isTableRefetching}\n              onSelect={setSelectedRow}\n              onSortChange={setSort}\n              selectedRow={rows.selected}\n              p95asNumber={p95asNumber}\n              noP95={noP95}\n            />\n            <QueryDetail\n              isDataLoading={isTableDataLoading || isTableRefetching}\n              onRowChange={row => {\n                setSelectedRow(row);\n              }}\n              mainTableSort={sort}\n              row={rows.selected}\n              nextRow={rows.next}\n              prevRow={rows.prev}\n              onClose={unsetSelectedSpanGroup}\n              transaction={transaction}\n            />\n            <div>Experiments</div>\n            <LabelledSwitch\n              label=\"p95 as number\"\n              isActive={p95asNumber}\n              size=\"lg\"\n              toggle={toggleP95asNumber}\n            />\n            <LabelledSwitch\n              label=\"No p95\"\n              isActive={noP95}\n              size=\"lg\"\n              toggle={toggleNoP95}\n            />\n          </Layout.Main>\n        </Layout.Body>\n      </PageErrorProvider>\n    </Layout.Page>\n  );\n}\n\nexport default DatabaseModule;\n\nconst FilterOptionsContainer = styled('div')`\n  display: flex;\n  flex-direction: row;\n  gap: ${space(1)};\n  margin-bottom: ${space(2)};\n`;\n\nconst SearchFilterContainer = styled('div')`\n  margin-bottom: ${space(2)};\n`;\n\nfunction LabelledSwitch(props) {\n  return (\n    <span\n      style={{\n        display: 'inline-flex',\n        gap: space(1),\n        paddingRight: space(2),\n        alignItems: 'center',\n      }}\n    >\n      <span>{props.label}</span>\n      <Switch {...props} />\n    </span>\n  );\n}\n","import {Duration, Moment} from 'moment';\n\nimport {Series} from 'sentry/types/echarts';\nimport {DataRow} from 'sentry/views/starfish/modules/APIModule/endpointTable';\nimport {zeroFillSeries} from 'sentry/views/starfish/utils/zeroFillSeries';\n\nexport default function combineTableDataWithSparklineData(\n  tableData: DataRow[],\n  aggregateData,\n  momentInterval: Duration,\n  startTime?: Moment,\n  endTime?: Moment\n): DataRow[] {\n  const aggregatesGroupedByQuery = {};\n  aggregateData.forEach(({description, interval, count, p50, p95}) => {\n    if (description in aggregatesGroupedByQuery) {\n      aggregatesGroupedByQuery[description].push({name: interval, count, p50, p95});\n    } else {\n      aggregatesGroupedByQuery[description] = [{name: interval, count, p50, p95}];\n    }\n  });\n\n  const combinedData = tableData.map(data => {\n    const query = data.description;\n\n    const throughputSeries: Series = {\n      seriesName: 'throughput',\n      data: aggregatesGroupedByQuery[query]?.map(({name, count}) => ({\n        name,\n        value: count,\n      })),\n    };\n\n    const p50Series: Series = {\n      seriesName: 'p50 Trend',\n      data: aggregatesGroupedByQuery[query]?.map(({name, p50}) => ({\n        name,\n        value: p50,\n      })),\n    };\n\n    const p95Series: Series = {\n      seriesName: 'p95 Trend',\n      data: aggregatesGroupedByQuery[query]?.map(({name, p95}) => ({\n        name,\n        value: p95,\n      })),\n    };\n\n    const zeroFilledThroughput = zeroFillSeries(\n      throughputSeries,\n      momentInterval,\n      startTime,\n      endTime\n    );\n    const zeroFilledP50 = zeroFillSeries(p50Series, momentInterval, startTime, endTime);\n    const zeroFilledP95 = zeroFillSeries(p95Series, momentInterval, startTime, endTime);\n    return {\n      ...data,\n      throughput: zeroFilledThroughput,\n      p50_trend: zeroFilledP50,\n      p95_trend: zeroFilledP95,\n    };\n  });\n\n  return combinedData;\n}\n"],"names":["SearchBar","props","organization","eventView","_eventView","onSearch","query","searchQuery","className","searchResults","setSearchResults","useState","transactionCount","children","length","highlightedItemIndex","setHighlightedItemIndex","isDropdownOpen","setIsDropdownOpen","closeDropdown","loading","setLoading","searchString","setSearchString","containerRef","useRef","useOnClickOutside","useCallback","api","useApi","clone","url","slug","projectIdStrings","project","map","String","getSuggestedTransactions","debounce","async","conditions","MutableSearch","addFilterValues","wrapQueryInWildcards","Object","keys","activeRequests","clear","results","doDiscoverQuery","field","sort","formatString","statsPeriod","referrer","parsedResults","data","reduce","searchGroup","item","push","value","encodeItemToValue","title","transaction","type","ItemType","desc","icon","_","Error","DEFAULT_DEBOUNCE_DURATION","leading","join","handleChooseItem","decodeValueToItem","handleSearch","asRawText","_jsxs","Container","ref","_jsx","BaseSearchBar","placeholder","t","onChange","onKeyDown","event","key","currentHighlightedItem","nextHighlightedItemIndex","nextHighlightedItem","newSearchResults","getSearchGroupWithItemMarkedActive","preventDefault","currentItem","SearchDropdown","maxMenuHeight","searchSubstring","items","onClick","onIconClick","project_id","generateQueryStringObject","next","transactionSummaryRouteWithQuery","orgSlug","projectID","browserHistory","normalizeUrl","navigateToItemTransactionSummary","displayName","lastIndex","lastIndexOf","parseInt","slice","startsWith","endsWith","_styled","target","name","styles","_ref","queryProp","defaultQuery","width","size","trailing","inputProps","inputRef","setQuery","useEffect","onQueryChange","e","onSubmit","current","blur","clearSearch","FormWrap","InputGroup","disablePointerEvents","IconSearch","color","StyledInput","autoComplete","SearchBarTrailingButton","borderless","IconClose","p","Button","theme","subText","space","INTERVAL","parseOptions","options","label","prefix","action","getDuration","DatabaseChartView","table","pageFilter","usePageFilters","useTheme","start_timestamp","end_timestamp","datetimeToClickhouseFilterTimestamps","selection","datetime","tableData","useQueryDbTables","isLoading","isTopGraphLoading","topGraphData","useQueryTopDbOperationsChart","tableGraphLoading","tableGraphData","useQueryTopTablesChart","seriesByDomain","tpmByDomain","forEach","datum","domain","seriesName","p50","interval","count","topDomains","values","series","zeroFillSeries","moment","tpmDomains","tpmByQuery","seriesByQuery","chartColors","charts","getColorPalette","gray300","useSynchronizeCharts","Fragment","ChartsContainer","ChartsContainerItem","ChartPanel","Chart","height","start","end","utc","grid","left","right","top","bottom","definedAxisTicks","isLineChart","showLegend","Selectors","CompactSelect","triggerProps","menuTitle","opt","DatabaseModule","location","useLocation","useOrganization","EventView","setTable","filterNew","setFilterNew","filterOld","setFilterOld","filterOutlier","setFilterOutlier","setTransaction","setSort","direction","undefined","sortHeader","rows","setRows","selected","prev","isTableDataLoading","isRefetching","isTableRefetching","useQueryMainTable","sortKey","sortDirection","pageFilters","p95asNumber","setp95asNumber","noP95","setnoP95","projects","environments","useApiQuery","environment","proj","normalizeDateTimeParams","staleTime","dbAggregateData","useQuery","queryKey","queryFn","fetch","HOST","getDbAggregatesQuery","then","res","json","retry","initialData","combinedDbData","combineTableDataWithSparklineData","handleKeyDown","keyCode","currentRow","getUpdatedRows","document","addEventListener","removeEventListener","row","rowIndex","findIndex","group_id","prevRow","nextRow","setSelectedRow","Layout","PageErrorProvider","fullWidth","PageErrorAlert","FilterOptionsContainer","DatePageFilter","alignDropdown","SearchFilterContainer","LabelledSwitch","isActive","toggle","toggleFilterNew","toggleFilterOld","toggleOutlier","TransactionNameSearchBar","transactionValues","getFilterValues","freeText","DatabaseTableView","isDataLoading","onSelect","onSortChange","selectedRow","QueryDetail","onRowChange","mainTableSort","onClose","unsetSelectedSpanGroup","toggleP95asNumber","toggleNoP95","style","display","gap","paddingRight","alignItems","Switch","aggregateData","momentInterval","startTime","endTime","aggregatesGroupedByQuery","description","p95","throughputSeries","_ref2","p50Series","_ref3","p95Series","_ref4","zeroFilledThroughput","zeroFilledP50","zeroFilledP95","throughput","p50_trend","p95_trend"],"sourceRoot":""}