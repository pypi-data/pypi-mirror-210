{"version":3,"file":"chunks/app_components_collapsePanel_tsx-app_utils_routeAnalytics_useRouteAnalyticsEventNames_tsx-app-91f49e.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/collapsePanel.tsx","webpack:///./app/components/pageTimeRangeSelector.tsx","webpack:///./app/utils/routeAnalytics/useRouteAnalyticsEventNames.tsx","webpack:///./app/views/organizationStats/header.tsx","webpack:///./app/views/organizationStats/teamInsights/controls.tsx","webpack:///./app/views/organizationStats/teamInsights/descriptionCard.tsx","webpack:///./app/views/organizationStats/teamInsights/styles.tsx","webpack:///./app/views/organizationStats/teamInsights/utils.tsx"],"sourcesContent":["import {useState} from 'react';\nimport {css} from '@emotion/react';\nimport styled from '@emotion/styled';\n\nimport {IconChevron, IconList} from 'sentry/icons';\nimport {tct} from 'sentry/locale';\nimport {space} from 'sentry/styles/space';\n\nexport const COLLAPSE_COUNT = 5;\n\ntype ChildRenderProps = {\n  isExpanded: boolean;\n  showMoreButton: React.ReactNode;\n};\n\ntype Props = {\n  children: (props: ChildRenderProps) => JSX.Element;\n  items: number;\n  buttonTitle?: string;\n  collapseCount?: number;\n  disableBorder?: boolean;\n};\n\n/**\n * Used to expand results.\n *\n * Our collapsible component was not used because we want our\n * expand button to be outside the list of children\n *\n */\nfunction CollapsePanel({\n  items,\n  children,\n  buttonTitle,\n  collapseCount = COLLAPSE_COUNT,\n  disableBorder = true,\n}: Props) {\n  const [isExpanded, setIsExpanded] = useState(false);\n  function expandResults() {\n    setIsExpanded(true);\n  }\n\n  return children({\n    isExpanded,\n    showMoreButton:\n      isExpanded || items <= collapseCount ? null : (\n        <ShowMoreButton\n          items={items}\n          buttonTitle={buttonTitle}\n          collapseCount={collapseCount}\n          disableBorder={disableBorder}\n          onClick={expandResults}\n        />\n      ),\n  });\n}\n\ntype ShowMoreButtonProps = {\n  items: number;\n  onClick: () => void;\n  buttonTitle?: string;\n  collapseCount?: number;\n  disableBorder?: boolean;\n};\n\nfunction ShowMoreButton({\n  items,\n  buttonTitle = 'More',\n  collapseCount = COLLAPSE_COUNT,\n  disableBorder = true,\n  onClick,\n}: ShowMoreButtonProps) {\n  return (\n    <ShowMore\n      onClick={onClick}\n      role=\"button\"\n      data-test-id=\"collapse-show-more\"\n      disableBorder={disableBorder}\n    >\n      <ShowMoreText>\n        <StyledIconList color=\"gray300\" />\n        {tct('Show [count] [buttonTitle]', {count: items - collapseCount, buttonTitle})}\n      </ShowMoreText>\n\n      <IconChevron color=\"gray300\" direction=\"down\" />\n    </ShowMore>\n  );\n}\n\nexport default CollapsePanel;\n\nconst ShowMore = styled('div')<{disableBorder: boolean}>`\n  display: flex;\n  align-items: center;\n  padding: ${space(1)} ${space(2)};\n  font-size: ${p => p.theme.fontSizeMedium};\n  color: ${p => p.theme.subText};\n  cursor: pointer;\n  border-top: 1px solid ${p => p.theme.border};\n\n  ${p =>\n    !p.disableBorder &&\n    css`\n      border-left: 1px solid ${p.theme.border};\n      border-right: 1px solid ${p.theme.border};\n      border-bottom: 1px solid ${p.theme.border};\n      border-bottom-left-radius: ${p.theme.borderRadius};\n      border-bottom-right-radius: ${p.theme.borderRadius};\n      margin-bottom: ${space(2)};\n    `}\n`;\n\nconst StyledIconList = styled(IconList)`\n  margin-right: ${space(1)};\n`;\n\nconst ShowMoreText = styled('div')`\n  display: flex;\n  align-items: center;\n  flex-grow: 1;\n`;\n","import styled from '@emotion/styled';\n\nimport TimeRangeSelector from 'sentry/components/organizations/timeRangeSelector';\nimport {Panel} from 'sentry/components/panels';\nimport {t} from 'sentry/locale';\nimport {space} from 'sentry/styles/space';\n\ntype Props = React.ComponentProps<typeof TimeRangeSelector> & {className?: string};\n\nfunction PageTimeRangeSelector({className, ...props}: Props) {\n  return (\n    <DropdownDate className={className}>\n      <TimeRangeSelector\n        key={`period:${props.relative}-start:${props.start}-end:${props.end}-utc:${props.utc}-defaultPeriod:${props.defaultPeriod}`}\n        label={<DropdownLabel>{t('Date Range:')}</DropdownLabel>}\n        detached\n        {...props}\n      />\n    </DropdownDate>\n  );\n}\n\nconst DropdownDate = styled(Panel)`\n  padding: 0;\n  margin: 0;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: ${p => p.theme.form.md.height}px;\n  background: ${p => p.theme.background};\n  border: 1px solid ${p => p.theme.border};\n  border-radius: ${p => p.theme.borderRadius};\n\n  font-size: ${p => p.theme.fontSizeMedium};\n  color: ${p => p.theme.textColor};\n\n  > div {\n    width: 100%;\n    align-self: stretch;\n  }\n  /* StyledItemHeader used to show selected value of TimeRangeSelector */\n  > div > div:first-child > div {\n    padding: 0 ${space(2)};\n  }\n  /* Menu that dropdowns from TimeRangeSelector */\n  > div > div:last-child:not(:first-child) {\n    /* Remove awkward 1px width difference on dropdown due to border */\n    min-width: calc(100% + 2px);\n    transform: translateX(-1px);\n    right: auto;\n  }\n`;\n\nconst DropdownLabel = styled('span')`\n  text-align: left;\n  font-weight: 600;\n  color: ${p => p.theme.textColor};\n\n  > span:last-child {\n    font-weight: 400;\n  }\n`;\n\nexport default PageTimeRangeSelector;\n","import {useContext, useEffect} from 'react';\n\nimport {RouteAnalyticsContext} from 'sentry/views/routeAnalyticsContextProvider';\n\n/**\n * This hook provides custom analytics event names for route based analytics.\n * @param eventKey The key used to identify the event\n * @param eventName The English string used as the event name\n */\nexport default function useRouteAnalyticsEventNames(eventKey: string, eventName: string) {\n  const {setEventNames, previousUrl} = useContext(RouteAnalyticsContext);\n  useEffect(() => {\n    setEventNames(eventKey, eventName);\n  }, [setEventNames, eventKey, eventName, previousUrl]);\n}\n","import {FeatureFeedback} from 'sentry/components/featureFeedback';\nimport * as Layout from 'sentry/components/layouts/thirds';\nimport Link from 'sentry/components/links/link';\nimport {PageHeadingQuestionTooltip} from 'sentry/components/pageHeadingQuestionTooltip';\nimport {t} from 'sentry/locale';\nimport {Organization} from 'sentry/types';\n\ntype Props = {\n  activeTab: 'stats' | 'issues' | 'health';\n  organization: Organization;\n};\n\nfunction StatsHeader({organization, activeTab}: Props) {\n  return (\n    <Layout.Header>\n      <Layout.HeaderContent>\n        <Layout.Title>\n          {t('Stats')}\n          <PageHeadingQuestionTooltip\n            docsUrl=\"https://docs.sentry.io/product/stats/\"\n            title={t(\n              'A view of the usage data that Sentry has received across your entire organization.'\n            )}\n          />\n        </Layout.Title>\n      </Layout.HeaderContent>\n      <Layout.HeaderActions>\n        {activeTab !== 'stats' && (\n          <FeatureFeedback buttonProps={{size: 'sm'}} featureName=\"team-stats\" />\n        )}\n      </Layout.HeaderActions>\n      <Layout.HeaderNavTabs underlined>\n        <li className={`${activeTab === 'stats' ? 'active' : ''}`}>\n          <Link to={`/organizations/${organization.slug}/stats/`}>{t('Usage')}</Link>\n        </li>\n        <li className={`${activeTab === 'issues' ? 'active' : ''}`}>\n          <Link to={`/organizations/${organization.slug}/stats/issues/`}>\n            {t('Issues')}\n          </Link>\n        </li>\n        <li className={`${activeTab === 'health' ? 'active' : ''}`}>\n          <Link to={`/organizations/${organization.slug}/stats/health/`}>\n            {t('Health')}\n          </Link>\n        </li>\n      </Layout.HeaderNavTabs>\n    </Layout.Header>\n  );\n}\n\nexport default StatsHeader;\n","import {RouteComponentProps} from 'react-router';\nimport {useTheme} from '@emotion/react';\nimport styled from '@emotion/styled';\nimport {LocationDescriptorObject} from 'history';\nimport pick from 'lodash/pick';\nimport uniq from 'lodash/uniq';\nimport moment from 'moment';\n\nimport SelectControl from 'sentry/components/forms/controls/selectControl';\nimport {ChangeData} from 'sentry/components/organizations/timeRangeSelector';\nimport PageTimeRangeSelector from 'sentry/components/pageTimeRangeSelector';\nimport TeamSelector from 'sentry/components/teamSelector';\nimport {t} from 'sentry/locale';\nimport {space} from 'sentry/styles/space';\nimport {DateString, TeamWithProjects} from 'sentry/types';\nimport {isActiveSuperuser} from 'sentry/utils/isActiveSuperuser';\nimport localStorage from 'sentry/utils/localStorage';\nimport useOrganization from 'sentry/utils/useOrganization';\nimport useProjects from 'sentry/utils/useProjects';\n\nimport {dataDatetime} from './utils';\n\nconst INSIGHTS_DEFAULT_STATS_PERIOD = '8w';\n\nconst PAGE_QUERY_PARAMS = [\n  'pageStatsPeriod',\n  'pageStart',\n  'pageEnd',\n  'pageUtc',\n  'dataCategory',\n  'transform',\n  'sort',\n  'query',\n  'cursor',\n  'team',\n  'environment',\n];\n\ntype Props = Pick<RouteComponentProps<{}, {}>, 'router' | 'location'> & {\n  currentEnvironment?: string;\n  currentTeam?: TeamWithProjects;\n  showEnvironment?: boolean;\n};\n\nfunction TeamStatsControls({\n  location,\n  router,\n  currentTeam,\n  currentEnvironment,\n  showEnvironment,\n}: Props) {\n  const {projects} = useProjects({\n    slugs: currentTeam?.projects.map(project => project.slug) ?? [],\n  });\n  const organization = useOrganization();\n  const isSuperuser = isActiveSuperuser();\n  const theme = useTheme();\n\n  const query = location?.query ?? {};\n  const localStorageKey = `teamInsightsSelectedTeamId:${organization.slug}`;\n\n  function handleChangeTeam(teamId: string) {\n    localStorage.setItem(localStorageKey, teamId);\n    // TODO(workflow): Preserve environment if it exists for the new team\n    setStateOnUrl({team: teamId, environment: undefined});\n  }\n\n  function handleEnvironmentChange({value}: {label: string; value: string}) {\n    if (value === '') {\n      setStateOnUrl({environment: undefined});\n    } else {\n      setStateOnUrl({environment: value});\n    }\n  }\n\n  function handleUpdateDatetime(datetime: ChangeData): LocationDescriptorObject {\n    const {start, end, relative, utc} = datetime;\n\n    if (start && end) {\n      const parser = utc ? moment.utc : moment;\n\n      return setStateOnUrl({\n        pageStatsPeriod: undefined,\n        pageStart: parser(start).format(),\n        pageEnd: parser(end).format(),\n        pageUtc: utc ?? undefined,\n      });\n    }\n\n    return setStateOnUrl({\n      pageStatsPeriod: relative || undefined,\n      pageStart: undefined,\n      pageEnd: undefined,\n      pageUtc: undefined,\n    });\n  }\n\n  function setStateOnUrl(nextState: {\n    environment?: string;\n    pageEnd?: DateString;\n    pageStart?: DateString;\n    pageStatsPeriod?: string | null;\n    pageUtc?: boolean | null;\n    team?: string;\n  }): LocationDescriptorObject {\n    const nextQueryParams = pick(nextState, PAGE_QUERY_PARAMS);\n\n    const nextLocation = {\n      ...location,\n      query: {\n        ...query,\n        ...nextQueryParams,\n      },\n    };\n\n    router.push(nextLocation);\n\n    return nextLocation;\n  }\n\n  const {period, start, end, utc} = dataDatetime(query);\n  const environmentOptions = uniq(\n    projects.map(project => project.environments).flat()\n  ).map(env => ({label: env, value: env}));\n\n  return (\n    <ControlsWrapper showEnvironment={showEnvironment}>\n      <StyledTeamSelector\n        name=\"select-team\"\n        inFieldLabel={t('Team: ')}\n        value={currentTeam?.slug}\n        onChange={choice => handleChangeTeam(choice.actor.id)}\n        teamFilter={isSuperuser ? undefined : filterTeam => filterTeam.isMember}\n        styles={{\n          singleValue(provided: any) {\n            const custom = {\n              display: 'flex',\n              justifyContent: 'space-between',\n              alignItems: 'center',\n              fontSize: theme.fontSizeMedium,\n              ':before': {\n                ...provided[':before'],\n                color: theme.textColor,\n                marginRight: space(1.5),\n                marginLeft: space(0.5),\n              },\n            };\n            return {...provided, ...custom};\n          },\n          input: (provided: any, state: any) => ({\n            ...provided,\n            display: 'grid',\n            gridTemplateColumns: 'max-content 1fr',\n            alignItems: 'center',\n            gridGap: space(1),\n            ':before': {\n              backgroundColor: state.theme.backgroundSecondary,\n              height: 24,\n              width: 38,\n              borderRadius: 3,\n              content: '\"\"',\n              display: 'block',\n            },\n          }),\n        }}\n      />\n      {showEnvironment && (\n        <SelectControl\n          options={[\n            {\n              value: '',\n              label: t('All'),\n            },\n            ...environmentOptions,\n          ]}\n          value={currentEnvironment ?? ''}\n          onChange={handleEnvironmentChange}\n          styles={{\n            input: (provided: any) => ({\n              ...provided,\n              display: 'grid',\n              gridTemplateColumns: 'max-content 1fr',\n              alignItems: 'center',\n              gridGap: space(1),\n              ':before': {\n                height: 24,\n                width: 90,\n                borderRadius: 3,\n                content: '\"\"',\n                display: 'block',\n              },\n            }),\n            control: (base: any) => ({\n              ...base,\n              boxShadow: 'none',\n            }),\n            singleValue: (base: any) => ({\n              ...base,\n              fontSize: theme.fontSizeMedium,\n              display: 'flex',\n              ':before': {\n                ...base[':before'],\n                color: theme.textColor,\n                marginRight: space(1.5),\n              },\n            }),\n          }}\n          inFieldLabel={t('Environment:')}\n        />\n      )}\n      <StyledPageTimeRangeSelector\n        organization={organization}\n        relative={period ?? ''}\n        start={start ?? null}\n        end={end ?? null}\n        utc={utc ?? null}\n        onUpdate={handleUpdateDatetime}\n        showAbsolute={false}\n        relativeOptions={{\n          '14d': t('Last 2 weeks'),\n          '4w': t('Last 4 weeks'),\n          [INSIGHTS_DEFAULT_STATS_PERIOD]: t('Last 8 weeks'),\n          '12w': t('Last 12 weeks'),\n        }}\n      />\n    </ControlsWrapper>\n  );\n}\n\nexport default TeamStatsControls;\n\nconst ControlsWrapper = styled('div')<{showEnvironment?: boolean}>`\n  display: grid;\n  align-items: center;\n  gap: ${space(2)};\n  margin-bottom: ${space(2)};\n\n  @media (min-width: ${p => p.theme.breakpoints.small}) {\n    grid-template-columns: 246px ${p => (p.showEnvironment ? '246px' : '')} 1fr;\n  }\n`;\n\nconst StyledTeamSelector = styled(TeamSelector)`\n  & > div {\n    box-shadow: ${p => p.theme.dropShadowMedium};\n  }\n`;\n\nconst StyledPageTimeRangeSelector = styled(PageTimeRangeSelector)`\n  div {\n    min-height: unset;\n  }\n`;\n","import styled from '@emotion/styled';\n\nimport {space} from 'sentry/styles/space';\n\ntype Props = {\n  children: React.ReactNode;\n  description: React.ReactNode;\n  title: string;\n};\n\nfunction DescriptionCard({title, description, children}: Props) {\n  return (\n    <Wrapper>\n      <LeftPanel>\n        <Title>{title}</Title>\n        <Description>{description}</Description>\n      </LeftPanel>\n      <RightPanel>{children}</RightPanel>\n    </Wrapper>\n  );\n}\n\nexport default DescriptionCard;\n\nconst Wrapper = styled('div')`\n  border: 1px solid ${p => p.theme.border};\n  border-radius: ${p => p.theme.borderRadius};\n  display: flex;\n  margin-bottom: ${space(3)};\n  flex-direction: column;\n\n  @media (min-width: ${p => p.theme.breakpoints.medium}) {\n    flex-direction: row;\n  }\n`;\n\nconst LeftPanel = styled('div')`\n  padding: ${space(2)} ${space(2)};\n  border-bottom: 1px solid ${p => p.theme.border};\n\n  @media (min-width: ${p => p.theme.breakpoints.medium}) {\n    max-width: 250px;\n    border-right: 1px solid ${p => p.theme.border};\n    border-bottom: 0;\n  }\n`;\n\nconst Title = styled('div')`\n  font-size: ${p => p.theme.fontSizeLarge};\n  margin: 0 0 ${space(0.5)};\n`;\n\nconst Description = styled('div')`\n  color: ${p => p.theme.subText};\n  font-size: ${p => p.theme.fontSizeMedium};\n`;\n\nconst RightPanel = styled('div')`\n  flex-grow: 1;\n`;\n","import styled from '@emotion/styled';\n\nimport IdBadge from 'sentry/components/idBadge';\n\nexport const ProjectBadgeContainer = styled('div')`\n  display: flex;\n  align-items: center;\n`;\n\nexport const ProjectBadge = styled(IdBadge)`\n  flex-shrink: 0;\n`;\n","import moment from 'moment';\n\nimport BaseChart from 'sentry/components/charts/baseChart';\nimport {DateTimeObject} from 'sentry/components/charts/utils';\nimport {normalizeDateTimeParams} from 'sentry/components/organizations/pageFilters/parse';\nimport type {SeriesDataUnit} from 'sentry/types/echarts';\n\n/**\n * Buckets a week of sequential days into one data unit\n */\nexport function sortSeriesByDay(data: SeriesDataUnit[]): SeriesDataUnit[] {\n  return data.sort((a, b) => new Date(a.name).getTime() - new Date(b.name).getTime());\n}\n\n/**\n * Convert an object with date as the key to a series\n */\nexport function convertDayValueObjectToSeries(\n  data: Record<string, number>\n): SeriesDataUnit[] {\n  return Object.entries(data).map(([bucket, count]) => ({\n    value: count,\n    name: new Date(bucket).getTime(),\n  }));\n}\n\n/**\n * Takes a sorted array of trend items and groups them by worst/better/no chagne\n */\nexport function groupByTrend<T extends {trend: number}>(data: T[]): T[] {\n  const worseItems = data.filter(x => Math.round(x.trend) < 0);\n  const betterItems = data.filter(x => Math.round(x.trend) > 0);\n  const zeroItems = data.filter(x => Math.round(x.trend) === 0);\n  return [...worseItems, ...betterItems, ...zeroItems];\n}\n\nexport const barAxisLabel = (\n  dataEntries: number\n): React.ComponentProps<typeof BaseChart>['xAxis'] => {\n  return {\n    splitNumber: Math.max(Math.round(dataEntries / 7), 4),\n    type: 'category',\n    axisTick: {\n      alignWithLabel: true,\n    },\n    axisLabel: {\n      formatter: (date: string) => {\n        return moment(new Date(Number(date))).format('MMM D');\n      },\n    },\n  };\n};\n\nconst INSIGHTS_DEFAULT_STATS_PERIOD = '8w';\n\nexport function dataDatetime(\n  query: Parameters<typeof normalizeDateTimeParams>[0]\n): DateTimeObject {\n  const {\n    start,\n    end,\n    statsPeriod,\n    utc: utcString,\n  } = normalizeDateTimeParams(query, {\n    allowEmptyPeriod: true,\n    allowAbsoluteDatetime: true,\n    allowAbsolutePageDatetime: true,\n  });\n\n  if (!statsPeriod && !start && !end) {\n    return {period: INSIGHTS_DEFAULT_STATS_PERIOD};\n  }\n\n  // Following getParams, statsPeriod will take priority over start/end\n  if (statsPeriod) {\n    return {period: statsPeriod};\n  }\n\n  const utc = utcString === 'true';\n  if (start && end) {\n    return utc\n      ? {\n          start: moment.utc(start).format(),\n          end: moment.utc(end).format(),\n          utc,\n        }\n      : {\n          start: moment(start).utc().format(),\n          end: moment(end).utc().format(),\n          utc,\n        };\n  }\n\n  return {period: INSIGHTS_DEFAULT_STATS_PERIOD};\n}\n"],"names":["COLLAPSE_COUNT","ShowMoreButton","_ref2","items","buttonTitle","collapseCount","disableBorder","onClick","_jsxs","ShowMore","role","children","ShowMoreText","_jsx","StyledIconList","color","tct","count","IconChevron","direction","displayName","_ref","isExpanded","setIsExpanded","useState","showMoreButton","_styled","target","space","p","theme","fontSizeMedium","subText","border","css","borderRadius","IconList","name","styles","PageTimeRangeSelector","className","props","DropdownDate","TimeRangeSelector","label","DropdownLabel","t","detached","relative","start","end","utc","defaultPeriod","Panel","form","md","height","background","textColor","useRouteAnalyticsEventNames","eventKey","eventName","setEventNames","previousUrl","useContext","RouteAnalyticsContext","useEffect","StatsHeader","organization","activeTab","Layout","PageHeadingQuestionTooltip","docsUrl","title","FeatureFeedback","buttonProps","size","featureName","underlined","Link","to","slug","PAGE_QUERY_PARAMS","TeamStatsControls","location","router","currentTeam","currentEnvironment","showEnvironment","projects","useProjects","slugs","map","project","useOrganization","isSuperuser","isActiveSuperuser","useTheme","query","localStorageKey","setStateOnUrl","nextState","nextQueryParams","pick","nextLocation","push","period","dataDatetime","environmentOptions","uniq","environments","flat","env","value","ControlsWrapper","StyledTeamSelector","inFieldLabel","onChange","choice","handleChangeTeam","teamId","actor","id","localStorage","team","environment","undefined","teamFilter","filterTeam","isMember","singleValue","provided","custom","display","justifyContent","alignItems","fontSize","marginRight","marginLeft","input","state","gridTemplateColumns","gridGap","backgroundColor","backgroundSecondary","width","content","SelectControl","options","control","base","boxShadow","StyledPageTimeRangeSelector","onUpdate","datetime","parser","moment","pageStatsPeriod","pageStart","format","pageEnd","pageUtc","showAbsolute","relativeOptions","breakpoints","small","TeamSelector","dropShadowMedium","DescriptionCard","description","Wrapper","LeftPanel","Title","Description","RightPanel","medium","fontSizeLarge","ProjectBadgeContainer","ProjectBadge","IdBadge","sortSeriesByDay","data","sort","a","b","Date","getTime","convertDayValueObjectToSeries","Object","entries","bucket","groupByTrend","filter","x","Math","round","trend","barAxisLabel","dataEntries","splitNumber","max","type","axisTick","alignWithLabel","axisLabel","formatter","date","Number","INSIGHTS_DEFAULT_STATS_PERIOD","statsPeriod","utcString","normalizeDateTimeParams","allowEmptyPeriod","allowAbsoluteDatetime","allowAbsolutePageDatetime"],"sourceRoot":""}