{"version":3,"file":"chunks/app_views_monitors_edit_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"6/BAoBe,SAASA,IACtB,MAAM,YAACC,IAAeC,EAAAA,EAAAA,MAChB,UAACC,IAAaC,EAAAA,EAAAA,KACdC,GAAeC,EAAAA,EAAAA,KACfC,GAAcC,EAAAA,EAAAA,MAEdC,EAAe,kBAAiBJ,EAAaK,iBAAiBT,MAE9D,UACJU,EAAS,QACTC,EACAC,KAAMC,EAAO,QACbC,IACEC,EAAAA,EAAAA,IAAqB,CAACP,GAAc,CACtCQ,UAAW,IAoBb,OAAIN,GACKO,EAAAA,EAAAA,IAACC,EAAAA,EAAgB,IAGtBP,GACKM,EAAAA,EAAAA,IAACE,EAAAA,EAAY,CAACC,QAASN,EAASO,QAAQ,6BAI/CJ,EAAAA,EAAAA,IAACK,EAAAA,EAAmB,CAACC,MAfjBV,EACM,GAAEA,EAAQW,kBAAkBpB,EAAaK,OAE3C,WAAUL,EAAaK,OAYQgB,UACrCC,EAAAA,EAAAA,IAACC,EAAAA,GAAW,CAAAF,SAAA,EACVR,EAAAA,EAAAA,IAACU,EAAAA,GAAa,CAAAF,UACZC,EAAAA,EAAAA,IAACC,EAAAA,GAAoB,CAAAF,SAAA,EACnBR,EAAAA,EAAAA,IAACW,EAAAA,EAAW,CACVC,OAAQ,CACN,CACEC,OAAOC,EAAAA,EAAAA,GAAE,SACTC,IAAIC,EAAAA,EAAAA,GAAc,kBAAiB7B,EAAaK,gBAElD,CACEqB,OACEJ,EAAAA,EAAAA,IAACQ,EAAiB,CAAAT,SAAA,EAChBR,EAAAA,EAAAA,IAACkB,EAAAA,EAAO,CACNC,QAASvB,EAAQuB,QACjBC,WAAY,GACZC,UAAQ,EACRC,YAAa,CAACC,YAAY,EAAMC,QAAS5B,EAAQuB,QAAQ3B,QAE1DI,EAAQW,QAGbQ,IAAIC,EAAAA,EAAAA,GACD,kBAAiB7B,EAAaK,cAAcI,EAAQJ,UAGzD,CACEqB,OAAOC,EAAAA,EAAAA,GAAE,aAIfd,EAAAA,EAAAA,IAACU,EAAAA,GAAY,CAAAF,UAAEM,EAAAA,EAAAA,GAAE,wBAGrBd,EAAAA,EAAAA,IAACU,EAAAA,GAAW,CAAAF,UACVR,EAAAA,EAAAA,IAACU,EAAAA,GAAW,CAACe,WAAS,EAAAjB,UACpBR,EAAAA,EAAAA,IAAC0B,EAAAA,EAAW,CACV9B,QAASA,EACT+B,UAAU,MACVC,YAAc,kBAAiBzC,EAAaK,iBAAiBI,EAAQJ,QACrEqC,gBAlEZ,SAAyBlC,IACvBmC,EAAAA,EAAAA,IAAgBzC,EAAa,CAACE,GAAcI,GAC5CoC,EAAAA,eAAAA,MACEf,EAAAA,EAAAA,GAAa,CACXgB,SAAW,kBAAiB7C,EAAaK,cAAcG,EAAKH,QAC5DyC,MAAO,CAACC,YAAajD,EAAUkD,gBAGrC,YAiEF,CA1FwBrD,EAAWsD,YAAA,cA4FnC,MAAMnB,GAAoBoB,EAAAA,EAAAA,GAAO,MAAK,CAAAC,OAAA,YAAZD,CAAa,qBAE9BE,EAAAA,EAAAA,GAAM,GAAE,uB","sources":["webpack:///./app/views/monitors/edit.tsx"],"sourcesContent":["import {browserHistory} from 'react-router';\nimport styled from '@emotion/styled';\n\nimport Breadcrumbs from 'sentry/components/breadcrumbs';\nimport IdBadge from 'sentry/components/idBadge';\nimport * as Layout from 'sentry/components/layouts/thirds';\nimport LoadingError from 'sentry/components/loadingError';\nimport LoadingIndicator from 'sentry/components/loadingIndicator';\nimport SentryDocumentTitle from 'sentry/components/sentryDocumentTitle';\nimport {t} from 'sentry/locale';\nimport {space} from 'sentry/styles/space';\nimport {setApiQueryData, useApiQuery, useQueryClient} from 'sentry/utils/queryClient';\nimport useOrganization from 'sentry/utils/useOrganization';\nimport usePageFilters from 'sentry/utils/usePageFilters';\nimport {useParams} from 'sentry/utils/useParams';\nimport {normalizeUrl} from 'sentry/utils/withDomainRequired';\n\nimport MonitorForm from './components/monitorForm';\nimport {Monitor} from './types';\n\nexport default function EditMonitor() {\n  const {monitorSlug} = useParams();\n  const {selection} = usePageFilters();\n  const organization = useOrganization();\n  const queryClient = useQueryClient();\n\n  const queryKeyUrl = `/organizations/${organization.slug}/monitors/${monitorSlug}/`;\n\n  const {\n    isLoading,\n    isError,\n    data: monitor,\n    refetch,\n  } = useApiQuery<Monitor>([queryKeyUrl], {\n    staleTime: 0,\n  });\n\n  function onSubmitSuccess(data: Monitor) {\n    setApiQueryData(queryClient, [queryKeyUrl], data);\n    browserHistory.push(\n      normalizeUrl({\n        pathname: `/organizations/${organization.slug}/crons/${data.slug}/`,\n        query: {environment: selection.environments},\n      })\n    );\n  }\n\n  function getTitle() {\n    if (monitor) {\n      return `${monitor.name} - Crons - ${organization.slug}`;\n    }\n    return `Crons - ${organization.slug}`;\n  }\n\n  if (isLoading) {\n    return <LoadingIndicator />;\n  }\n\n  if (isError) {\n    return <LoadingError onRetry={refetch} message=\"Failed to load monitor.\" />;\n  }\n\n  return (\n    <SentryDocumentTitle title={getTitle()}>\n      <Layout.Page>\n        <Layout.Header>\n          <Layout.HeaderContent>\n            <Breadcrumbs\n              crumbs={[\n                {\n                  label: t('Crons'),\n                  to: normalizeUrl(`/organizations/${organization.slug}/crons/`),\n                },\n                {\n                  label: (\n                    <MonitorBreadcrumb>\n                      <IdBadge\n                        project={monitor.project}\n                        avatarSize={16}\n                        hideName\n                        avatarProps={{hasTooltip: true, tooltip: monitor.project.slug}}\n                      />\n                      {monitor.name}\n                    </MonitorBreadcrumb>\n                  ),\n                  to: normalizeUrl(\n                    `/organizations/${organization.slug}/crons/${monitor.slug}/`\n                  ),\n                },\n                {\n                  label: t('Edit'),\n                },\n              ]}\n            />\n            <Layout.Title>{t('Edit Monitor')}</Layout.Title>\n          </Layout.HeaderContent>\n        </Layout.Header>\n        <Layout.Body>\n          <Layout.Main fullWidth>\n            <MonitorForm\n              monitor={monitor}\n              apiMethod=\"PUT\"\n              apiEndpoint={`/organizations/${organization.slug}/monitors/${monitor.slug}/`}\n              onSubmitSuccess={onSubmitSuccess}\n            />\n          </Layout.Main>\n        </Layout.Body>\n      </Layout.Page>\n    </SentryDocumentTitle>\n  );\n}\n\nconst MonitorBreadcrumb = styled('div')`\n  display: flex;\n  gap: ${space(1)};\n  align-items: center;\n`;\n"],"names":["EditMonitor","monitorSlug","useParams","selection","usePageFilters","organization","useOrganization","queryClient","useQueryClient","queryKeyUrl","slug","isLoading","isError","data","monitor","refetch","useApiQuery","staleTime","_jsx","LoadingIndicator","LoadingError","onRetry","message","SentryDocumentTitle","title","name","children","_jsxs","Layout","Breadcrumbs","crumbs","label","t","to","normalizeUrl","MonitorBreadcrumb","IdBadge","project","avatarSize","hideName","avatarProps","hasTooltip","tooltip","fullWidth","MonitorForm","apiMethod","apiEndpoint","onSubmitSuccess","setApiQueryData","browserHistory","pathname","query","environment","environments","displayName","_styled","target","space"],"sourceRoot":""}