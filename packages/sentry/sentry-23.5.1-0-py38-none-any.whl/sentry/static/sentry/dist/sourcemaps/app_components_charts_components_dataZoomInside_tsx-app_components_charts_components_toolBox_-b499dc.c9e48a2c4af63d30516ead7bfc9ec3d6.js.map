{"version":3,"file":"chunks/app_components_charts_components_dataZoomInside_tsx-app_components_charts_components_toolBox_-b499dc.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/charts/components/dataZoomInside.tsx","webpack:///./app/components/charts/components/toolBox.tsx","webpack:///./app/components/charts/lineChart.tsx","webpack:///./app/components/charts/loadingPanel.tsx","webpack:///./app/components/charts/transparentLoadingMask.tsx","webpack:///./app/components/events/searchBar.tsx","webpack:///./app/components/loadingMask.tsx","webpack:///./app/utils/withTags.tsx","webpack:///./app/views/performance/trends/content.tsx","webpack:///./app/views/performance/trends/index.tsx","webpack:///../node_modules/lodash/assign.js"],"sourcesContent":["import 'echarts/lib/component/dataZoomInside';\n\nimport type {InsideDataZoomComponentOption} from 'echarts';\n\nconst DEFAULT: InsideDataZoomComponentOption = {\n  type: 'inside',\n  // Mouse wheel can not trigger zoom\n  zoomOnMouseWheel: false,\n  // The translation (by mouse drag or touch drag) is available but zoom is not\n  zoomLock: true,\n  throttle: 50,\n};\n\nexport default function DataZoomInside(\n  props: InsideDataZoomComponentOption | InsideDataZoomComponentOption[]\n): InsideDataZoomComponentOption[] {\n  // `props` can be boolean, if so return default\n  if (!props || !Array.isArray(props)) {\n    const dataZoom = {\n      ...DEFAULT,\n      ...props,\n    };\n    return [dataZoom];\n  }\n\n  return props;\n}\n","import type {ToolboxComponentOption} from 'echarts';\n\nfunction getFeatures({\n  dataZoom,\n  ...features\n}: ToolboxComponentOption['feature'] = {}): ToolboxComponentOption['feature'] {\n  return {\n    ...(dataZoom\n      ? {\n          dataZoom: {\n            yAxisIndex: 'none',\n            title: {\n              zoom: 'zoom',\n              back: 'undo',\n            },\n            ...dataZoom,\n          },\n        }\n      : {}),\n    ...features,\n  };\n}\n\nexport default function ToolBox(\n  options: ToolboxComponentOption,\n  features: ToolboxComponentOption['feature']\n): ToolboxComponentOption {\n  return {\n    right: 0,\n    top: 0,\n    itemSize: 16,\n    // Stack the toolbox under the legend.\n    // so all series names are clickable.\n    z: -1,\n\n    feature: getFeatures(features),\n    ...options,\n  };\n}\n","import type {LineSeriesOption} from 'echarts';\n\nimport {Series} from 'sentry/types/echarts';\n\nimport LineSeries from './series/lineSeries';\nimport BaseChart from './baseChart';\n\ntype ChartProps = Omit<React.ComponentProps<typeof BaseChart>, 'css'>;\n\nexport type LineChartSeries = Series &\n  Omit<LineSeriesOption, 'data' | 'name'> & {\n    dataArray?: LineSeriesOption['data'];\n  };\n\nexport interface LineChartProps extends Omit<ChartProps, 'series'> {\n  series: LineChartSeries[];\n  additionalSeries?: LineSeriesOption[];\n  seriesOptions?: LineSeriesOption;\n}\n\nexport function LineChart({series, seriesOptions, ...props}: LineChartProps) {\n  return (\n    <BaseChart\n      {...props}\n      series={series.map(({seriesName, data, dataArray, ...options}) =>\n        LineSeries({\n          ...seriesOptions,\n          ...options,\n          name: seriesName,\n          data: dataArray || data?.map(({value, name}) => [name, value]),\n          animation: false,\n          animationThreshold: 1,\n          animationDuration: 0,\n        })\n      )}\n    />\n  );\n}\n","import styled from '@emotion/styled';\n\nimport LoadingMask from 'sentry/components/loadingMask';\n\ninterface Props extends React.HTMLAttributes<HTMLDivElement> {\n  height?: string;\n}\n\nconst LoadingPanel = styled(({height: _height, ...props}: Props) => (\n  <div {...props}>\n    <LoadingMask />\n  </div>\n))`\n  flex: 1;\n  flex-shrink: 0;\n  overflow: hidden;\n  height: ${p => p.height};\n  position: relative;\n  border-color: transparent;\n  margin-bottom: 0;\n`;\n\nLoadingPanel.defaultProps = {\n  height: '200px',\n};\n\nexport default LoadingPanel;\n","import styled from '@emotion/styled';\n\nimport LoadingMask, {LoadingMaskProps} from 'sentry/components/loadingMask';\n\ninterface TransparentLoadingMaskProps extends LoadingMaskProps {\n  visible: boolean;\n  children?: React.ReactNode;\n  className?: string;\n}\n\nconst TransparentLoadingMask = styled(\n  ({className, visible, children, ...props}: TransparentLoadingMaskProps) => {\n    const other = visible ? {...props, 'data-test-id': 'loading-placeholder'} : props;\n    return (\n      <LoadingMask className={className} {...other}>\n        {children}\n      </LoadingMask>\n    );\n  }\n)<TransparentLoadingMaskProps>`\n  ${p => !p.visible && 'display: none;'};\n  opacity: 0.4;\n  z-index: 1;\n`;\n\nexport default TransparentLoadingMask;\n","import {useEffect, useMemo} from 'react';\nimport assign from 'lodash/assign';\nimport flatten from 'lodash/flatten';\nimport memoize from 'lodash/memoize';\nimport omit from 'lodash/omit';\n\nimport {fetchTagValues} from 'sentry/actionCreators/tags';\nimport SmartSearchBar from 'sentry/components/smartSearchBar';\nimport {NEGATION_OPERATOR, SEARCH_WILDCARD} from 'sentry/constants';\nimport {Organization, SavedSearchType, TagCollection} from 'sentry/types';\nimport {defined} from 'sentry/utils';\nimport {CustomMeasurementCollection} from 'sentry/utils/customMeasurements/customMeasurements';\nimport {\n  Field,\n  FIELD_TAGS,\n  isAggregateField,\n  isEquation,\n  isMeasurement,\n  SEMVER_TAGS,\n  SPAN_OP_BREAKDOWN_FIELDS,\n  TRACING_FIELDS,\n} from 'sentry/utils/discover/fields';\nimport {\n  DEVICE_CLASS_TAG_VALUES,\n  FieldKey,\n  FieldKind,\n  isDeviceClass,\n} from 'sentry/utils/fields';\nimport Measurements from 'sentry/utils/measurements/measurements';\nimport useApi from 'sentry/utils/useApi';\nimport withTags from 'sentry/utils/withTags';\nimport {isCustomMeasurement} from 'sentry/views/dashboards/utils';\n\nconst SEARCH_SPECIAL_CHARS_REGEXP = new RegExp(\n  `^${NEGATION_OPERATOR}|\\\\${SEARCH_WILDCARD}`,\n  'g'\n);\n\nconst STATIC_FIELD_TAGS_SET = new Set(Object.keys(FIELD_TAGS));\nconst getFunctionTags = (fields: Readonly<Field[]> | undefined) => {\n  if (!fields?.length) {\n    return [];\n  }\n  return fields.reduce((acc, item) => {\n    if (\n      !STATIC_FIELD_TAGS_SET.has(item.field) &&\n      !isEquation(item.field) &&\n      !isCustomMeasurement(item.field)\n    ) {\n      acc[item.field] = {key: item.field, name: item.field, kind: FieldKind.FUNCTION};\n    }\n\n    return acc;\n  }, {});\n};\n\nconst getMeasurementTags = (\n  measurements: Parameters<\n    React.ComponentProps<typeof Measurements>['children']\n  >[0]['measurements'],\n  customMeasurements:\n    | Parameters<React.ComponentProps<typeof Measurements>['children']>[0]['measurements']\n    | undefined\n) => {\n  const measurementsWithKind = Object.keys(measurements).reduce((tags, key) => {\n    tags[key] = {\n      ...measurements[key],\n      kind: FieldKind.MEASUREMENT,\n    };\n    return tags;\n  }, {});\n\n  if (!customMeasurements) {\n    return measurementsWithKind;\n  }\n\n  return Object.keys(customMeasurements).reduce((tags, key) => {\n    tags[key] = {\n      ...customMeasurements[key],\n      kind: FieldKind.MEASUREMENT,\n    };\n    return tags;\n  }, measurementsWithKind);\n};\n\nconst STATIC_FIELD_TAGS = Object.keys(FIELD_TAGS).reduce((tags, key) => {\n  tags[key] = {\n    ...FIELD_TAGS[key],\n    kind: FieldKind.FIELD,\n  };\n  return tags;\n}, {});\n\nconst STATIC_FIELD_TAGS_WITHOUT_TRACING = omit(STATIC_FIELD_TAGS, TRACING_FIELDS);\n\nconst STATIC_SPAN_TAGS = SPAN_OP_BREAKDOWN_FIELDS.reduce((tags, key) => {\n  tags[key] = {name: key, kind: FieldKind.METRICS};\n  return tags;\n}, {});\n\nconst STATIC_SEMVER_TAGS = Object.keys(SEMVER_TAGS).reduce((tags, key) => {\n  tags[key] = {\n    ...SEMVER_TAGS[key],\n    kind: FieldKind.FIELD,\n  };\n  return tags;\n}, {});\n\nexport type SearchBarProps = Omit<React.ComponentProps<typeof SmartSearchBar>, 'tags'> & {\n  organization: Organization;\n  tags: TagCollection;\n  customMeasurements?: CustomMeasurementCollection;\n  fields?: Readonly<Field[]>;\n  includeSessionTagsValues?: boolean;\n  /**\n   * Used to define the max height of the menu in px.\n   */\n  maxMenuHeight?: number;\n  maxSearchItems?: React.ComponentProps<typeof SmartSearchBar>['maxSearchItems'];\n  omitTags?: string[];\n  projectIds?: number[] | Readonly<number[]>;\n};\n\nfunction SearchBar(props: SearchBarProps) {\n  const {\n    maxSearchItems,\n    organization,\n    tags,\n    omitTags,\n    fields,\n    projectIds,\n    includeSessionTagsValues,\n    maxMenuHeight,\n    customMeasurements,\n  } = props;\n\n  const api = useApi();\n\n  const functionTags = useMemo(() => getFunctionTags(fields), [fields]);\n  const tagsWithKind = useMemo(() => {\n    return Object.keys(tags).reduce((acc, key) => {\n      acc[key] = {\n        ...tags[key],\n        kind: FieldKind.TAG,\n      };\n      return acc;\n    }, {});\n  }, [tags]);\n\n  useEffect(() => {\n    // Clear memoized data on mount to make tests more consistent.\n    getEventFieldValues.cache.clear?.();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [projectIds]);\n\n  // Returns array of tag values that substring match `query`; invokes `callback`\n  // with data when ready\n  const getEventFieldValues = memoize(\n    (tag, query, endpointParams): Promise<string[]> => {\n      const projectIdStrings = (projectIds as Readonly<number>[])?.map(String);\n\n      if (isAggregateField(tag.key) || isMeasurement(tag.key)) {\n        // We can't really auto suggest values for aggregate fields\n        // or measurements, so we simply don't\n        return Promise.resolve([]);\n      }\n\n      // device.class is stored as \"numbers\" in snuba, but we want to suggest high, medium,\n      // and low search filter values because discover maps device.class to these values.\n      if (isDeviceClass(tag.key)) {\n        return Promise.resolve(DEVICE_CLASS_TAG_VALUES);\n      }\n\n      return fetchTagValues({\n        api,\n        orgSlug: organization.slug,\n        tagKey: tag.key,\n        search: query,\n        projectIds: projectIdStrings,\n        endpointParams,\n        // allows searching for tags on transactions as well\n        includeTransactions: true,\n        // allows searching for tags on sessions as well\n        includeSessions: includeSessionTagsValues,\n      }).then(\n        results =>\n          flatten(results.filter(({name}) => defined(name)).map(({name}) => name)),\n        () => {\n          throw new Error('Unable to fetch event field values');\n        }\n      );\n    },\n    ({key}, query) => `${key}-${query}`\n  );\n\n  const getTagList = (\n    measurements: Parameters<\n      React.ComponentProps<typeof Measurements>['children']\n    >[0]['measurements']\n  ) => {\n    const measurementsWithKind = getMeasurementTags(measurements, customMeasurements);\n    const orgHasPerformanceView = organization.features.includes('performance-view');\n\n    const combinedTags: TagCollection = orgHasPerformanceView\n      ? Object.assign(\n          {},\n          measurementsWithKind,\n          functionTags,\n          STATIC_SPAN_TAGS,\n          STATIC_FIELD_TAGS\n        )\n      : Object.assign({}, STATIC_FIELD_TAGS_WITHOUT_TRACING);\n\n    assign(combinedTags, tagsWithKind, STATIC_FIELD_TAGS, STATIC_SEMVER_TAGS);\n\n    combinedTags.has = {\n      key: FieldKey.HAS,\n      name: 'Has property',\n      values: Object.keys(combinedTags).sort((a, b) => {\n        return a.toLowerCase().localeCompare(b.toLowerCase());\n      }),\n      predefined: true,\n      kind: FieldKind.FIELD,\n    };\n\n    const list =\n      omitTags && omitTags.length > 0 ? omit(combinedTags, omitTags) : combinedTags;\n    return list;\n  };\n\n  return (\n    <Measurements>\n      {({measurements}) => (\n        <SmartSearchBar\n          hasRecentSearches\n          savedSearchType={SavedSearchType.EVENT}\n          onGetTagValues={getEventFieldValues}\n          supportedTags={getTagList(measurements)}\n          prepareQuery={query => {\n            // Prepare query string (e.g. strip special characters like negation operator)\n            return query.replace(SEARCH_SPECIAL_CHARS_REGEXP, '');\n          }}\n          maxSearchItems={maxSearchItems}\n          excludedTags={[FieldKey.ENVIRONMENT, FieldKey.TOTAL_COUNT]}\n          maxMenuHeight={maxMenuHeight ?? 300}\n          customPerformanceMetrics={customMeasurements}\n          {...props}\n        />\n      )}\n    </Measurements>\n  );\n}\n\nexport default withTags(SearchBar);\n","import styled from '@emotion/styled';\n\nexport interface LoadingMaskProps extends React.HTMLAttributes<HTMLDivElement> {}\n\nconst LoadingMask = styled('div')<LoadingMaskProps>`\n  background-color: ${p => p.theme.backgroundSecondary};\n  border-radius: ${p => p.theme.borderRadius};\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n`;\n\nexport default LoadingMask;\n","import {Component} from 'react';\n\nimport TagStore from 'sentry/stores/tagStore';\nimport {TagCollection} from 'sentry/types';\nimport getDisplayName from 'sentry/utils/getDisplayName';\n\ntype InjectedTagsProps = {\n  tags: TagCollection;\n};\n\ntype State = {\n  tags: TagCollection;\n};\n\n/**\n * HOC for getting *only* tags from the TagStore.\n */\nfunction withTags<P extends InjectedTagsProps>(WrappedComponent: React.ComponentType<P>) {\n  class WithTags extends Component<Omit<P, keyof InjectedTagsProps>, State> {\n    static displayName = `withTags(${getDisplayName(WrappedComponent)})`;\n\n    state: State = {\n      tags: TagStore.getState(),\n    };\n\n    componentWillUnmount() {\n      this.unsubscribe();\n    }\n\n    unsubscribe = TagStore.listen(\n      (tags: TagCollection) => this.setState({tags}),\n      undefined\n    );\n\n    render() {\n      const {tags, ...props} = this.props as P;\n      return <WrappedComponent {...({tags: tags ?? this.state.tags, ...props} as P)} />;\n    }\n  }\n\n  return WithTags;\n}\n\nexport default withTags;\n","import {Component, Fragment} from 'react';\nimport {browserHistory} from 'react-router';\nimport styled from '@emotion/styled';\nimport {Location} from 'history';\n\nimport Feature from 'sentry/components/acl/feature';\nimport {Alert} from 'sentry/components/alert';\nimport Breadcrumbs from 'sentry/components/breadcrumbs';\nimport {CompactSelect} from 'sentry/components/compactSelect';\nimport DatePageFilter from 'sentry/components/datePageFilter';\nimport EnvironmentPageFilter from 'sentry/components/environmentPageFilter';\nimport SearchBar from 'sentry/components/events/searchBar';\nimport * as Layout from 'sentry/components/layouts/thirds';\nimport PageFilterBar from 'sentry/components/organizations/pageFilterBar';\nimport PageFiltersContainer from 'sentry/components/organizations/pageFilters/container';\nimport TransactionNameSearchBar from 'sentry/components/performance/searchBar';\nimport ProjectPageFilter from 'sentry/components/projectPageFilter';\nimport {MAX_QUERY_LENGTH} from 'sentry/constants';\nimport {t} from 'sentry/locale';\nimport {space} from 'sentry/styles/space';\nimport {Organization, PageFilters, Project} from 'sentry/types';\nimport {trackAnalytics} from 'sentry/utils/analytics';\nimport EventView from 'sentry/utils/discover/eventView';\nimport {generateAggregateFields} from 'sentry/utils/discover/fields';\nimport {decodeScalar} from 'sentry/utils/queryString';\nimport {MutableSearch} from 'sentry/utils/tokenizeSearch';\nimport withPageFilters from 'sentry/utils/withPageFilters';\n\nimport {getPerformanceLandingUrl, getTransactionSearchQuery} from '../utils';\n\nimport ChangedTransactions from './changedTransactions';\nimport {TrendChangeType, TrendFunctionField, TrendView} from './types';\nimport {\n  DEFAULT_MAX_DURATION,\n  DEFAULT_TRENDS_STATS_PERIOD,\n  getCurrentTrendFunction,\n  getCurrentTrendParameter,\n  getSelectedQueryKey,\n  modifyTransactionNameTrendsQuery,\n  modifyTrendsViewDefaultPeriod,\n  resetCursors,\n  TRENDS_FUNCTIONS,\n  TRENDS_PARAMETERS,\n} from './utils';\n\ntype Props = {\n  eventView: EventView;\n  location: Location;\n  organization: Organization;\n  projects: Project[];\n  selection: PageFilters;\n};\n\ntype State = {\n  error?: string;\n  previousTrendFunction?: TrendFunctionField;\n};\n\nexport const defaultTrendsSelectionDate = {\n  start: null,\n  end: null,\n  utc: false,\n  period: DEFAULT_TRENDS_STATS_PERIOD,\n};\n\nclass TrendsContent extends Component<Props, State> {\n  state: State = {};\n\n  handleSearch = (searchQuery: string) => {\n    const {location} = this.props;\n\n    const cursors = resetCursors();\n\n    browserHistory.push({\n      pathname: location.pathname,\n      query: {\n        ...location.query,\n        ...cursors,\n        query: String(searchQuery).trim() || undefined,\n      },\n    });\n  };\n\n  setError = (error: string | undefined) => {\n    this.setState({error});\n  };\n\n  handleTrendFunctionChange = (field: string) => {\n    const {organization, location} = this.props;\n\n    const offsets = {};\n\n    Object.values(TrendChangeType).forEach(trendChangeType => {\n      const queryKey = getSelectedQueryKey(trendChangeType);\n      offsets[queryKey] = undefined;\n    });\n\n    trackAnalytics('performance_views.trends.change_function', {\n      organization,\n      function_name: field,\n    });\n\n    this.setState({\n      previousTrendFunction: getCurrentTrendFunction(location).field,\n    });\n\n    const cursors = resetCursors();\n\n    browserHistory.push({\n      pathname: location.pathname,\n      query: {\n        ...location.query,\n        ...offsets,\n        ...cursors,\n        trendFunction: field,\n      },\n    });\n  };\n\n  renderError() {\n    const {error} = this.state;\n\n    if (!error) {\n      return null;\n    }\n\n    return (\n      <Alert type=\"error\" showIcon>\n        {error}\n      </Alert>\n    );\n  }\n\n  handleParameterChange = (label: string) => {\n    const {organization, location} = this.props;\n    const cursors = resetCursors();\n\n    trackAnalytics('performance_views.trends.change_parameter', {\n      organization,\n      parameter_name: label,\n    });\n\n    browserHistory.push({\n      pathname: location.pathname,\n      query: {\n        ...location.query,\n        ...cursors,\n        trendParameter: label,\n      },\n    });\n  };\n\n  getFreeTextFromQuery(query: string) {\n    const conditions = new MutableSearch(query);\n    const transactionValues = conditions.getFilterValues('transaction');\n    if (transactionValues.length) {\n      return transactionValues[0];\n    }\n    if (conditions.freeText.length > 0) {\n      // raw text query will be wrapped in wildcards in generatePerformanceEventView\n      // so no need to wrap it here\n      return conditions.freeText.join(' ');\n    }\n    return '';\n  }\n\n  getPerformanceLink() {\n    const {location} = this.props;\n\n    const newQuery = {\n      ...location.query,\n    };\n    const query = decodeScalar(location.query.query, '');\n    const conditions = new MutableSearch(query);\n\n    // This stops errors from occurring when navigating to other views since we are appending aggregates to the trends view\n    conditions.removeFilter('tpm()');\n    conditions.removeFilter('confidence()');\n    conditions.removeFilter('transaction.duration');\n    newQuery.query = conditions.formatString();\n    return {\n      pathname: getPerformanceLandingUrl(this.props.organization),\n      query: newQuery,\n    };\n  }\n\n  render() {\n    const {organization, eventView, location, projects} = this.props;\n    const {previousTrendFunction} = this.state;\n\n    const trendView = eventView.clone() as TrendView;\n    modifyTrendsViewDefaultPeriod(trendView, location);\n\n    if (organization.features.includes('performance-new-trends')) {\n      modifyTransactionNameTrendsQuery(trendView);\n    }\n\n    const fields = generateAggregateFields(\n      organization,\n      [\n        {\n          field: 'absolute_correlation()',\n        },\n        {\n          field: 'trend_percentage()',\n        },\n        {\n          field: 'trend_difference()',\n        },\n        {\n          field: 'count_percentage()',\n        },\n        {\n          field: 'tpm()',\n        },\n        {\n          field: 'tps()',\n        },\n      ],\n      ['epm()', 'eps()']\n    );\n    const currentTrendFunction = getCurrentTrendFunction(location);\n    const currentTrendParameter = getCurrentTrendParameter(\n      location,\n      projects,\n      eventView.project\n    );\n    const query = getTransactionSearchQuery(location);\n\n    return (\n      <PageFiltersContainer\n        defaultSelection={{\n          datetime: defaultTrendsSelectionDate,\n        }}\n      >\n        <Layout.Header>\n          <Layout.HeaderContent>\n            <Breadcrumbs\n              crumbs={[\n                {\n                  label: 'Performance',\n                  to: this.getPerformanceLink(),\n                },\n                {\n                  label: 'Trends',\n                },\n              ]}\n            />\n            <Layout.Title>{t('Trends')}</Layout.Title>\n          </Layout.HeaderContent>\n        </Layout.Header>\n        <Layout.Body>\n          <Layout.Main fullWidth>\n            <DefaultTrends location={location} eventView={eventView} projects={projects}>\n              <FilterActions>\n                <PageFilterBar condensed>\n                  <ProjectPageFilter />\n                  <EnvironmentPageFilter />\n                  <DatePageFilter alignDropdown=\"left\" />\n                </PageFilterBar>\n                {organization.features.includes('performance-new-trends') ? (\n                  <StyledTransactionNameSearchBar\n                    organization={organization}\n                    eventView={trendView}\n                    onSearch={this.handleSearch}\n                    query={this.getFreeTextFromQuery(query)}\n                  />\n                ) : (\n                  <StyledSearchBar\n                    searchSource=\"trends\"\n                    organization={organization}\n                    projectIds={trendView.project}\n                    query={query}\n                    fields={fields}\n                    onSearch={this.handleSearch}\n                    maxQueryLength={MAX_QUERY_LENGTH}\n                  />\n                )}\n                <CompactSelect\n                  triggerProps={{prefix: t('Percentile')}}\n                  value={currentTrendFunction.field}\n                  options={TRENDS_FUNCTIONS.map(({label, field}) => ({\n                    value: field,\n                    label,\n                  }))}\n                  onChange={opt => this.handleTrendFunctionChange(opt.value)}\n                />\n                <CompactSelect\n                  triggerProps={{prefix: t('Parameter')}}\n                  value={currentTrendParameter.label}\n                  options={TRENDS_PARAMETERS.map(({label}) => ({\n                    value: label,\n                    label,\n                  }))}\n                  onChange={opt => this.handleParameterChange(opt.value)}\n                />\n              </FilterActions>\n              <ListContainer>\n                <ChangedTransactions\n                  trendChangeType={TrendChangeType.IMPROVED}\n                  previousTrendFunction={previousTrendFunction}\n                  trendView={trendView}\n                  location={location}\n                  setError={this.setError}\n                  withBreakpoint={organization.features.includes(\n                    'performance-new-trends'\n                  )}\n                />\n                <ChangedTransactions\n                  trendChangeType={TrendChangeType.REGRESSION}\n                  previousTrendFunction={previousTrendFunction}\n                  trendView={trendView}\n                  location={location}\n                  setError={this.setError}\n                  withBreakpoint={organization.features.includes(\n                    'performance-new-trends'\n                  )}\n                />\n              </ListContainer>\n              <Feature features={['organizations:performance-trendsv2-dev-only']}>\n                <ListContainer>\n                  <ChangedTransactions\n                    trendChangeType={TrendChangeType.IMPROVED}\n                    previousTrendFunction={previousTrendFunction}\n                    trendView={trendView}\n                    location={location}\n                    setError={this.setError}\n                  />\n                  <ChangedTransactions\n                    trendChangeType={TrendChangeType.REGRESSION}\n                    previousTrendFunction={previousTrendFunction}\n                    trendView={trendView}\n                    location={location}\n                    setError={this.setError}\n                  />\n                </ListContainer>\n              </Feature>\n            </DefaultTrends>\n          </Layout.Main>\n        </Layout.Body>\n      </PageFiltersContainer>\n    );\n  }\n}\n\ntype DefaultTrendsProps = {\n  children: React.ReactNode[];\n  eventView: EventView;\n  location: Location;\n  projects: Project[];\n};\n\nclass DefaultTrends extends Component<DefaultTrendsProps> {\n  hasPushedDefaults = false;\n\n  render() {\n    const {children, location, eventView, projects} = this.props;\n\n    const queryString = decodeScalar(location.query.query);\n    const trendParameter = getCurrentTrendParameter(\n      location,\n      projects,\n      eventView.project\n    );\n    const conditions = new MutableSearch(queryString || '');\n\n    if (queryString || this.hasPushedDefaults) {\n      this.hasPushedDefaults = true;\n      return <Fragment>{children}</Fragment>;\n    }\n    this.hasPushedDefaults = true;\n    conditions.setFilterValues('tpm()', ['>0.01']);\n    conditions.setFilterValues(trendParameter.column, ['>0', `<${DEFAULT_MAX_DURATION}`]);\n\n    const query = conditions.formatString();\n    eventView.query = query;\n\n    browserHistory.push({\n      pathname: location.pathname,\n      query: {\n        ...location.query,\n        cursor: undefined,\n        query: String(query).trim() || undefined,\n      },\n    });\n    return null;\n  }\n}\n\nconst FilterActions = styled('div')`\n  display: grid;\n  gap: ${space(2)};\n  margin-bottom: ${space(2)};\n\n  @media (min-width: ${p => p.theme.breakpoints.small}) {\n    grid-template-columns: repeat(3, min-content);\n  }\n\n  @media (min-width: ${p => p.theme.breakpoints.xlarge}) {\n    grid-template-columns: auto 1fr auto auto;\n  }\n`;\n\nconst StyledSearchBar = styled(SearchBar)`\n  @media (min-width: ${p => p.theme.breakpoints.small}) {\n    order: 1;\n    grid-column: 1/5;\n  }\n\n  @media (min-width: ${p => p.theme.breakpoints.xlarge}) {\n    order: initial;\n    grid-column: auto;\n  }\n`;\n\nconst StyledTransactionNameSearchBar = styled(TransactionNameSearchBar)`\n  @media (min-width: ${p => p.theme.breakpoints.small}) {\n    order: 1;\n    grid-column: 1/5;\n  }\n\n  @media (min-width: ${p => p.theme.breakpoints.xlarge}) {\n    order: initial;\n    grid-column: auto;\n  }\n`;\n\nconst ListContainer = styled('div')`\n  display: grid;\n  gap: ${space(2)};\n  margin-bottom: ${space(2)};\n\n  @media (min-width: ${p => p.theme.breakpoints.small}) {\n    grid-template-columns: repeat(2, minmax(0, 1fr));\n  }\n`;\n\nexport default withPageFilters(TrendsContent);\n","import {Component} from 'react';\nimport {Location} from 'history';\n\nimport {Client} from 'sentry/api';\nimport * as Layout from 'sentry/components/layouts/thirds';\nimport SentryDocumentTitle from 'sentry/components/sentryDocumentTitle';\nimport {t} from 'sentry/locale';\nimport {Organization, PageFilters, Project} from 'sentry/types';\nimport EventView from 'sentry/utils/discover/eventView';\nimport withApi from 'sentry/utils/withApi';\nimport withOrganization from 'sentry/utils/withOrganization';\nimport withPageFilters from 'sentry/utils/withPageFilters';\nimport withProjects from 'sentry/utils/withProjects';\n\nimport {generatePerformanceEventView} from '../data';\n\nimport TrendsContent from './content';\n\ntype Props = {\n  api: Client;\n  location: Location;\n  organization: Organization;\n  projects: Project[];\n  selection: PageFilters;\n};\n\ntype State = {\n  eventView: EventView;\n  error?: string;\n};\n\nclass TrendsSummary extends Component<Props, State> {\n  static getDerivedStateFromProps(nextProps: Readonly<Props>, prevState: State): State {\n    return {\n      ...prevState,\n      eventView: generatePerformanceEventView(\n        nextProps.location,\n        nextProps.projects,\n        {\n          isTrends: true,\n        },\n        nextProps.organization\n      ),\n    };\n  }\n\n  state: State = {\n    eventView: generatePerformanceEventView(\n      this.props.location,\n      this.props.projects,\n      {\n        isTrends: true,\n      },\n      this.props.organization\n    ),\n    error: undefined,\n  };\n\n  getDocumentTitle(): string {\n    return [t('Trends'), t('Performance')].join(' - ');\n  }\n\n  setError = (error: string | undefined) => {\n    this.setState({error});\n  };\n\n  renderContent() {\n    const {organization, location, projects} = this.props;\n    const {eventView} = this.state;\n    return (\n      <TrendsContent\n        organization={organization}\n        location={location}\n        eventView={eventView}\n        projects={projects}\n      />\n    );\n  }\n\n  render() {\n    const {organization} = this.props;\n\n    return (\n      <SentryDocumentTitle title={this.getDocumentTitle()} orgSlug={organization.slug}>\n        <Layout.Page>{this.renderContent()}</Layout.Page>\n      </SentryDocumentTitle>\n    );\n  }\n}\n\nexport default withOrganization(withProjects(withPageFilters(withApi(TrendsSummary))));\n","var assignValue = require('./_assignValue'),\n    copyObject = require('./_copyObject'),\n    createAssigner = require('./_createAssigner'),\n    isArrayLike = require('./isArrayLike'),\n    isPrototype = require('./_isPrototype'),\n    keys = require('./keys');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Assigns own enumerable string keyed properties of source objects to the\n * destination object. Source objects are applied from left to right.\n * Subsequent sources overwrite property assignments of previous sources.\n *\n * **Note:** This method mutates `object` and is loosely based on\n * [`Object.assign`](https://mdn.io/Object/assign).\n *\n * @static\n * @memberOf _\n * @since 0.10.0\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n * @see _.assignIn\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * function Bar() {\n *   this.c = 3;\n * }\n *\n * Foo.prototype.b = 2;\n * Bar.prototype.d = 4;\n *\n * _.assign({ 'a': 0 }, new Foo, new Bar);\n * // => { 'a': 1, 'c': 3 }\n */\nvar assign = createAssigner(function(object, source) {\n  if (isPrototype(source) || isArrayLike(source)) {\n    copyObject(source, keys(source), object);\n    return;\n  }\n  for (var key in source) {\n    if (hasOwnProperty.call(source, key)) {\n      assignValue(object, key, source[key]);\n    }\n  }\n});\n\nmodule.exports = assign;\n"],"names":["DEFAULT","type","zoomOnMouseWheel","zoomLock","throttle","DataZoomInside","props","Array","isArray","getFeatures","dataZoom","features","arguments","length","undefined","yAxisIndex","title","zoom","back","ToolBox","options","right","top","itemSize","z","feature","LineChart","_ref","series","seriesOptions","_jsx","BaseChart","map","_ref2","seriesName","data","dataArray","LineSeries","name","_ref3","value","animation","animationThreshold","animationDuration","displayName","LoadingPanel","_styled","height","_height","children","LoadingMask","target","p","defaultProps","className","visible","other","SEARCH_SPECIAL_CHARS_REGEXP","RegExp","NEGATION_OPERATOR","SEARCH_WILDCARD","STATIC_FIELD_TAGS_SET","Set","Object","keys","FIELD_TAGS","STATIC_FIELD_TAGS","reduce","tags","key","kind","FieldKind","STATIC_FIELD_TAGS_WITHOUT_TRACING","omit","TRACING_FIELDS","STATIC_SPAN_TAGS","SPAN_OP_BREAKDOWN_FIELDS","STATIC_SEMVER_TAGS","SEMVER_TAGS","SearchBar","maxSearchItems","organization","omitTags","fields","projectIds","includeSessionTagsValues","maxMenuHeight","customMeasurements","api","useApi","functionTags","useMemo","acc","item","has","field","isEquation","isCustomMeasurement","getFunctionTags","tagsWithKind","useEffect","getEventFieldValues","cache","clear","memoize","tag","query","endpointParams","projectIdStrings","String","isAggregateField","isMeasurement","Promise","resolve","isDeviceClass","DEVICE_CLASS_TAG_VALUES","fetchTagValues","orgSlug","slug","tagKey","search","includeTransactions","includeSessions","then","results","flatten","filter","defined","Error","getTagList","measurements","measurementsWithKind","getMeasurementTags","combinedTags","includes","assign","FieldKey","values","sort","a","b","toLowerCase","localeCompare","predefined","Measurements","_ref4","SmartSearchBar","hasRecentSearches","savedSearchType","SavedSearchType","onGetTagValues","supportedTags","prepareQuery","replace","excludedTags","customPerformanceMetrics","withTags","theme","backgroundSecondary","borderRadius","WrappedComponent","WithTags","Component","constructor","_defineProperty","TagStore","this","setState","componentWillUnmount","unsubscribe","render","state","getDisplayName","defaultTrendsSelectionDate","start","end","utc","period","DEFAULT_TRENDS_STATS_PERIOD","TrendsContent","searchQuery","location","cursors","resetCursors","browserHistory","pathname","trim","error","offsets","TrendChangeType","forEach","trendChangeType","queryKey","getSelectedQueryKey","trackAnalytics","function_name","previousTrendFunction","getCurrentTrendFunction","trendFunction","label","parameter_name","trendParameter","renderError","Alert","showIcon","getFreeTextFromQuery","conditions","MutableSearch","transactionValues","getFilterValues","freeText","join","getPerformanceLink","newQuery","decodeScalar","removeFilter","formatString","getPerformanceLandingUrl","eventView","projects","trendView","clone","modifyTrendsViewDefaultPeriod","modifyTransactionNameTrendsQuery","generateAggregateFields","currentTrendFunction","currentTrendParameter","getCurrentTrendParameter","project","getTransactionSearchQuery","_jsxs","PageFiltersContainer","defaultSelection","datetime","Layout","Breadcrumbs","crumbs","to","t","fullWidth","DefaultTrends","FilterActions","PageFilterBar","condensed","ProjectPageFilter","EnvironmentPageFilter","DatePageFilter","alignDropdown","StyledTransactionNameSearchBar","onSearch","handleSearch","StyledSearchBar","searchSource","maxQueryLength","MAX_QUERY_LENGTH","CompactSelect","triggerProps","prefix","TRENDS_FUNCTIONS","onChange","opt","handleTrendFunctionChange","TRENDS_PARAMETERS","handleParameterChange","ListContainer","ChangedTransactions","setError","withBreakpoint","Feature","queryString","hasPushedDefaults","Fragment","setFilterValues","column","DEFAULT_MAX_DURATION","cursor","space","breakpoints","small","xlarge","TransactionNameSearchBar","withPageFilters","TrendsSummary","generatePerformanceEventView","isTrends","static","nextProps","prevState","getDocumentTitle","renderContent","SentryDocumentTitle","withOrganization","withProjects","withApi","assignValue","copyObject","createAssigner","isArrayLike","isPrototype","hasOwnProperty","prototype","object","source","call","module","exports"],"sourceRoot":""}