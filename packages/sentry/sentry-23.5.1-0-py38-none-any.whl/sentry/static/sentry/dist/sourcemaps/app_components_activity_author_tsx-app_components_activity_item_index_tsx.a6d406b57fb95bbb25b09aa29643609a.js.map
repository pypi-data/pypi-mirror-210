{"version":3,"file":"chunks/app_components_activity_author_tsx-app_components_activity_item_index_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/activity/author.tsx","webpack:///./app/components/activity/item/avatar.tsx","webpack:///./app/components/activity/item/bubble.tsx","webpack:///./app/components/activity/item/index.tsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nconst ActivityAuthor = styled('span')`\n  font-weight: 600;\n  font-size: ${p => p.theme.fontSizeMedium};\n`;\n\nexport default ActivityAuthor;\n","import styled from '@emotion/styled';\n\nimport UserAvatar from 'sentry/components/avatar/userAvatar';\nimport Placeholder from 'sentry/components/placeholder';\nimport {IconSentry} from 'sentry/icons';\nimport {AvatarUser} from 'sentry/types';\n\ntype Props = {\n  type: 'system' | 'user';\n  className?: string;\n  size?: number;\n  user?: AvatarUser;\n};\n\nfunction ActivityAvatar({className, type, user, size = 38}: Props) {\n  if (user) {\n    return <UserAvatar user={user} size={size} className={className} />;\n  }\n\n  if (type === 'system') {\n    // Return Sentry avatar\n    return (\n      <SystemAvatar className={className} size={size}>\n        <StyledIconSentry size=\"md\" />\n      </SystemAvatar>\n    );\n  }\n\n  return (\n    <Placeholder\n      className={className}\n      width={`${size}px`}\n      height={`${size}px`}\n      shape=\"circle\"\n    />\n  );\n}\n\nexport default ActivityAvatar;\n\ntype SystemAvatarProps = {\n  size: number;\n};\n\nconst SystemAvatar = styled('span')<SystemAvatarProps>`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: ${p => p.size}px;\n  height: ${p => p.size}px;\n  background-color: ${p => p.theme.textColor};\n  color: ${p => p.theme.background};\n  border-radius: 50%;\n`;\n\nconst StyledIconSentry = styled(IconSentry)`\n  padding-bottom: 3px;\n`;\n","import styled from '@emotion/styled';\n\nexport interface ActivityBubbleProps extends React.HTMLAttributes<HTMLDivElement> {\n  backgroundColor?: string;\n  borderColor?: string;\n}\n\n/**\n * This creates a bordered box that has a left pointing arrow\n * on the left-side at the top.\n */\nconst ActivityBubble = styled('div')<ActivityBubbleProps>`\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  align-items: stretch;\n  flex: 1;\n  background-color: ${p => p.backgroundColor || p.theme.background};\n  border: 1px solid ${p => p.borderColor || p.theme.border};\n  border-radius: ${p => p.theme.borderRadius};\n  position: relative;\n  width: 100%; /* this is used in Incidents Details - a chart can cause overflow and won't resize properly */\n\n  &:before {\n    display: block;\n    content: '';\n    width: 0;\n    height: 0;\n    border-top: 7px solid transparent;\n    border-bottom: 7px solid transparent;\n    border-right: 7px solid ${p => p.borderColor || p.theme.border};\n    position: absolute;\n    left: -7px;\n    top: 12px;\n  }\n\n  &:after {\n    display: block;\n    content: '';\n    width: 0;\n    height: 0;\n    border-top: 6px solid transparent;\n    border-bottom: 6px solid transparent;\n    border-right: 6px solid ${p => p.backgroundColor || p.theme.background};\n    position: absolute;\n    left: -6px;\n    top: 13px;\n  }\n`;\n\nexport default ActivityBubble;\n","import styled from '@emotion/styled';\nimport moment from 'moment-timezone';\n\nimport DateTime from 'sentry/components/dateTime';\nimport TimeSince from 'sentry/components/timeSince';\nimport {space} from 'sentry/styles/space';\nimport textStyles from 'sentry/styles/text';\nimport {AvatarUser} from 'sentry/types';\nimport {isRenderFunc} from 'sentry/utils/isRenderFunc';\n\nimport ActivityAvatar from './avatar';\nimport ActivityBubble, {ActivityBubbleProps} from './bubble';\n\nexport type ActivityAuthorType = 'user' | 'system';\n\ntype ChildFunction = () => React.ReactNode;\n\ninterface ActivityItemProps {\n  /**\n   * Used to render an avatar for the author. Currently can be a user, otherwise\n   * defaults as a \"system\" avatar (i.e. sentry)\n   *\n   * `user` is required if `type` is \"user\"\n   */\n  author?: {\n    type: ActivityAuthorType;\n    user?: AvatarUser;\n  };\n  // Size of the avatar.\n  avatarSize?: number;\n  bubbleProps?: ActivityBubbleProps;\n\n  children?: React.ReactChild | ChildFunction;\n\n  className?: string;\n\n  /**\n   * If supplied, will show the time that the activity started\n   */\n  date?: string | Date;\n\n  /**\n   * Can be a react node or a render function. render function will not include default wrapper\n   */\n  footer?: React.ReactNode | ChildFunction;\n\n  /**\n   * Can be a react node or a render function. render function will not include default wrapper\n   */\n  header?: React.ReactNode | ChildFunction;\n\n  // Hides date in header\n  hideDate?: boolean;\n\n  /**\n   * This is used to uniquely identify the activity item for use as an anchor\n   */\n  id?: string;\n\n  /**\n   * If supplied, will show the interval that the activity occurred in\n   */\n  interval?: number;\n\n  // Instead of showing a relative time/date, show the time\n  showTime?: boolean;\n}\n\nfunction ActivityItem({\n  author,\n  avatarSize,\n  bubbleProps,\n  className,\n  children,\n  date,\n  interval,\n  footer,\n  id,\n  header,\n  hideDate = false,\n  showTime = false,\n}: ActivityItemProps) {\n  const showDate = !hideDate && date && !interval;\n  const showRange = !hideDate && date && interval;\n  const dateEnded = showRange\n    ? moment(date).add(interval, 'minutes').utc().format()\n    : undefined;\n  const timeOnly = Boolean(\n    date && dateEnded && moment(date).date() === moment(dateEnded).date()\n  );\n\n  return (\n    <ActivityItemWrapper data-test-id=\"activity-item\" className={className}>\n      {id && <a id={id} />}\n\n      {author && (\n        <StyledActivityAvatar type={author.type} user={author.user} size={avatarSize} />\n      )}\n\n      <StyledActivityBubble {...bubbleProps}>\n        {header && isRenderFunc<ChildFunction>(header) && header()}\n        {header && !isRenderFunc<ChildFunction>(header) && (\n          <ActivityHeader>\n            <ActivityHeaderContent>{header}</ActivityHeaderContent>\n            {date && showDate && !showTime && <StyledTimeSince date={date} />}\n            {date && showDate && showTime && <StyledDateTime timeOnly date={date} />}\n\n            {showRange && (\n              <StyledDateTimeWindow>\n                <StyledDateTime timeOnly={timeOnly} date={date} />\n                {' — '}\n                <StyledDateTime timeOnly={timeOnly} date={dateEnded} />\n              </StyledDateTimeWindow>\n            )}\n          </ActivityHeader>\n        )}\n\n        {children && isRenderFunc<ChildFunction>(children) && children()}\n        {children && !isRenderFunc<ChildFunction>(children) && (\n          <ActivityBody>{children}</ActivityBody>\n        )}\n\n        {footer && isRenderFunc<ChildFunction>(footer) && footer()}\n        {footer && !isRenderFunc<ChildFunction>(footer) && (\n          <ActivityFooter>{footer}</ActivityFooter>\n        )}\n      </StyledActivityBubble>\n    </ActivityItemWrapper>\n  );\n}\n\nconst ActivityItemWrapper = styled('div')`\n  display: flex;\n  margin-bottom: ${space(2)};\n`;\n\nconst HeaderAndFooter = styled('div')`\n  padding: 6px ${space(2)};\n`;\n\nconst ActivityHeader = styled(HeaderAndFooter)`\n  display: flex;\n  border-bottom: 1px solid ${p => p.theme.border};\n  font-size: ${p => p.theme.fontSizeMedium};\n\n  &:last-child {\n    border-bottom: none;\n  }\n`;\n\nconst ActivityHeaderContent = styled('div')`\n  flex: 1;\n`;\n\nconst ActivityFooter = styled(HeaderAndFooter)`\n  display: flex;\n  border-top: 1px solid ${p => p.theme.border};\n  font-size: ${p => p.theme.fontSizeMedium};\n`;\n\nconst ActivityBody = styled('div')`\n  padding: ${space(2)} ${space(2)};\n  ${textStyles}\n`;\n\nconst StyledActivityAvatar = styled(ActivityAvatar)`\n  margin-right: ${space(1)};\n`;\n\nconst StyledTimeSince = styled(TimeSince)`\n  color: ${p => p.theme.gray300};\n`;\n\nconst StyledDateTime = styled(DateTime)`\n  color: ${p => p.theme.gray300};\n`;\n\nconst StyledDateTimeWindow = styled('div')`\n  color: ${p => p.theme.gray300};\n`;\n\nconst StyledActivityBubble = styled(ActivityBubble)`\n  width: 75%;\n  overflow-wrap: break-word;\n`;\n\nexport default ActivityItem;\n"],"names":["_styled","target","p","theme","fontSizeMedium","ActivityAvatar","_ref","className","type","user","size","_jsx","UserAvatar","SystemAvatar","children","StyledIconSentry","Placeholder","width","height","shape","displayName","textColor","background","IconSentry","name","styles","backgroundColor","borderColor","border","borderRadius","ActivityItem","author","avatarSize","bubbleProps","date","interval","footer","id","header","hideDate","showTime","showDate","showRange","dateEnded","moment","add","utc","format","undefined","timeOnly","Boolean","_jsxs","ActivityItemWrapper","StyledActivityAvatar","StyledActivityBubble","isRenderFunc","ActivityHeader","ActivityHeaderContent","StyledTimeSince","StyledDateTime","StyledDateTimeWindow","ActivityBody","ActivityFooter","space","HeaderAndFooter","textStyles","TimeSince","gray300","DateTime","ActivityBubble"],"sourceRoot":""}