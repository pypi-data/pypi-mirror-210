# coding: utf-8

"""
    Nexus Repository Manager REST API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 3.42.0-01
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from nexus_sdk import schemas  # noqa: F401


class UploadDefinitionXO(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """


    class MetaOapg:
        
        class properties:
            format = schemas.StrSchema
            multipleUpload = schemas.BoolSchema
            
            
            class componentFields(
                schemas.ListSchema
            ):
            
            
                class MetaOapg:
                    
                    @staticmethod
                    def items() -> typing.Type['UploadFieldDefinitionXO']:
                        return UploadFieldDefinitionXO
            
                def __new__(
                    cls,
                    _arg: typing.Union[typing.Tuple['UploadFieldDefinitionXO'], typing.List['UploadFieldDefinitionXO']],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'componentFields':
                    return super().__new__(
                        cls,
                        _arg,
                        _configuration=_configuration,
                    )
            
                def __getitem__(self, i: int) -> 'UploadFieldDefinitionXO':
                    return super().__getitem__(i)
            
            
            class assetFields(
                schemas.ListSchema
            ):
            
            
                class MetaOapg:
                    
                    @staticmethod
                    def items() -> typing.Type['UploadFieldDefinitionXO']:
                        return UploadFieldDefinitionXO
            
                def __new__(
                    cls,
                    _arg: typing.Union[typing.Tuple['UploadFieldDefinitionXO'], typing.List['UploadFieldDefinitionXO']],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'assetFields':
                    return super().__new__(
                        cls,
                        _arg,
                        _configuration=_configuration,
                    )
            
                def __getitem__(self, i: int) -> 'UploadFieldDefinitionXO':
                    return super().__getitem__(i)
            __annotations__ = {
                "format": format,
                "multipleUpload": multipleUpload,
                "componentFields": componentFields,
                "assetFields": assetFields,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["format"]) -> MetaOapg.properties.format: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["multipleUpload"]) -> MetaOapg.properties.multipleUpload: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["componentFields"]) -> MetaOapg.properties.componentFields: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["assetFields"]) -> MetaOapg.properties.assetFields: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["format", "multipleUpload", "componentFields", "assetFields", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["format"]) -> typing.Union[MetaOapg.properties.format, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["multipleUpload"]) -> typing.Union[MetaOapg.properties.multipleUpload, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["componentFields"]) -> typing.Union[MetaOapg.properties.componentFields, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["assetFields"]) -> typing.Union[MetaOapg.properties.assetFields, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["format", "multipleUpload", "componentFields", "assetFields", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *_args: typing.Union[dict, frozendict.frozendict, ],
        format: typing.Union[MetaOapg.properties.format, str, schemas.Unset] = schemas.unset,
        multipleUpload: typing.Union[MetaOapg.properties.multipleUpload, bool, schemas.Unset] = schemas.unset,
        componentFields: typing.Union[MetaOapg.properties.componentFields, list, tuple, schemas.Unset] = schemas.unset,
        assetFields: typing.Union[MetaOapg.properties.assetFields, list, tuple, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'UploadDefinitionXO':
        return super().__new__(
            cls,
            *_args,
            format=format,
            multipleUpload=multipleUpload,
            componentFields=componentFields,
            assetFields=assetFields,
            _configuration=_configuration,
            **kwargs,
        )

from nexus_sdk.model.upload_field_definition_xo import UploadFieldDefinitionXO
