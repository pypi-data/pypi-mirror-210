# coding: utf-8

"""
    Nexus Repository Manager REST API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 3.42.0-01
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from nexus_sdk import schemas  # noqa: F401


class ApiCertificate(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """


    class MetaOapg:
        
        class properties:
            expiresOn = schemas.Int64Schema
            fingerprint = schemas.StrSchema
            id = schemas.StrSchema
            issuedOn = schemas.Int64Schema
            issuerCommonName = schemas.StrSchema
            issuerOrganization = schemas.StrSchema
            issuerOrganizationalUnit = schemas.StrSchema
            pem = schemas.StrSchema
            serialNumber = schemas.StrSchema
            subjectCommonName = schemas.StrSchema
            subjectOrganization = schemas.StrSchema
            subjectOrganizationalUnit = schemas.StrSchema
            __annotations__ = {
                "expiresOn": expiresOn,
                "fingerprint": fingerprint,
                "id": id,
                "issuedOn": issuedOn,
                "issuerCommonName": issuerCommonName,
                "issuerOrganization": issuerOrganization,
                "issuerOrganizationalUnit": issuerOrganizationalUnit,
                "pem": pem,
                "serialNumber": serialNumber,
                "subjectCommonName": subjectCommonName,
                "subjectOrganization": subjectOrganization,
                "subjectOrganizationalUnit": subjectOrganizationalUnit,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["expiresOn"]) -> MetaOapg.properties.expiresOn: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["fingerprint"]) -> MetaOapg.properties.fingerprint: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["id"]) -> MetaOapg.properties.id: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["issuedOn"]) -> MetaOapg.properties.issuedOn: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["issuerCommonName"]) -> MetaOapg.properties.issuerCommonName: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["issuerOrganization"]) -> MetaOapg.properties.issuerOrganization: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["issuerOrganizationalUnit"]) -> MetaOapg.properties.issuerOrganizationalUnit: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["pem"]) -> MetaOapg.properties.pem: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["serialNumber"]) -> MetaOapg.properties.serialNumber: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["subjectCommonName"]) -> MetaOapg.properties.subjectCommonName: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["subjectOrganization"]) -> MetaOapg.properties.subjectOrganization: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["subjectOrganizationalUnit"]) -> MetaOapg.properties.subjectOrganizationalUnit: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["expiresOn", "fingerprint", "id", "issuedOn", "issuerCommonName", "issuerOrganization", "issuerOrganizationalUnit", "pem", "serialNumber", "subjectCommonName", "subjectOrganization", "subjectOrganizationalUnit", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["expiresOn"]) -> typing.Union[MetaOapg.properties.expiresOn, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["fingerprint"]) -> typing.Union[MetaOapg.properties.fingerprint, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["id"]) -> typing.Union[MetaOapg.properties.id, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["issuedOn"]) -> typing.Union[MetaOapg.properties.issuedOn, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["issuerCommonName"]) -> typing.Union[MetaOapg.properties.issuerCommonName, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["issuerOrganization"]) -> typing.Union[MetaOapg.properties.issuerOrganization, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["issuerOrganizationalUnit"]) -> typing.Union[MetaOapg.properties.issuerOrganizationalUnit, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["pem"]) -> typing.Union[MetaOapg.properties.pem, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["serialNumber"]) -> typing.Union[MetaOapg.properties.serialNumber, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["subjectCommonName"]) -> typing.Union[MetaOapg.properties.subjectCommonName, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["subjectOrganization"]) -> typing.Union[MetaOapg.properties.subjectOrganization, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["subjectOrganizationalUnit"]) -> typing.Union[MetaOapg.properties.subjectOrganizationalUnit, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["expiresOn", "fingerprint", "id", "issuedOn", "issuerCommonName", "issuerOrganization", "issuerOrganizationalUnit", "pem", "serialNumber", "subjectCommonName", "subjectOrganization", "subjectOrganizationalUnit", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *_args: typing.Union[dict, frozendict.frozendict, ],
        expiresOn: typing.Union[MetaOapg.properties.expiresOn, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        fingerprint: typing.Union[MetaOapg.properties.fingerprint, str, schemas.Unset] = schemas.unset,
        id: typing.Union[MetaOapg.properties.id, str, schemas.Unset] = schemas.unset,
        issuedOn: typing.Union[MetaOapg.properties.issuedOn, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        issuerCommonName: typing.Union[MetaOapg.properties.issuerCommonName, str, schemas.Unset] = schemas.unset,
        issuerOrganization: typing.Union[MetaOapg.properties.issuerOrganization, str, schemas.Unset] = schemas.unset,
        issuerOrganizationalUnit: typing.Union[MetaOapg.properties.issuerOrganizationalUnit, str, schemas.Unset] = schemas.unset,
        pem: typing.Union[MetaOapg.properties.pem, str, schemas.Unset] = schemas.unset,
        serialNumber: typing.Union[MetaOapg.properties.serialNumber, str, schemas.Unset] = schemas.unset,
        subjectCommonName: typing.Union[MetaOapg.properties.subjectCommonName, str, schemas.Unset] = schemas.unset,
        subjectOrganization: typing.Union[MetaOapg.properties.subjectOrganization, str, schemas.Unset] = schemas.unset,
        subjectOrganizationalUnit: typing.Union[MetaOapg.properties.subjectOrganizationalUnit, str, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'ApiCertificate':
        return super().__new__(
            cls,
            *_args,
            expiresOn=expiresOn,
            fingerprint=fingerprint,
            id=id,
            issuedOn=issuedOn,
            issuerCommonName=issuerCommonName,
            issuerOrganization=issuerOrganization,
            issuerOrganizationalUnit=issuerOrganizationalUnit,
            pem=pem,
            serialNumber=serialNumber,
            subjectCommonName=subjectCommonName,
            subjectOrganization=subjectOrganization,
            subjectOrganizationalUnit=subjectOrganizationalUnit,
            _configuration=_configuration,
            **kwargs,
        )
