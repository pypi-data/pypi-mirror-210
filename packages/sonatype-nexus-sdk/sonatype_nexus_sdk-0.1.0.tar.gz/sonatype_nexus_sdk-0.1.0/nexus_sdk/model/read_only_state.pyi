# coding: utf-8

"""
    Nexus Repository Manager REST API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 3.42.0-01
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from nexus_sdk import schemas  # noqa: F401


class ReadOnlyState(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """


    class MetaOapg:
        
        class properties:
            summaryReason = schemas.StrSchema
            systemInitiated = schemas.BoolSchema
            frozen = schemas.BoolSchema
            __annotations__ = {
                "summaryReason": summaryReason,
                "systemInitiated": systemInitiated,
                "frozen": frozen,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["summaryReason"]) -> MetaOapg.properties.summaryReason: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["systemInitiated"]) -> MetaOapg.properties.systemInitiated: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["frozen"]) -> MetaOapg.properties.frozen: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["summaryReason", "systemInitiated", "frozen", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["summaryReason"]) -> typing.Union[MetaOapg.properties.summaryReason, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["systemInitiated"]) -> typing.Union[MetaOapg.properties.systemInitiated, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["frozen"]) -> typing.Union[MetaOapg.properties.frozen, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["summaryReason", "systemInitiated", "frozen", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *_args: typing.Union[dict, frozendict.frozendict, ],
        summaryReason: typing.Union[MetaOapg.properties.summaryReason, str, schemas.Unset] = schemas.unset,
        systemInitiated: typing.Union[MetaOapg.properties.systemInitiated, bool, schemas.Unset] = schemas.unset,
        frozen: typing.Union[MetaOapg.properties.frozen, bool, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'ReadOnlyState':
        return super().__new__(
            cls,
            *_args,
            summaryReason=summaryReason,
            systemInitiated=systemInitiated,
            frozen=frozen,
            _configuration=_configuration,
            **kwargs,
        )
