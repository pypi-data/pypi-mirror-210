
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftANDORNEGATEleftPLUSMINUSleftTIMESDIVIDEleftAPPENDrightUMINUSAGAIN AND COUNT DEFER DIVIDE END EQUALS FORGET GREATER_OR_EQUAL GREATER_THAN HASH LPAREN MINUS NEGATE NUMBER OR PLUS PRINT READ RPAREN SMALLER_OR_EQUAL SMALLER_THAN STRING THEN TIMES UNICODEstart : lineslines : line\n              | line linesline    :   NUMBER statements END\n                |  NUMBER compounds statements END\n    compounds :    DEFER LPAREN booleanable RPAREN\n                    | AGAIN LPAREN booleanable RPAREN\n                    | DEFER LPAREN booleanable RPAREN compounds\n                    | AGAIN LPAREN booleanable RPAREN compounds\n    booleanable :  LPAREN booleanable RPAREN\n                    | booleanable AND booleanable\n                    | booleanable OR booleanable\n                    | numerable\n                    | numerable EQUALS numerable\n                    | numerable GREATER_THAN numerable\n                    | numerable GREATER_OR_EQUAL numerable\n                    | numerable SMALLER_THAN numerable\n                    | numerable SMALLER_OR_EQUAL numerable\n                    | NEGATE booleanable\n    statements   :  statement\n                      | statement THEN statements\n    statement :  PRINT LPAREN stringable RPAREN\n                   | numerable\n                   | numerable HASH numerable\n   stringable :  LPAREN stringable RPAREN\n                   | pure_stringable\n                   | number_stringable\n                   | number_stringable PLUS stringable %prec APPEND\n    number_stringable : NUMBER\n                    | READ\n                    | number_stringable MINUS number_stringable\n                    | number_stringable TIMES number_stringable\n                    | number_stringable DIVIDE number_stringable\n                    | COUNT LPAREN numerable RPAREN pure_stringable : UNICODE LPAREN numerable RPAREN\n                   | STRING\n                   | STRING PLUS stringable  %prec APPEND\n    numerable :   NUMBER\n                    | READ\n                    | numerable PLUS numerable\n                    | numerable MINUS numerable\n                    | numerable TIMES numerable\n                    | numerable DIVIDE numerable\n                    | COUNT LPAREN numerable RPAREN \n                    | MINUS numerable %prec UMINUS\n                    | LPAREN numerable RPAREN '
    
_lr_action_items = {'NUMBER':([0,3,4,8,11,16,18,20,21,23,24,25,26,27,28,29,31,32,34,37,40,57,58,59,60,61,62,63,64,66,69,70,71,72,73,74,75,78,86,],[4,4,6,6,6,6,-4,6,6,6,46,6,6,6,6,6,6,-5,6,6,46,-6,6,6,6,6,6,6,6,-7,46,46,46,46,6,46,6,-8,-9,]),'$end':([1,2,3,5,18,32,],[0,-1,-2,-3,-4,-5,]),'DEFER':([4,57,66,],[10,10,10,]),'AGAIN':([4,57,66,],[12,12,12,]),'PRINT':([4,8,20,57,66,78,86,],[13,13,13,-6,-7,-8,-9,]),'READ':([4,8,11,16,20,21,23,24,25,26,27,28,29,31,34,37,40,57,58,59,60,61,62,63,64,66,69,70,71,72,73,74,75,78,86,],[15,15,15,15,15,15,15,47,15,15,15,15,15,15,15,15,47,-6,15,15,15,15,15,15,15,-7,47,47,47,47,15,47,15,-8,-9,]),'COUNT':([4,8,11,16,20,21,23,24,25,26,27,28,29,31,34,37,40,57,58,59,60,61,62,63,64,66,69,70,71,72,73,74,75,78,86,],[17,17,17,17,17,17,17,48,17,17,17,17,17,17,17,17,48,-6,17,17,17,17,17,17,17,-7,48,48,48,48,17,48,17,-8,-9,]),'MINUS':([4,6,8,11,14,15,16,20,21,22,23,25,26,27,28,29,30,31,34,36,37,38,43,46,47,49,50,51,52,53,54,56,57,58,59,60,61,62,63,64,66,73,75,76,78,81,82,83,84,85,86,89,90,91,92,94,96,],[16,-38,16,16,27,-39,16,16,16,27,16,16,16,16,16,16,-45,16,16,27,16,-46,70,-29,-30,27,-40,-41,-42,-43,27,27,-6,16,16,16,16,16,16,16,-7,16,16,-44,-8,27,27,27,27,27,-9,-31,-32,-33,27,27,-34,]),'LPAREN':([4,8,10,11,12,13,16,17,20,21,23,24,25,26,27,28,29,31,34,37,40,44,48,57,58,59,60,61,62,63,64,66,69,73,74,75,78,86,],[11,11,21,11,23,24,11,31,11,34,34,40,11,11,11,11,11,11,34,34,40,73,75,-6,34,34,11,11,11,11,11,-7,40,11,40,11,-8,-9,]),'HASH':([6,14,15,30,38,50,51,52,53,76,],[-38,25,-39,-45,-46,-40,-41,-42,-43,-44,]),'PLUS':([6,14,15,22,30,36,38,43,45,46,47,49,50,51,52,53,54,56,76,81,82,83,84,85,89,90,91,92,94,96,],[-38,26,-39,26,-45,26,-46,69,74,-29,-30,26,-40,-41,-42,-43,26,26,-44,26,26,26,26,26,-31,-32,-33,26,26,-34,]),'TIMES':([6,14,15,22,30,36,38,43,46,47,49,50,51,52,53,54,56,76,81,82,83,84,85,89,90,91,92,94,96,],[-38,28,-39,28,-45,28,-46,71,-29,-30,28,28,28,-42,-43,28,28,-44,28,28,28,28,28,71,-32,-33,28,28,-34,]),'DIVIDE':([6,14,15,22,30,36,38,43,46,47,49,50,51,52,53,54,56,76,81,82,83,84,85,89,90,91,92,94,96,],[-38,29,-39,29,-45,29,-46,72,-29,-30,29,29,29,-42,-43,29,29,-44,29,29,29,29,29,72,-32,-33,29,29,-34,]),'THEN':([6,9,14,15,30,38,49,50,51,52,53,68,76,],[-38,20,-23,-39,-45,-46,-24,-40,-41,-42,-43,-22,-44,]),'END':([6,7,9,14,15,19,30,33,38,49,50,51,52,53,68,76,],[-38,18,-20,-23,-39,32,-45,-21,-46,-24,-40,-41,-42,-43,-22,-44,]),'RPAREN':([6,15,22,30,35,36,38,39,41,42,43,45,46,47,50,51,52,53,54,55,56,65,67,76,77,79,80,81,82,83,84,85,87,88,89,90,91,92,93,94,95,96,],[-38,-39,38,-45,57,-13,-46,66,68,-26,-27,-36,-29,-30,-40,-41,-42,-43,76,77,38,-19,87,-44,-10,-11,-12,-14,-15,-16,-17,-18,-25,-28,-31,-32,-33,95,-37,96,-35,-34,]),'EQUALS':([6,15,30,36,38,50,51,52,53,56,76,],[-38,-39,-45,60,-46,-40,-41,-42,-43,60,-44,]),'GREATER_THAN':([6,15,30,36,38,50,51,52,53,56,76,],[-38,-39,-45,61,-46,-40,-41,-42,-43,61,-44,]),'GREATER_OR_EQUAL':([6,15,30,36,38,50,51,52,53,56,76,],[-38,-39,-45,62,-46,-40,-41,-42,-43,62,-44,]),'SMALLER_THAN':([6,15,30,36,38,50,51,52,53,56,76,],[-38,-39,-45,63,-46,-40,-41,-42,-43,63,-44,]),'SMALLER_OR_EQUAL':([6,15,30,36,38,50,51,52,53,56,76,],[-38,-39,-45,64,-46,-40,-41,-42,-43,64,-44,]),'AND':([6,15,30,35,36,38,39,50,51,52,53,55,56,65,76,77,79,80,81,82,83,84,85,],[-38,-39,-45,58,-13,-46,58,-40,-41,-42,-43,58,-13,-19,-44,-10,-11,-12,-14,-15,-16,-17,-18,]),'OR':([6,15,30,35,36,38,39,50,51,52,53,55,56,65,76,77,79,80,81,82,83,84,85,],[-38,-39,-45,59,-13,-46,59,-40,-41,-42,-43,59,-13,-19,-44,-10,-11,-12,-14,-15,-16,-17,-18,]),'NEGATE':([21,23,34,37,58,59,],[37,37,37,37,37,37,]),'UNICODE':([24,40,69,74,],[44,44,44,44,]),'STRING':([24,40,69,74,],[45,45,45,45,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'start':([0,],[1,]),'lines':([0,3,],[2,5,]),'line':([0,3,],[3,3,]),'statements':([4,8,20,],[7,19,33,]),'compounds':([4,57,66,],[8,78,86,]),'statement':([4,8,20,],[9,9,9,]),'numerable':([4,8,11,16,20,21,23,25,26,27,28,29,31,34,37,58,59,60,61,62,63,64,73,75,],[14,14,22,30,14,36,36,49,50,51,52,53,54,56,36,36,36,81,82,83,84,85,92,94,]),'booleanable':([21,23,34,37,58,59,],[35,39,55,65,79,80,]),'stringable':([24,40,69,74,],[41,67,88,93,]),'pure_stringable':([24,40,69,74,],[42,42,42,42,]),'number_stringable':([24,40,69,70,71,72,74,],[43,43,43,89,90,91,43,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> lines','start',1,'p_start','whenever_parser.py',85),
  ('lines -> line','lines',1,'p_lines','whenever_parser.py',89),
  ('lines -> line lines','lines',2,'p_lines','whenever_parser.py',90),
  ('line -> NUMBER statements END','line',3,'p_line','whenever_parser.py',98),
  ('line -> NUMBER compounds statements END','line',4,'p_line','whenever_parser.py',99),
  ('compounds -> DEFER LPAREN booleanable RPAREN','compounds',4,'p_compounds','whenever_parser.py',121),
  ('compounds -> AGAIN LPAREN booleanable RPAREN','compounds',4,'p_compounds','whenever_parser.py',122),
  ('compounds -> DEFER LPAREN booleanable RPAREN compounds','compounds',5,'p_compounds','whenever_parser.py',123),
  ('compounds -> AGAIN LPAREN booleanable RPAREN compounds','compounds',5,'p_compounds','whenever_parser.py',124),
  ('booleanable -> LPAREN booleanable RPAREN','booleanable',3,'p_booleanable','whenever_parser.py',142),
  ('booleanable -> booleanable AND booleanable','booleanable',3,'p_booleanable','whenever_parser.py',143),
  ('booleanable -> booleanable OR booleanable','booleanable',3,'p_booleanable','whenever_parser.py',144),
  ('booleanable -> numerable','booleanable',1,'p_booleanable','whenever_parser.py',145),
  ('booleanable -> numerable EQUALS numerable','booleanable',3,'p_booleanable','whenever_parser.py',146),
  ('booleanable -> numerable GREATER_THAN numerable','booleanable',3,'p_booleanable','whenever_parser.py',147),
  ('booleanable -> numerable GREATER_OR_EQUAL numerable','booleanable',3,'p_booleanable','whenever_parser.py',148),
  ('booleanable -> numerable SMALLER_THAN numerable','booleanable',3,'p_booleanable','whenever_parser.py',149),
  ('booleanable -> numerable SMALLER_OR_EQUAL numerable','booleanable',3,'p_booleanable','whenever_parser.py',150),
  ('booleanable -> NEGATE booleanable','booleanable',2,'p_booleanable','whenever_parser.py',151),
  ('statements -> statement','statements',1,'p_statements','whenever_parser.py',165),
  ('statements -> statement THEN statements','statements',3,'p_statements','whenever_parser.py',166),
  ('statement -> PRINT LPAREN stringable RPAREN','statement',4,'p_statement','whenever_parser.py',176),
  ('statement -> numerable','statement',1,'p_statement','whenever_parser.py',177),
  ('statement -> numerable HASH numerable','statement',3,'p_statement','whenever_parser.py',178),
  ('stringable -> LPAREN stringable RPAREN','stringable',3,'p_stringable','whenever_parser.py',187),
  ('stringable -> pure_stringable','stringable',1,'p_stringable','whenever_parser.py',188),
  ('stringable -> number_stringable','stringable',1,'p_stringable','whenever_parser.py',189),
  ('stringable -> number_stringable PLUS stringable','stringable',3,'p_stringable','whenever_parser.py',190),
  ('number_stringable -> NUMBER','number_stringable',1,'p_number_stringable','whenever_parser.py',207),
  ('number_stringable -> READ','number_stringable',1,'p_number_stringable','whenever_parser.py',208),
  ('number_stringable -> number_stringable MINUS number_stringable','number_stringable',3,'p_number_stringable','whenever_parser.py',209),
  ('number_stringable -> number_stringable TIMES number_stringable','number_stringable',3,'p_number_stringable','whenever_parser.py',210),
  ('number_stringable -> number_stringable DIVIDE number_stringable','number_stringable',3,'p_number_stringable','whenever_parser.py',211),
  ('number_stringable -> COUNT LPAREN numerable RPAREN','number_stringable',4,'p_number_stringable','whenever_parser.py',212),
  ('pure_stringable -> UNICODE LPAREN numerable RPAREN','pure_stringable',4,'p_pure_stringable','whenever_parser.py',217),
  ('pure_stringable -> STRING','pure_stringable',1,'p_pure_stringable','whenever_parser.py',218),
  ('pure_stringable -> STRING PLUS stringable','pure_stringable',3,'p_pure_stringable','whenever_parser.py',219),
  ('numerable -> NUMBER','numerable',1,'p_numerable','whenever_parser.py',235),
  ('numerable -> READ','numerable',1,'p_numerable','whenever_parser.py',236),
  ('numerable -> numerable PLUS numerable','numerable',3,'p_numerable','whenever_parser.py',237),
  ('numerable -> numerable MINUS numerable','numerable',3,'p_numerable','whenever_parser.py',238),
  ('numerable -> numerable TIMES numerable','numerable',3,'p_numerable','whenever_parser.py',239),
  ('numerable -> numerable DIVIDE numerable','numerable',3,'p_numerable','whenever_parser.py',240),
  ('numerable -> COUNT LPAREN numerable RPAREN','numerable',4,'p_numerable','whenever_parser.py',241),
  ('numerable -> MINUS numerable','numerable',2,'p_numerable','whenever_parser.py',242),
  ('numerable -> LPAREN numerable RPAREN','numerable',3,'p_numerable','whenever_parser.py',243),
]
