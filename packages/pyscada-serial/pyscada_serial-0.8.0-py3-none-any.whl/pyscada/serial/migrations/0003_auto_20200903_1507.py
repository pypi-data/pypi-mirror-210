# Generated by Django 2.2.8 on 2020-09-03 15:07

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('serial', '0002_add_device_protocol'),
    ]

    operations = [
        migrations.CreateModel(
            name='SerialDeviceHandler',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=255)),
                ('handler_class', models.CharField(default='pyscada.serial.devices.AirLinkGX450', help_text='a Base class to extend can be found at pyscada.serial.devices.GenericDevice', max_length=255)),
                ('handler_path', models.CharField(blank=True, default=None, max_length=255, null=True)),
            ],
        ),
        migrations.AddField(
            model_name='serialdevice',
            name='baudrate',
            field=models.PositiveSmallIntegerField(default=0, help_text='0 use default'),
        ),
        migrations.AddField(
            model_name='serialdevice',
            name='bytesize',
            field=models.PositiveSmallIntegerField(choices=[(0, 'default'), (5, 'FIVEBITS'), (6, 'SIXBITS'), (7, 'SEVENBITS'), (8, 'EIGHTBITS')], default=0),
        ),
        migrations.AddField(
            model_name='serialdevice',
            name='parity',
            field=models.PositiveSmallIntegerField(choices=[(0, 'default'), (1, 'NONE'), (2, 'EVEN'), (3, 'ODD')], default=0),
        ),
        migrations.AddField(
            model_name='serialdevice',
            name='port',
            field=models.CharField(default='502', help_text='enter serial port (/dev/pts/13))', max_length=400),
        ),
        migrations.AddField(
            model_name='serialdevice',
            name='protocol',
            field=models.PositiveSmallIntegerField(choices=[(0, 'serial AT')], default=0),
        ),
        migrations.AddField(
            model_name='serialdevice',
            name='stopbits',
            field=models.PositiveSmallIntegerField(choices=[(0, 'default'), (1, 'one stopbit'), (2, '2 stopbits')], default=0),
        ),
        migrations.AddField(
            model_name='serialdevice',
            name='timeout',
            field=models.PositiveSmallIntegerField(default=0, help_text='0 use default, else value in seconds'),
        ),
        migrations.AddField(
            model_name='serialvariable',
            name='device_property',
            field=models.CharField(default='present_value', help_text='name of the Property the variable be assigned to', max_length=255),
        ),
    ]
