# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/04_plots.ipynb.

# %% auto 0
__all__ = ['plot_library_size', 'make_qc_figs']

# %% ../nbs/04_plots.ipynb 3
# NOTE: needed for python 3.10 forward compatibility with scanpy as 
# scanpy uses Iterable which is deprecated in 3.10
import collections.abc
#hyper needs the four following aliases to be done manually.
collections.Iterable = collections.abc.Iterable
collections.Mapping = collections.abc.Mapping
collections.MutableSet = collections.abc.MutableSet
collections.MutableMapping = collections.abc.MutableMapping

# %% ../nbs/04_plots.ipynb 4
from degex.types import (
    AnnData, AnnDatas, Graph, SeriesLike,
    VAR_HUMAN_TF, VAR_MOUSE_TF,
    VAR_HUMAN_ENSEMBLE_ID, VAR_MOUSE_ENSEMBLE_ID,
    LAYER_PRENORM, LAYER_DETECTED,
    LAYER_SCALED_NORMALIZED, EMB_MAGIC,
    EMB_PCA, EMB_PCA_HVG,
    EMB_PHATE, EMB_PHATE_HVG,
    CUTOFF_KIND, CUTOFF_SHORTHAND_TO_OBS_KEYS,
    CutoffSpecification, CutoffSpecifications,
    VAR_GENE_SYMBOL, VAR_GENE_IDS,
    OBS_DOUBLET_SCORES, OBS_PREDICTED_DOUBLETS,
    VAR_MITO
)

# %% ../nbs/04_plots.ipynb 5
import os
import copy

from typing import TypeAlias, List, Sequence, Tuple

import anndata as ad
import numpy as np
import pandas as pd
import scanpy as sc
import scrublet as scr
import scipy
import graphtools as gt
import phate
import magic

# %% ../nbs/04_plots.ipynb 6
def plot_library_size(adata:AnnData, lower:float, upper:float):
    sc.plot.plot_library_size(
        adata.X, log=False, 
        title='Library Size', 
        cutoff=(lower, upper)
    )

# %% ../nbs/04_plots.ipynb 7
from degex.utils import (
    make_qc_fig_filename
)

def make_qc_figs(
    adata:AnnData,
    save_dir:str,
    study_name:str,
) -> None:
    x = 'log10_total_counts'
    y = 'n_genes_by_counts'    
    sc.pl.scatter(
        adata, x=x, y=y, color="pct_counts_mito", 
        save=make_qc_fig_filename(
            save_dir, study_name, x, y, 'mitopct'
        )        
    )
    sc.pl.scatter(
        adata, x=x, y=y, color="pct_counts_ribo", 
        save=make_qc_fig_filename(
            save_dir, study_name, x, y, 'ribopcg'
        )
    )
    x = 'total_counts'
    sc.pl.scatter(
        adata, x=x, y=y, color="pct_counts_mito",
        save=make_qc_fig_filename(
            save_dir, study_name, x, y, 'mitopct'
        ) 
    )
    sc.pl.scatter(
        adata, x=x, y=y, color="pct_counts_ribo", 
        save=make_qc_fig_filename(
            save_dir, study_name, x, y, 'ribopcg'
        )
    )
    sc.pl.scatter(
        adata, x=x, y=y,         
        color="pct_counts_in_top_50_genes", 
        save=make_qc_fig_filename(
            save_dir, study_name, x, y, 'top50pct'
        )
    )

    x = 'pct_counts_mito'
    y = 'pct_counts_in_top_50_genes'
    sc.pl.scatter(
        adata, x=x, y=y, 
        color="n_genes_by_counts", 
        save=make_qc_fig_filename(
            save_dir, study_name, x, y, 'ngenes'
        )
    )
    x = 'pct_counts_ribo'
    sc.pl.scatter(
        adata, x=x, y=y,
        color="n_genes_by_counts", 
        save=make_qc_fig_filename(
            save_dir, study_name, x, y, 'ngenes'
        )
    )
    sc.pl.scatter(
        adata, x=x, y=y,        
        color="pct_counts_mito", 
        save=make_qc_fig_filename(
            save_dir, study_name, x, y, 'ngenes'
        )
    )
