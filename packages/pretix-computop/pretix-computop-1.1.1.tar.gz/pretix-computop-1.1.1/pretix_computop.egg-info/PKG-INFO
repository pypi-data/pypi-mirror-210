Metadata-Version: 2.1
Name: pretix-computop
Version: 1.1.1
Summary: Use Computop based payment providers
Author-email: pretix team <support@pretix.eu>
Maintainer-email: pretix team <support@pretix.eu>
License: 
        Copyright 2022 rami.io GmbH
        
        Licensed under the Apache License, Version 2.0 (the "License");
        you may not use this file except in compliance with the License.
        You may obtain a copy of the License at
        
            http://www.apache.org/licenses/LICENSE-2.0
        
        Unless required by applicable law or agreed to in writing, software
        distributed under the License is distributed on an "AS IS" BASIS,
        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        See the License for the specific language governing permissions and
        limitations under the License.
        
        
Project-URL: homepage, https://github.com/pretix/pretix-computop
Keywords: pretix
Requires-Python: >=3.9
Description-Content-Type: text/x-rst
License-File: LICENSE

Computop â€“ First Cash Solution
==============================

This is a plugin for `pretix`_. 

Allows to process payments through the payment providers Computop or First Cash Solution. The payment providers
accept various payment methods for your customers, such as payment via credit card, giropay, and many more.

Development setup
-----------------

1. Make sure that you have a working `pretix development setup`_.

2. Clone this repository.

3. Activate the virtual environment you use for pretix development.

4. Execute ``pip install -e .`` within this directory to register this application with pretix's plugin registry.

5. Execute ``make`` within this directory to compile translations.

6. Restart your local pretix server. You can now use the plugin from this repository for your events by enabling it in
   the 'plugins' tab in the settings.

This plugin has CI set up to enforce a few code style rules. To check locally, you need these packages installed::

    pip install flake8 isort black docformatter

To check your plugin for rule violations, run::

    docformatter --check -r .
    black --check .
    isort -c .
    flake8 .

You can auto-fix some of these issues by running::

    docformatter -r .
    isort .
    black .

To automatically check for these issues before you commit, you can run ``.install-hooks``.


License
-------


Copyright 2022 rami.io GmbH

Released under the terms of the Apache License 2.0



.. _pretix: https://github.com/pretix/pretix
.. _pretix development setup: https://docs.pretix.eu/en/latest/development/setup.html
