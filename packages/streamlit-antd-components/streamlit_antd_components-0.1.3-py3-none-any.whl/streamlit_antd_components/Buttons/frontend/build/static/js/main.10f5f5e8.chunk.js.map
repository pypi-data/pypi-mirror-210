{"version":3,"sources":["custom.react.js","Buttons.tsx","index.tsx"],"names":["loadStyles","url","id","document","getElementById","link","createElement","rel","type","href","root","appendChild","AlphaColor","varColor","arguments","length","undefined","alpha","sColor","getComputedStyle","querySelector","getPropertyValue","toLowerCase","test","sColorNew","i","slice","concat","sColorChange","push","parseInt","join","withStreamlitConnection","props","items","args","index","shape","align","direction","compact","grow","Component","Space","Compact","_useState","useState","_useState2","_slicedToArray","selectIndex","setSelectIndex","useEffect","Streamlit","setFrameHeight","_jsx","ConfigProvider","theme","components","Button","colorText","colorTextDisabled","colorPrimary","colorBgContainerDisabled","colorBgContainer","colorPrimaryHover","controlHeight","fontSize","children","className","map","item","idx","type_","onClick","keys","getHrefIndex","indexOf","setComponentValue","disabled","target","icon","ReactDOM","render","React","StrictMode","AntdButtons"],"mappings":"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","file":"static/js/main.10f5f5e8.chunk.js","sourcesContent":["const loadStyles = (url, id) => {\r\n    let ele = document.getElementById(id);\r\n    if (!ele) {\r\n        let link = document.createElement(\"link\");\r\n        link.rel = \"stylesheet\";\r\n        link.type = \"text/css\";\r\n        link.href = url;\r\n        link.id = id;\r\n        let root = document.getElementById(\"root\");\r\n        root && root.appendChild(link)\r\n    }\r\n}\r\n\r\nconst getHrefIndex = (items) => {\r\n    let keys = []\r\n\r\n    for (let i = 0; i < items.length; i += 1) {\r\n        if (items[i]['href'] != null) {\r\n            keys.push(i)\r\n        }\r\n    }\r\n    return keys\r\n}\r\n\r\nconst AlphaColor = (varColor = '--primary-color', alpha = 0.1) => {\r\n    let pc = getComputedStyle(document.querySelector(\":root\")).getPropertyValue(varColor)\r\n    let reg = /^#([0-9a-fA-f]{3}|[0-9a-fA-f]{6})$/;\r\n    let sColor = pc.toLowerCase();\r\n    if (sColor && reg.test(sColor)) {\r\n        if (sColor.length === 4) {\r\n            let sColorNew = \"#\";\r\n            for (let i = 1; i < 4; i += 1) {\r\n                sColorNew += sColor.slice(i, i + 1).concat(sColor.slice(i, i + 1));\r\n            }\r\n            sColor = sColorNew;\r\n        }\r\n        let sColorChange = [];\r\n        for (let i = 1; i < 7; i += 2) {\r\n            sColorChange.push(parseInt(`0x${sColor.slice(i, i + 2)}`));\r\n        }\r\n        return `rgba(${sColorChange.join(\",\")},${alpha})`;\r\n    } else {\r\n        return sColor;\r\n    }\r\n}\r\n\r\nexport {loadStyles, AlphaColor, getHrefIndex}","import {Streamlit, ComponentProps, withStreamlitConnection} from \"streamlit-component-lib\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {Button, Space, ConfigProvider,} from 'antd';\r\nimport {loadStyles, AlphaColor, getHrefIndex} from \"./custom.react\";\r\nimport \"bootstrap-icons/font/bootstrap-icons.css\";\r\nimport \"./custom.css\"\r\n\r\nconst AntdButtons = (props: ComponentProps) => {\r\n    //get data\r\n    const items: any[] = props.args['items']\r\n    const index: number | null = props.args['index']\r\n    const shape = props.args['shape']\r\n    const align = props.args['align']\r\n    const direction = props.args['direction']\r\n    const compact = props.args['compact']\r\n    const grow = props.args['grow']\r\n\r\n    //wrap component\r\n    const Component = compact ? Space.Compact : Space\r\n\r\n    //load style\r\n    grow && loadStyles(\"spaceItem.css\", \"aci\");\r\n    loadStyles('spaceItemA.css', 'acia')\r\n\r\n    //state\r\n    const [selectIndex, setSelectIndex] = useState(index)\r\n\r\n    // component height\r\n    useEffect(() => Streamlit.setFrameHeight())\r\n\r\n    //callback\r\n    const onClick = (idx: number) => {\r\n        //not href index\r\n        if (getHrefIndex(items).indexOf(idx) === -1) {\r\n            setSelectIndex(idx)\r\n            Streamlit.setComponentValue(idx)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <ConfigProvider\r\n            theme={{\r\n                components: {\r\n                    Button: {\r\n                        colorText: 'var(--text-color)',\r\n                        colorTextDisabled: AlphaColor('--text-color', 0.5),\r\n                        colorPrimary: 'var(--primary-color)',\r\n                        colorBgContainerDisabled: 'transform',\r\n                        colorBgContainer: 'var(--background-color)',\r\n                        colorPrimaryHover: 'var(--primary-color)',\r\n                        controlHeight: 35.5,\r\n                        fontSize: 16,\r\n                    },\r\n                },\r\n            }}\r\n        >\r\n            <Component\r\n                className={`${direction === 'horizontal' && 'd-flex'} justify-content-${align} flex-wrap`}\r\n                direction={direction}\r\n            >\r\n                {items.map((item: any, idx) => {\r\n                        let type_: any = index != null ? selectIndex === idx ? \"primary\" : \"default\" : \"default\"\r\n                        return <Button\r\n                            key={idx}\r\n                            type={type_}\r\n                            shape={shape}\r\n                            onClick={() => onClick(idx)}\r\n                            disabled={item['disabled']}\r\n                            href={item['href'] ? item['href'] : undefined}\r\n                            target={'_blank'}\r\n                            icon={item['icon'] && <i className={`bi bi-${item['icon']}`}/>}\r\n                            className={grow && 'flex-fill'}\r\n                        >\r\n                            {item['label']}\r\n                        </Button>\r\n                    }\r\n                )}\r\n            </Component>\r\n        </ConfigProvider>\r\n    );\r\n};\r\n\r\nexport default withStreamlitConnection(AntdButtons)\r\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport AntdButtons from \"./Buttons\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <AntdButtons/>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n)\n"],"sourceRoot":""}