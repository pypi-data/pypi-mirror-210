{"version":3,"sources":["custom.react.js","Menu.tsx","index.tsx"],"names":["strToNode","obj","Array","isArray","map","obj_","obj_copy","JSON","parse","stringify","deepCopy","icon","href","hasOwnProperty","children","_jsx","className","concat","label","target","rel","menuHeight","open_keys","items","n_arr","item","h","showItem","includes","length","item_","showItem_","arr","s","i","sum","AlphaColor","varColor","arguments","undefined","alpha","sColor","getComputedStyle","document","querySelector","getPropertyValue","toLowerCase","test","sColorNew","slice","sColorChange","push","parseInt","join","withStreamlitConnection","props","args","dsk","dok","k","allParentKeys","getParentKey","key","tree","parentKey","node","some","getParentKey_","getParent","width","inlineIndent","_useState","useState","_useState2","_slicedToArray","selectKey","setSelectKey","_useState3","_useState4","height","setHeight","useEffect","Streamlit","setFrameHeight","ConfigProvider","theme","components","Menu","radiusItem","radiusSubMenuItem","colorItemText","colorGroupTitle","colorItemTextDisabled","colorItemTextHover","colorItemTextSelected","colorItemBgHover","colorItemBgSelected","colorSubItemBg","colorItemBg","colorActiveBarWidth","itemMarginInline","colorSplit","onSelect","e","hrefKeys","keys","getKey","getHrefKeys","indexOf","setComponentValue","onOpenChange","selectedKeys","style","borderRightWidth","defaultSelectedKeys","defaultOpenKeys","mode","ReactDOM","render","React","StrictMode","AntdMenu","getElementById"],"mappings":"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","file":"static/js/main.2b9e8313.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"bootstrap-icons/font/bootstrap-icons.css\";\r\n\r\n//deep copy object func\r\nconst deepCopy = (obj) => {\r\n    return JSON.parse(JSON.stringify(obj))\r\n}\r\n//recurve str property to react node\r\nconst strToNode = (obj) => {\r\n    if (Array.isArray(obj)) {\r\n        return obj.map(obj_ => strToNode(obj_))\r\n    } else {\r\n        let obj_copy = deepCopy(obj);\r\n        const icon = obj_copy.icon;\r\n        const href = obj_copy.href;\r\n        if (obj_copy.hasOwnProperty('children')) {\r\n            obj_copy.children = obj_copy.children.map(obj_ => strToNode(obj_))\r\n        }\r\n        if (icon) {\r\n            obj_copy.icon = <span><i className={`bi bi-${icon}`}/></span>\r\n        }\r\n        if (href) {\r\n            obj_copy.label = <a href={href} target='_blank' rel='noreferrer'>{obj_copy.label}</a>\r\n        }\r\n        return obj_copy\r\n    }\r\n}\r\n\r\n//all parent keys\r\nconst getParent = (k, obj) => {\r\n    let allParentKeys = []\r\n    //get one parent key\r\n    const getParentKey = (key, tree) => {\r\n        let parentKey;\r\n        for (let i = 0; i < tree.length; i++) {\r\n            const node = tree[i];\r\n            if (node.children) {\r\n                if (node.children.some((item) => item.key === key)) {\r\n                    parentKey = node.key;\r\n                } else if (getParentKey(key, node.children)) {\r\n                    parentKey = getParentKey(key, node.children);\r\n                }\r\n            }\r\n        }\r\n        return parentKey;\r\n    }\r\n    const getParentKey_ = (k, obj) => {\r\n        let key = getParentKey(k, obj)\r\n        if (key) {\r\n            allParentKeys.push(key)\r\n            getParentKey_(key, obj)\r\n        }\r\n    }\r\n    getParentKey_(k, obj)\r\n    return allParentKeys\r\n}\r\n\r\nconst menuHeight = (open_keys, items) => {\r\n\r\n    const showItem_ = (open_keys, item) => {\r\n        let h = 48\r\n        const showItem = (open_keys, item) => {\r\n            if (item.hasOwnProperty('key') && open_keys) {\r\n                if (item.hasOwnProperty('children')) {\r\n                    if (open_keys.includes(item['key']) || item.hasOwnProperty('type')) {\r\n                        h += item['children'].length*45\r\n                        item['children'].map(item_ => showItem(open_keys, item_))\r\n                    }\r\n                }\r\n            }\r\n            if (item.hasOwnProperty('dashed')) {\r\n                h = 2\r\n            }\r\n        }\r\n        showItem(open_keys, item)\r\n        return h\r\n    }\r\n\r\n    function sum(arr) {\r\n        let s = 0;\r\n        for (let i = arr.length - 1; i >= 0; i--) {\r\n            s += arr[i];\r\n        }\r\n        return s;\r\n    }\r\n\r\n    let n_arr = items.map(item => showItem_(open_keys, item))\r\n    return sum(n_arr)\r\n}\r\n\r\n\r\nconst getHrefKeys = (items) => {\r\n    let keys = []\r\n\r\n    const getKey = (obj) => {\r\n        if (Array.isArray(obj)) {\r\n            obj.map(obj_ => getKey(obj_))\r\n        } else {\r\n            if (obj.hasOwnProperty('children')) {\r\n                obj.children.map((obj_) => getKey(obj_))\r\n            }\r\n            if (obj.href != null) {\r\n                keys.push(obj.key)\r\n            }\r\n        }\r\n    }\r\n    getKey(items)\r\n    return keys\r\n}\r\n\r\nconst AlphaColor = (varColor = '--primary-color', alpha = 0.1) => {\r\n    let pc = getComputedStyle(document.querySelector(\":root\")).getPropertyValue(varColor)\r\n    let reg = /^#([0-9a-fA-f]{3}|[0-9a-fA-f]{6})$/;\r\n    let sColor = pc.toLowerCase();\r\n    if (sColor && reg.test(sColor)) {\r\n        if (sColor.length === 4) {\r\n            let sColorNew = \"#\";\r\n            for (let i = 1; i < 4; i += 1) {\r\n                sColorNew += sColor.slice(i, i + 1).concat(sColor.slice(i, i + 1));\r\n            }\r\n            sColor = sColorNew;\r\n        }\r\n        let sColorChange = [];\r\n        for (let i = 1; i < 7; i += 2) {\r\n            sColorChange.push(parseInt(`0x${sColor.slice(i, i + 2)}`));\r\n        }\r\n        return `rgba(${sColorChange.join(\",\")},${alpha})`;\r\n    } else {\r\n        return sColor;\r\n    }\r\n}\r\n\r\n\r\nexport {strToNode, AlphaColor, getParent, getHrefKeys, menuHeight}","import {Streamlit, ComponentProps, withStreamlitConnection} from \"streamlit-component-lib\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport type {MenuProps} from 'antd';\r\nimport {Menu, ConfigProvider} from 'antd';\r\nimport {strToNode, AlphaColor, getParent, getHrefKeys, menuHeight} from \"./custom.react\";\r\n\r\nconst AntdMenu = (props: ComponentProps) => {\r\n    //get data\r\n    const items = props.args['items']\r\n    const dsk = props.args['defaultSelectedKeys']\r\n    const dok = props.args['defaultOpenKeys'] ? props.args['defaultOpenKeys'] : dsk && getParent(dsk[0], items)\r\n    const width = props.args['width']\r\n    const inlineIndent = props.args['inlineIndent']\r\n\r\n    //state\r\n    const [selectKey, setSelectKey] = useState(dsk)\r\n    const [height, setHeight] = useState(menuHeight(dok, items))\r\n\r\n    //component height\r\n    useEffect(() => Streamlit.setFrameHeight(height))\r\n\r\n    //callback\r\n    const onSelect: MenuProps['onSelect'] = (e) => {\r\n        //only not href item will fire\r\n        let hrefKeys = getHrefKeys(items)\r\n        if (hrefKeys.indexOf(e.key) === -1) {\r\n            setSelectKey(e.key);\r\n            Streamlit.setComponentValue(e.key);\r\n        }\r\n    }\r\n    const onOpenChange: MenuProps['onOpenChange'] = (e) => {\r\n        //update component height\r\n        setHeight(menuHeight(e, items))\r\n    }\r\n\r\n    // antd menu component\r\n    return (\r\n        <ConfigProvider\r\n            theme={{\r\n                components: {\r\n                    //custom menu theme\r\n                    Menu: {\r\n                        radiusItem: 0,\r\n                        radiusSubMenuItem: 0,\r\n                        colorItemText: 'var(--text-color)',\r\n                        colorGroupTitle: AlphaColor('--text-color', 0.8),\r\n                        colorItemTextDisabled: AlphaColor('--text-color', 0.5),\r\n                        colorItemTextHover: 'var(--primary-color)',\r\n                        colorItemTextSelected: 'var(--primary-color)',\r\n                        colorItemBgHover: AlphaColor(),\r\n                        colorItemBgSelected: AlphaColor(),\r\n                        colorSubItemBg: 'var(--background-color)',\r\n                        colorItemBg: 'var(--background-color)',\r\n                        colorActiveBarWidth: 4,\r\n                        itemMarginInline: 0,\r\n                        colorSplit: AlphaColor('--text-color', 0.3),\r\n                    },\r\n                },\r\n            }}\r\n        >\r\n            <Menu\r\n                onSelect={onSelect}\r\n                onOpenChange={onOpenChange}\r\n                selectedKeys={selectKey}\r\n                style={{borderRightWidth: 0, width: width}}\r\n                defaultSelectedKeys={[dsk]}\r\n                defaultOpenKeys={dok}\r\n                mode={'inline'}\r\n                items={strToNode(items)}\r\n                inlineIndent={inlineIndent}\r\n            />\r\n        </ConfigProvider>\r\n    );\r\n};\r\n\r\nexport default withStreamlitConnection(AntdMenu)\r\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport AntdMenu from \"./Menu\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <AntdMenu />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}