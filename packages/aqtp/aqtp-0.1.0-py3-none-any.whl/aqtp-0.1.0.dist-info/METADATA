Metadata-Version: 2.1
Name: aqtp
Version: 0.1.0
Summary: AQT: Accurate Quantized Training
Home-page: https://github.com/google/aqt
Author: Cerebra Catalyst team
Author-email: cerebra-catalyst-team@google.com
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: Science/Research
Classifier: License :: OSI Approved :: Apache Software License
Classifier: Programming Language :: Python :: 3.7
Classifier: Topic :: Scientific/Engineering :: Artificial Intelligence
Description-Content-Type: text/markdown
License-File: LICENSE
Provides-Extra: jax_legacy
Requires-Dist: numpy (>=1.16.4) ; extra == 'jax_legacy'
Requires-Dist: jax (>=0.3.4) ; extra == 'jax_legacy'
Requires-Dist: flax (>=0.4.1) ; extra == 'jax_legacy'
Requires-Dist: tensorflow (>=2.3.1) ; extra == 'jax_legacy'
Requires-Dist: tensorflow-datasets (>=4.5.2) ; extra == 'jax_legacy'
Requires-Dist: dacite (>=1.6.0) ; extra == 'jax_legacy'
Requires-Dist: ml-collections (>=0.1.1) ; extra == 'jax_legacy'

# AQT : Accurate Quantized Training

AQT is a quantization library designed to allow utilization of
low-bit and high-performance numerics of contemporary ML hardware accelerators.
AQT supports both research and production[^research-vs-prod], but focuses on the latter.

[^research-vs-prod]: The support for research is exemplified by having a state of the art quantization quality on standard models such as ResNet and Transformer. The production aspect is defined as high performance and robust out-of-the-box working results with good defaults.

## Citing AQT

Please use a following bibtex entry:

```
@software{aqt2022github,
  author = {Lew, Lukasz and Feinberg, Vlad and Agrawal, Shivani and Lee, Jihwan and Malmaud, Jonathan and Wang, Lisa and  Dormiani, Pouya and Pope, Reiner },
  title = {AQT: Accurate Quantized Training)},
  url = {http://github.com/google/aqt},
  year = {2022},
}
```

## Publishing a package

- Make sure newest commits are in.
- Update version number in setup.py.

```

python3 -m pip install --upgrade build
python3 -m build

python3 -m pip install --upgrade twine
python3 -m twine upload dist/*
```
