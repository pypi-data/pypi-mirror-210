"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.message
import preemo.gen.models.registered_function_pb2
import sys
import typing

if sys.version_info >= (3, 8):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing_extensions.final
class CpuRequirements(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    MILLICORES_FIELD_NUMBER: builtins.int
    MEMORY_IN_BYTES_FIELD_NUMBER: builtins.int
    STORAGE_IN_BYTES_FIELD_NUMBER: builtins.int
    millicores: builtins.int
    """Optional field where 1000 millicores equals 1 CPU.
    From https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#meaning-of-cpu:
    "For CPU resource units, the quantity expression 0.1 is equivalent to the expression 100m, which can be read as 'one hundred millicpu'."
    """
    memory_in_bytes: builtins.int
    """Optional field indicating amount of memory needed.
    Not all precisions may be accepted.
    For example, the worker may choose to only accept values that are multiples of Mebibytes.
    """
    storage_in_bytes: builtins.int
    """Optional field indicating amount of storage needed.
    Not all precisions may be accepted.
    For example, the worker may choose to only accept values that are multiples of Mebibytes.
    """
    def __init__(
        self,
        *,
        millicores: builtins.int | None = ...,
        memory_in_bytes: builtins.int | None = ...,
        storage_in_bytes: builtins.int | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_memory_in_bytes", b"_memory_in_bytes", "_millicores", b"_millicores", "_storage_in_bytes", b"_storage_in_bytes", "memory_in_bytes", b"memory_in_bytes", "millicores", b"millicores", "storage_in_bytes", b"storage_in_bytes"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_memory_in_bytes", b"_memory_in_bytes", "_millicores", b"_millicores", "_storage_in_bytes", b"_storage_in_bytes", "memory_in_bytes", b"memory_in_bytes", "millicores", b"millicores", "storage_in_bytes", b"storage_in_bytes"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_memory_in_bytes", b"_memory_in_bytes"]) -> typing_extensions.Literal["memory_in_bytes"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_millicores", b"_millicores"]) -> typing_extensions.Literal["millicores"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_storage_in_bytes", b"_storage_in_bytes"]) -> typing_extensions.Literal["storage_in_bytes"] | None: ...

global___CpuRequirements = CpuRequirements

@typing_extensions.final
class GpuRequirements(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    GPU_MODEL_FIELD_NUMBER: builtins.int
    GPU_COUNT_FIELD_NUMBER: builtins.int
    MEMORY_IN_BYTES_FIELD_NUMBER: builtins.int
    STORAGE_IN_BYTES_FIELD_NUMBER: builtins.int
    gpu_model: builtins.str
    """Required field indicating which GPU machine should be used to execute the function."""
    gpu_count: builtins.int
    """Optional field indicating the number of GPU devices needed."""
    memory_in_bytes: builtins.int
    """Optional field indicating amount of memory needed.
    Not all precisions may be accepted.
    For example, the worker may choose to only accept values that are multiples of Mebibytes.
    """
    storage_in_bytes: builtins.int
    """Optional field indicating amount of storage needed.
    Not all precisions may be accepted.
    For example, the worker may choose to only accept values that are multiples of Mebibytes.
    """
    def __init__(
        self,
        *,
        gpu_model: builtins.str | None = ...,
        gpu_count: builtins.int | None = ...,
        memory_in_bytes: builtins.int | None = ...,
        storage_in_bytes: builtins.int | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_gpu_count", b"_gpu_count", "_gpu_model", b"_gpu_model", "_memory_in_bytes", b"_memory_in_bytes", "_storage_in_bytes", b"_storage_in_bytes", "gpu_count", b"gpu_count", "gpu_model", b"gpu_model", "memory_in_bytes", b"memory_in_bytes", "storage_in_bytes", b"storage_in_bytes"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_gpu_count", b"_gpu_count", "_gpu_model", b"_gpu_model", "_memory_in_bytes", b"_memory_in_bytes", "_storage_in_bytes", b"_storage_in_bytes", "gpu_count", b"gpu_count", "gpu_model", b"gpu_model", "memory_in_bytes", b"memory_in_bytes", "storage_in_bytes", b"storage_in_bytes"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_gpu_count", b"_gpu_count"]) -> typing_extensions.Literal["gpu_count"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_gpu_model", b"_gpu_model"]) -> typing_extensions.Literal["gpu_model"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_memory_in_bytes", b"_memory_in_bytes"]) -> typing_extensions.Literal["memory_in_bytes"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_storage_in_bytes", b"_storage_in_bytes"]) -> typing_extensions.Literal["storage_in_bytes"] | None: ...

global___GpuRequirements = GpuRequirements

@typing_extensions.final
class ResourceRequirements(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CPU_FIELD_NUMBER: builtins.int
    GPU_FIELD_NUMBER: builtins.int
    @property
    def cpu(self) -> global___CpuRequirements: ...
    @property
    def gpu(self) -> global___GpuRequirements: ...
    def __init__(
        self,
        *,
        cpu: global___CpuRequirements | None = ...,
        gpu: global___GpuRequirements | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["cpu", b"cpu", "gpu", b"gpu", "kind", b"kind"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["cpu", b"cpu", "gpu", b"gpu", "kind", b"kind"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["kind", b"kind"]) -> typing_extensions.Literal["cpu", "gpu"] | None: ...

global___ResourceRequirements = ResourceRequirements

@typing_extensions.final
class RegisterFunctionRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    FUNCTION_TO_REGISTER_FIELD_NUMBER: builtins.int
    RESOURCE_REQUIREMENTS_FIELD_NUMBER: builtins.int
    @property
    def function_to_register(self) -> preemo.gen.models.registered_function_pb2.RegisteredFunction:
        """Required."""
    @property
    def resource_requirements(self) -> global___ResourceRequirements:
        """Optional field indicating resources that should be allocated for executing this function."""
    def __init__(
        self,
        *,
        function_to_register: preemo.gen.models.registered_function_pb2.RegisteredFunction | None = ...,
        resource_requirements: global___ResourceRequirements | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_function_to_register", b"_function_to_register", "_resource_requirements", b"_resource_requirements", "function_to_register", b"function_to_register", "resource_requirements", b"resource_requirements"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_function_to_register", b"_function_to_register", "_resource_requirements", b"_resource_requirements", "function_to_register", b"function_to_register", "resource_requirements", b"resource_requirements"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_function_to_register", b"_function_to_register"]) -> typing_extensions.Literal["function_to_register"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_resource_requirements", b"_resource_requirements"]) -> typing_extensions.Literal["resource_requirements"] | None: ...

global___RegisterFunctionRequest = RegisterFunctionRequest

@typing_extensions.final
class RegisterFunctionResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    def __init__(
        self,
    ) -> None: ...

global___RegisterFunctionResponse = RegisterFunctionResponse
