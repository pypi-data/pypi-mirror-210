# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

import pydantic

from ..core.datetime_utils import serialize_datetime


class CreateAGeolocationListItemRequestDataAttributes(pydantic.BaseModel):
    list_id: typing.Optional[str] = pydantic.Field(
        alias="list-id", description=("ID of the list to add this item to. List must be a Geolocation List.\n")
    )
    latitude: typing.Optional[float] = pydantic.Field(description=("Latitude of the geolocation item (-90 to 90).\n"))
    longitude: typing.Optional[float] = pydantic.Field(description=("Longitude of geolocation item (-180 to 180).\n"))
    radius_meters: typing.Optional[float] = pydantic.Field(
        alias="radius-meters", description=("Radius in meters from point to be considered for match distance.\n")
    )

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().dict(**kwargs_with_defaults)

    class Config:
        frozen = True
        allow_population_by_field_name = True
        json_encoders = {dt.datetime: serialize_datetime}
