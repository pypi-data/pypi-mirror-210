# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

import pydantic

from ..core.datetime_utils import serialize_datetime


class CreateATinDatabaseVerificationsRequestDataAttributes(pydantic.BaseModel):
    verification_template_id: str = pydantic.Field(
        alias="verification-template-id",
        description=(
            'ID of Verification Template. You can find your Verification Template IDs [here](https://app.withpersona.com/dashboard/verification-templates?filter=%7B%22type%22%3A%5B%22verification-template%2Fdatabase-tin"%5D%7D)\n'
        ),
    )
    tin: str = pydantic.Field(description=("US Taxpayer Identification Number\n"))
    name_first: typing.Optional[str] = pydantic.Field(
        alias="name-first", description=("First name of the individual\n")
    )
    name_last: typing.Optional[str] = pydantic.Field(alias="name-last", description=("Last name of the individual\n"))
    name_business: typing.Optional[str] = pydantic.Field(alias="name-business", description=("Corporate name\n"))

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().dict(**kwargs_with_defaults)

    class Config:
        frozen = True
        allow_population_by_field_name = True
        json_encoders = {dt.datetime: serialize_datetime}
