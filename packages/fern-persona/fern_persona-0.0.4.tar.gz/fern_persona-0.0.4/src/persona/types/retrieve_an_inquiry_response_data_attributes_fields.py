# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

import pydantic

from ..core.datetime_utils import serialize_datetime
from .retrieve_an_inquiry_response_data_attributes_fields_name_first import (
    RetrieveAnInquiryResponseDataAttributesFieldsNameFirst,
)
from .retrieve_an_inquiry_response_data_attributes_fields_name_last import (
    RetrieveAnInquiryResponseDataAttributesFieldsNameLast,
)


class RetrieveAnInquiryResponseDataAttributesFields(pydantic.BaseModel):
    name_first: typing.Optional[RetrieveAnInquiryResponseDataAttributesFieldsNameFirst] = pydantic.Field(
        alias="name-first"
    )
    name_last: typing.Optional[RetrieveAnInquiryResponseDataAttributesFieldsNameLast] = pydantic.Field(
        alias="name-last"
    )

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().dict(**kwargs_with_defaults)

    class Config:
        frozen = True
        allow_population_by_field_name = True
        json_encoders = {dt.datetime: serialize_datetime}
