# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

import pydantic

from ..core.datetime_utils import serialize_datetime


class RetrieveAnInquiryResponseDataAttributesBehaviours(pydantic.BaseModel):
    request_spoof_attempts: typing.Optional[int] = pydantic.Field(alias="request-spoof-attempts")
    user_agent_spoof_attempts: typing.Optional[int] = pydantic.Field(alias="user-agent-spoof-attempts")
    distraction_events: typing.Optional[int] = pydantic.Field(alias="distraction-events")
    hesitation_baseline: typing.Optional[int] = pydantic.Field(alias="hesitation-baseline")
    hesitation_count: typing.Optional[int] = pydantic.Field(alias="hesitation-count")
    hesitation_time: typing.Optional[int] = pydantic.Field(alias="hesitation-time")
    shortcut_copies: typing.Optional[int] = pydantic.Field(alias="shortcut-copies")
    shortcut_pastes: typing.Optional[int] = pydantic.Field(alias="shortcut-pastes")
    autofill_cancels: typing.Optional[int] = pydantic.Field(alias="autofill-cancels")
    autofill_starts: typing.Optional[int] = pydantic.Field(alias="autofill-starts")
    devtools_open: typing.Optional[bool] = pydantic.Field(alias="devtools-open")
    completion_time: typing.Optional[float] = pydantic.Field(alias="completion-time")
    hesitation_percentage: typing.Optional[float] = pydantic.Field(alias="hesitation-percentage")
    behavior_threat_level: typing.Optional[str] = pydantic.Field(alias="behavior-threat-level")

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().dict(**kwargs_with_defaults)

    class Config:
        frozen = True
        allow_population_by_field_name = True
        json_encoders = {dt.datetime: serialize_datetime}
