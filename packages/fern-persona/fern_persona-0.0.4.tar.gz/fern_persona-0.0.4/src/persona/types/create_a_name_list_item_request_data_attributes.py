# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

import pydantic

from ..core.datetime_utils import serialize_datetime


class CreateANameListItemRequestDataAttributes(pydantic.BaseModel):
    list_id: typing.Optional[str] = pydantic.Field(
        alias="list-id", description=("ID of the list to add this item to. List must be a Name List.\n")
    )
    name_first: typing.Optional[str] = pydantic.Field(
        alias="name-first", description=("First name of the name to add to the list.\n")
    )
    name_last: typing.Optional[str] = pydantic.Field(
        alias="name-last", description=("Last name of the name to add to the list.\n")
    )

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().dict(**kwargs_with_defaults)

    class Config:
        frozen = True
        allow_population_by_field_name = True
        json_encoders = {dt.datetime: serialize_datetime}
