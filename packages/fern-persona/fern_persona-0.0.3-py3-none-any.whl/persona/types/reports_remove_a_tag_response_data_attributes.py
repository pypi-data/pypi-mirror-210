# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

import pydantic

from ..core.datetime_utils import serialize_datetime


class ReportsRemoveATagResponseDataAttributes(pydantic.BaseModel):
    status: typing.Optional[str]
    created_at: typing.Optional[str] = pydantic.Field(alias="created-at")
    completed_at: typing.Optional[str] = pydantic.Field(alias="completed-at")
    redacted_at: typing.Optional[typing.Any] = pydantic.Field(alias="redacted-at")
    report_template_version_name: typing.Optional[str] = pydantic.Field(alias="report-template-version-name")
    email_address: typing.Optional[str] = pydantic.Field(alias="email-address")
    email_domain_exists: typing.Optional[typing.Any] = pydantic.Field(alias="email-domain-exists")
    email_domain_reputation: typing.Optional[typing.Any] = pydantic.Field(alias="email-domain-reputation")
    email_domain_is_new: typing.Optional[typing.Any] = pydantic.Field(alias="email-domain-is-new")
    email_domain_days_since_creation: typing.Optional[typing.Any] = pydantic.Field(
        alias="email-domain-days-since-creation"
    )
    email_domain_suspicious_tld: typing.Optional[typing.Any] = pydantic.Field(alias="email-domain-suspicious-tld")
    employers: typing.Optional[typing.List[typing.Any]]

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().dict(**kwargs_with_defaults)

    class Config:
        frozen = True
        allow_population_by_field_name = True
        json_encoders = {dt.datetime: serialize_datetime}
