# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

import pydantic

from ..core.datetime_utils import serialize_datetime
from .list_all_inquiries_response_data_item_relationships_account import (
    ListAllInquiriesResponseDataItemRelationshipsAccount,
)
from .list_all_inquiries_response_data_item_relationships_reports import (
    ListAllInquiriesResponseDataItemRelationshipsReports,
)
from .list_all_inquiries_response_data_item_relationships_sessions import (
    ListAllInquiriesResponseDataItemRelationshipsSessions,
)
from .list_all_inquiries_response_data_item_relationships_template import (
    ListAllInquiriesResponseDataItemRelationshipsTemplate,
)
from .list_all_inquiries_response_data_item_relationships_verifications import (
    ListAllInquiriesResponseDataItemRelationshipsVerifications,
)


class ListAllInquiriesResponseDataItemRelationships(pydantic.BaseModel):
    account: typing.Optional[ListAllInquiriesResponseDataItemRelationshipsAccount]
    template: typing.Optional[ListAllInquiriesResponseDataItemRelationshipsTemplate]
    reports: typing.Optional[ListAllInquiriesResponseDataItemRelationshipsReports]
    verifications: typing.Optional[ListAllInquiriesResponseDataItemRelationshipsVerifications]
    sessions: typing.Optional[ListAllInquiriesResponseDataItemRelationshipsSessions]

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().dict(**kwargs_with_defaults)

    class Config:
        frozen = True
        json_encoders = {dt.datetime: serialize_datetime}
