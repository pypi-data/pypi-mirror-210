# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

import pydantic

from ..core.datetime_utils import serialize_datetime


class UpdateAnInquiryRequestDataAttributes(pydantic.BaseModel):
    identification_number: typing.Optional[str] = pydantic.Field(
        alias="identification-number", description=("Identification numbers, i.e. SSN\n")
    )
    locale: typing.Optional[str]
    selected_country_code: typing.Optional[str] = pydantic.Field(alias="selected-country-code")
    name_first: typing.Optional[str] = pydantic.Field(alias="name-first")
    name_middle: typing.Optional[str] = pydantic.Field(alias="name-middle")
    name_last: typing.Optional[str] = pydantic.Field(alias="name-last")
    birthdate: typing.Optional[str] = pydantic.Field(description=("Use the following format: YYYY-MM-DD\n"))
    email_address: typing.Optional[str] = pydantic.Field(alias="email-address")
    phone_number: typing.Optional[str] = pydantic.Field(alias="phone-number")
    address_street_1: typing.Optional[str] = pydantic.Field(alias="address-street-1")
    address_street_2: typing.Optional[str] = pydantic.Field(alias="address-street-2")
    address_city: typing.Optional[str] = pydantic.Field(alias="address-city")
    address_subdivision: typing.Optional[str] = pydantic.Field(alias="address-subdivision")
    address_postal_code: typing.Optional[str] = pydantic.Field(alias="address-postal-code")
    note: typing.Optional[str]

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().dict(**kwargs_with_defaults)

    class Config:
        frozen = True
        allow_population_by_field_name = True
        json_encoders = {dt.datetime: serialize_datetime}
