# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

import pydantic

from ..core.datetime_utils import serialize_datetime
from .generate_a_one_time_link_response_data_relationships_account import (
    GenerateAOneTimeLinkResponseDataRelationshipsAccount,
)
from .generate_a_one_time_link_response_data_relationships_documents import (
    GenerateAOneTimeLinkResponseDataRelationshipsDocuments,
)
from .generate_a_one_time_link_response_data_relationships_inquiry_template import (
    GenerateAOneTimeLinkResponseDataRelationshipsInquiryTemplate,
)
from .generate_a_one_time_link_response_data_relationships_inquiry_template_version import (
    GenerateAOneTimeLinkResponseDataRelationshipsInquiryTemplateVersion,
)
from .generate_a_one_time_link_response_data_relationships_reports import (
    GenerateAOneTimeLinkResponseDataRelationshipsReports,
)
from .generate_a_one_time_link_response_data_relationships_reviewer import (
    GenerateAOneTimeLinkResponseDataRelationshipsReviewer,
)
from .generate_a_one_time_link_response_data_relationships_selfies import (
    GenerateAOneTimeLinkResponseDataRelationshipsSelfies,
)
from .generate_a_one_time_link_response_data_relationships_sessions import (
    GenerateAOneTimeLinkResponseDataRelationshipsSessions,
)
from .generate_a_one_time_link_response_data_relationships_template import (
    GenerateAOneTimeLinkResponseDataRelationshipsTemplate,
)
from .generate_a_one_time_link_response_data_relationships_verifications import (
    GenerateAOneTimeLinkResponseDataRelationshipsVerifications,
)


class GenerateAOneTimeLinkResponseDataRelationships(pydantic.BaseModel):
    account: typing.Optional[GenerateAOneTimeLinkResponseDataRelationshipsAccount]
    template: typing.Optional[GenerateAOneTimeLinkResponseDataRelationshipsTemplate]
    inquiry_template: typing.Optional[GenerateAOneTimeLinkResponseDataRelationshipsInquiryTemplate] = pydantic.Field(
        alias="inquiry-template"
    )
    inquiry_template_version: typing.Optional[
        GenerateAOneTimeLinkResponseDataRelationshipsInquiryTemplateVersion
    ] = pydantic.Field(alias="inquiry-template-version")
    reviewer: typing.Optional[GenerateAOneTimeLinkResponseDataRelationshipsReviewer]
    reports: typing.Optional[GenerateAOneTimeLinkResponseDataRelationshipsReports]
    verifications: typing.Optional[GenerateAOneTimeLinkResponseDataRelationshipsVerifications]
    sessions: typing.Optional[GenerateAOneTimeLinkResponseDataRelationshipsSessions]
    documents: typing.Optional[GenerateAOneTimeLinkResponseDataRelationshipsDocuments]
    selfies: typing.Optional[GenerateAOneTimeLinkResponseDataRelationshipsSelfies]

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().dict(**kwargs_with_defaults)

    class Config:
        frozen = True
        allow_population_by_field_name = True
        json_encoders = {dt.datetime: serialize_datetime}
