# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

import pydantic

from ..core.datetime_utils import serialize_datetime


class CreateAnInquiryRequestDataAttributesFields(pydantic.BaseModel):
    """
    JSON key-value pairs of field name to field value. <br><br>Common fields include <ul><li>`name-first`</li><li>`name-last`</li><li>`birthdate`</li><li>`address-street-1`</li><li>`address-city`</li><li>`address-subdivision`</li><li>`address-postal-code`</li><li>`address-country-code`</li><li>`phone-number`</li><li>`email-address`</li></ul>
    """

    name_first: typing.Optional[str] = pydantic.Field(alias="name-first", description=("optional\n"))
    name_last: typing.Optional[str] = pydantic.Field(alias="name-last", description=("optional\n"))
    birthdate: typing.Optional[str] = pydantic.Field(description=("optional\n"))
    address_street_1: typing.Optional[str] = pydantic.Field(alias="address-street-1", description=("optional\n"))
    address_city: typing.Optional[str] = pydantic.Field(alias="address-city", description=("optional\n"))
    address_subdivision: typing.Optional[str] = pydantic.Field(alias="address-subdivision", description=("optional\n"))
    address_postal_code: typing.Optional[str] = pydantic.Field(alias="address-postal-code", description=("optional\n"))
    address_country_code: typing.Optional[str] = pydantic.Field(
        alias="address-country-code", description=("optional\n")
    )
    phone_number: typing.Optional[str] = pydantic.Field(alias="phone-number", description=("optional\n"))
    email_address: typing.Optional[str] = pydantic.Field(alias="email-address", description=("optional\n"))

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().dict(**kwargs_with_defaults)

    class Config:
        frozen = True
        allow_population_by_field_name = True
        json_encoders = {dt.datetime: serialize_datetime}
