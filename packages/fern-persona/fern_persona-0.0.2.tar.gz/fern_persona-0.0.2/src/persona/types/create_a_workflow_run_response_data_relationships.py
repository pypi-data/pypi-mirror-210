# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

import pydantic

from ..core.datetime_utils import serialize_datetime
from .create_a_workflow_run_response_data_relationships_creator import (
    CreateAWorkflowRunResponseDataRelationshipsCreator,
)
from .create_a_workflow_run_response_data_relationships_workflow import (
    CreateAWorkflowRunResponseDataRelationshipsWorkflow,
)
from .create_a_workflow_run_response_data_relationships_workflow_version import (
    CreateAWorkflowRunResponseDataRelationshipsWorkflowVersion,
)


class CreateAWorkflowRunResponseDataRelationships(pydantic.BaseModel):
    workflow_version: typing.Optional[CreateAWorkflowRunResponseDataRelationshipsWorkflowVersion] = pydantic.Field(
        alias="workflow-version"
    )
    workflow: typing.Optional[CreateAWorkflowRunResponseDataRelationshipsWorkflow]
    creator: typing.Optional[CreateAWorkflowRunResponseDataRelationshipsCreator]

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().dict(**kwargs_with_defaults)

    class Config:
        frozen = True
        allow_population_by_field_name = True
        json_encoders = {dt.datetime: serialize_datetime}
