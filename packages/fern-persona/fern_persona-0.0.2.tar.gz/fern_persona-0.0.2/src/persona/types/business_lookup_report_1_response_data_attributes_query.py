# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

import pydantic

from ..core.datetime_utils import serialize_datetime


class BusinessLookupReport1ResponseDataAttributesQuery(pydantic.BaseModel):
    registration_country_code: typing.Optional[str] = pydantic.Field(alias="registration-country-code")
    registration_number: typing.Optional[str] = pydantic.Field(alias="registration-number")
    name: typing.Optional[str]
    legal_status: typing.Optional[str] = pydantic.Field(alias="legal-status")
    legal_entity_type: typing.Optional[str] = pydantic.Field(alias="legal-entity-type")
    registration_subdivision: typing.Optional[typing.Any] = pydantic.Field(alias="registration-subdivision")

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().dict(**kwargs_with_defaults)

    class Config:
        frozen = True
        allow_population_by_field_name = True
        json_encoders = {dt.datetime: serialize_datetime}
