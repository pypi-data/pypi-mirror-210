# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

import pydantic

from ..core.datetime_utils import serialize_datetime
from .add_persona_objects_response_data_relationships_accounts import AddPersonaObjectsResponseDataRelationshipsAccounts
from .add_persona_objects_response_data_relationships_case_comments import (
    AddPersonaObjectsResponseDataRelationshipsCaseComments,
)
from .add_persona_objects_response_data_relationships_case_template import (
    AddPersonaObjectsResponseDataRelationshipsCaseTemplate,
)
from .add_persona_objects_response_data_relationships_inquiries import (
    AddPersonaObjectsResponseDataRelationshipsInquiries,
)
from .add_persona_objects_response_data_relationships_reports import AddPersonaObjectsResponseDataRelationshipsReports


class AddPersonaObjectsResponseDataRelationships(pydantic.BaseModel):
    case_template: typing.Optional[AddPersonaObjectsResponseDataRelationshipsCaseTemplate] = pydantic.Field(
        alias="case-template"
    )
    case_comments: typing.Optional[AddPersonaObjectsResponseDataRelationshipsCaseComments] = pydantic.Field(
        alias="case-comments"
    )
    accounts: typing.Optional[AddPersonaObjectsResponseDataRelationshipsAccounts]
    inquiries: typing.Optional[AddPersonaObjectsResponseDataRelationshipsInquiries]
    reports: typing.Optional[AddPersonaObjectsResponseDataRelationshipsReports]

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().dict(**kwargs_with_defaults)

    class Config:
        frozen = True
        allow_population_by_field_name = True
        json_encoders = {dt.datetime: serialize_datetime}
