{"version":3,"file":"extension.js","mappings":";;;;;;;;;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;;;;;;;UClBA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;UEtBA;UACA;UACA;UACA","sources":["webpack://jupyter-scatter/./extension.js","webpack://jupyter-scatter/webpack/bootstrap","webpack://jupyter-scatter/webpack/before-startup","webpack://jupyter-scatter/webpack/startup","webpack://jupyter-scatter/webpack/after-startup"],"sourcesContent":["// This file contains the javascript that is run when the notebook is loaded.\n// It contains some requirejs configuration and the `load_ipython_extension`\n// which is required for any notebook extension.\n\n// Configure requirejs\nif (window.require) {\n  window.require.config({\n    map: {\n      \"*\" : {\n        \"jupyter-scatter\": \"nbextensions/jupyter-scatter/index\",\n      }\n    }\n  });\n}\n\n// Export the required load_ipython_extension\nmodule.exports = {\n  load_ipython_extension: function() {}\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(\"./extension.js\");\n",""],"names":[],"sourceRoot":""}