(undo-tree-save-format-version . 1)
"c50bcbbbe6141af68fab6e456fe80e846f546050"
[nil nil nil nil (25628 20157 976324 663000) 0 nil]
([nil nil ((3210 . 3215) (#("iteritems" 0 9 (fontified t)) . 3210) (undo-tree-id4 . -9) (undo-tree-id5 . -9) (undo-tree-id6 . -9) (undo-tree-id7 . -8) (t 25628 11845 667756 27000)) nil (25628 20157 976321 315000) 0 nil])
([nil nil ((4278 . 4283) (#("iteritems" 0 9 (fontified t)) . 4278) (undo-tree-id0 . -9) (undo-tree-id1 . -8) (undo-tree-id2 . -9) (undo-tree-id3 . -9)) nil (25628 20157 976309 31000) 0 nil])
([nil nil ((5196 . 5200) (#("d" 0 1 (fontified t)) . -5196) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (#("o" 0 1 (fontified t)) . -5197) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) 5198 (t 25628 20157 997829 273000)) nil (25628 21696 305915 838000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -1064) (undo-tree-id283 . -4) (undo-tree-id284 . -4) (undo-tree-id285 . -4) (undo-tree-id286 . -4) (undo-tree-id287 . -4) (undo-tree-id288 . -4) (undo-tree-id289 . -4) (undo-tree-id290 . -4) (undo-tree-id291 . -4) (undo-tree-id292 . -1) (undo-tree-id293 . -4) (undo-tree-id294 . -4) (undo-tree-id295 . -4) (undo-tree-id296 . -4) (undo-tree-id297 . -4) (undo-tree-id298 . -4) (undo-tree-id299 . -4) (undo-tree-id300 . -4) (undo-tree-id301 . -4) (undo-tree-id302 . -4) (undo-tree-id303 . -4) 1068 (#("    " 0 4 (fontified t)) . -1068) (undo-tree-id304 . -4) (undo-tree-id305 . -4) (undo-tree-id306 . -4) (undo-tree-id307 . -4) (undo-tree-id308 . -4) (undo-tree-id309 . -4) (undo-tree-id310 . -4) (undo-tree-id311 . -4) (undo-tree-id312 . -4) (undo-tree-id313 . -4) (undo-tree-id314 . -4) (undo-tree-id315 . -4) (undo-tree-id316 . -4) (undo-tree-id317 . -4) (undo-tree-id318 . -4) (undo-tree-id319 . -4) 1072 (#("    " 0 4 (fontified t)) . -1072) (undo-tree-id320 . -4) (undo-tree-id321 . -4) (undo-tree-id322 . -4) (undo-tree-id323 . -4) (undo-tree-id324 . -4) (undo-tree-id325 . -4) (undo-tree-id326 . -4) (undo-tree-id327 . -4) (undo-tree-id328 . -4) (undo-tree-id329 . -4) (undo-tree-id330 . -4) (undo-tree-id331 . -4) 1076 (#("    " 0 4 (fontified t)) . -1076) (undo-tree-id332 . -4) (undo-tree-id333 . -4) (undo-tree-id334 . -4) (undo-tree-id335 . -4) (undo-tree-id336 . -4) (undo-tree-id337 . -4) (undo-tree-id338 . -4) (undo-tree-id339 . -4) 1080 (1063 . 1080) (#("    " 0 4 (fontified t)) . -1063) (undo-tree-id340 . -4) (undo-tree-id341 . -4) (undo-tree-id342 . -4) (undo-tree-id343 . -1) (undo-tree-id344 . -4) (undo-tree-id345 . -4) (undo-tree-id346 . -4) (undo-tree-id347 . -4) (undo-tree-id348 . -4) (undo-tree-id349 . -4) (undo-tree-id350 . -4) (undo-tree-id351 . -4) (undo-tree-id352 . -4) (undo-tree-id353 . -4) (undo-tree-id354 . -4) (undo-tree-id355 . -4) (undo-tree-id356 . -4) (undo-tree-id357 . -4) (undo-tree-id358 . -4) 1067 (#("    " 0 4 (fontified t)) . -1067) (undo-tree-id359 . -4) (undo-tree-id360 . -4) (undo-tree-id361 . -4) (undo-tree-id362 . -4) (undo-tree-id363 . -4) (undo-tree-id364 . -4) (undo-tree-id365 . -4) (undo-tree-id366 . -4) (undo-tree-id367 . -4) (undo-tree-id368 . -4) (undo-tree-id369 . -4) (undo-tree-id370 . -4) (undo-tree-id371 . -4) (undo-tree-id372 . -4) 1071 (#("    " 0 4 (fontified t)) . -1071) (undo-tree-id373 . -4) (undo-tree-id374 . -4) (undo-tree-id375 . -4) (undo-tree-id376 . -4) (undo-tree-id377 . -4) (undo-tree-id378 . -4) (undo-tree-id379 . -4) (undo-tree-id380 . -4) (undo-tree-id381 . -4) (undo-tree-id382 . -4) 1075 (#("    " 0 4 (fontified t)) . -1075) (undo-tree-id383 . -4) (undo-tree-id384 . -4) (undo-tree-id385 . -4) (undo-tree-id386 . -4) (undo-tree-id387 . -4) (undo-tree-id388 . -4) 1079 (1062 . 1079) 1021) nil (25628 21790 115203 787000) 0 nil] [nil nil ((5421 . 5425) (#("do" 0 2 (fontified t face font-lock-function-name-face)) . 5421) (undo-tree-id67 . -1) (undo-tree-id68 . -2) (undo-tree-id69 . -1) (undo-tree-id70 . -2) (undo-tree-id71 . -1) (undo-tree-id72 . -2) (undo-tree-id73 . -2) (undo-tree-id74 . -2) 5423) ((5421 . 5423) (#("read" 0 4 (fontified t face font-lock-function-name-face)) . 5421) (undo-tree-id204 . -4) (undo-tree-id205 . -4) (undo-tree-id206 . -4) (undo-tree-id207 . -4) (undo-tree-id208 . -4) (undo-tree-id209 . -4) (undo-tree-id210 . -4) (undo-tree-id211 . -4)) (25628 21695 801949 360000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1064) (undo-tree-id278 . 1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1)) nil (25628 21790 115110 422000) 0 nil])
([nil nil ((5430 . 5434) (5417 . 5430) (5416 . 5417) 5416) ((#("
" 0 1 (fontified t)) . 5416) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (#("do_all = read" 0 6 (fontified nil face font-lock-variable-name-face) 6 13 (fontified nil)) . 5417) (undo-tree-id154 . -1) (undo-tree-id155 . -2) (undo-tree-id156 . -1) (undo-tree-id157 . -3) (undo-tree-id158 . -2) (undo-tree-id159 . -4) (undo-tree-id160 . -3) (undo-tree-id161 . -5) (undo-tree-id162 . -4) (undo-tree-id163 . -6) (undo-tree-id164 . -5) (undo-tree-id165 . -7) (undo-tree-id166 . -6) (undo-tree-id167 . -8) (undo-tree-id168 . -7) (undo-tree-id169 . -9) (undo-tree-id170 . -8) (undo-tree-id171 . -10) (undo-tree-id172 . -9) (undo-tree-id173 . -11) (undo-tree-id174 . -10) (undo-tree-id175 . -12) (undo-tree-id176 . -11) (undo-tree-id177 . -13) (undo-tree-id178 . -12) (undo-tree-id179 . -13) (undo-tree-id180 . -13) (undo-tree-id181 . -13) (undo-tree-id182 . -13) (undo-tree-id183 . -13) (undo-tree-id184 . -13) (undo-tree-id185 . -13) (undo-tree-id186 . -13) (undo-tree-id187 . -13) (undo-tree-id188 . -13) (undo-tree-id189 . -13) (undo-tree-id190 . -13) (undo-tree-id191 . -13) (#("_all" 0 4 (fontified t)) . 5430) (undo-tree-id192 . -1) (undo-tree-id193 . -2) (undo-tree-id194 . -1) (undo-tree-id195 . -3) (undo-tree-id196 . -2) (undo-tree-id197 . -4) (undo-tree-id198 . -3) (undo-tree-id199 . -3) (undo-tree-id200 . -3) (undo-tree-id201 . -3) (undo-tree-id202 . -3) (undo-tree-id203 . -3)) (25628 21695 343783 721000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1064) (undo-tree-id275 . 1) (undo-tree-id276 . -1) (undo-tree-id277 . -1)) nil (25628 21790 115104 543000) 0 nil])
([nil nil ((#("do_all = read_all
" 0 6 (fontified t face font-lock-variable-name-face) 6 17 (fontified t) 17 18 (fontified t)) . 5417) (undo-tree-id24 . -17) (undo-tree-id25 . 1) (undo-tree-id26 . -18) (undo-tree-id27 . -16) (undo-tree-id28 . -18) (undo-tree-id29 . -18) (undo-tree-id30 . -1) (undo-tree-id31 . -2) (undo-tree-id32 . -1) (undo-tree-id33 . -3) (undo-tree-id34 . -2) (undo-tree-id35 . -4) (undo-tree-id36 . -3) (undo-tree-id37 . -5) (undo-tree-id38 . -4) (undo-tree-id39 . -6) (undo-tree-id40 . -5) (undo-tree-id41 . -7) (undo-tree-id42 . -6) (undo-tree-id43 . -8) (undo-tree-id44 . -7) (undo-tree-id45 . -9) (undo-tree-id46 . -8) (undo-tree-id47 . -10) (undo-tree-id48 . -9) (undo-tree-id49 . -11) (undo-tree-id50 . -10) (undo-tree-id51 . -12) (undo-tree-id52 . -11) (undo-tree-id53 . -13) (undo-tree-id54 . -12) (undo-tree-id55 . -14) (undo-tree-id56 . -13) (undo-tree-id57 . -15) (undo-tree-id58 . -14) (undo-tree-id59 . -16) (undo-tree-id60 . -15) (undo-tree-id61 . -17) (undo-tree-id62 . -16) (undo-tree-id63 . -16) (undo-tree-id64 . -16) (undo-tree-id65 . -16) (undo-tree-id66 . -18) 5433) ((5417 . 5435)) (25628 21694 756298 253000) 0 nil])
([nil nil ((321 . 336) (318 . 321) (#("f" 0 1 (fontified t face font-lock-function-name-face)) . -318) (undo-tree-id271 . -1) (310 . 319) (#("f" 0 1 (fontified t face font-lock-keyword-face)) . -310) (undo-tree-id272 . -1) (308 . 311) (#("    " 0 4 (fontified t)) . -308) (undo-tree-id273 . -4) 312 (307 . 312) (#("    " 0 4 (fontified t)) . -307) (undo-tree-id274 . -4) 311 (306 . 311) 305) nil (25628 21790 115098 726000) 0 nil])
([nil nil ((nil rear-nonsticky nil 5668 . 5669) (#("
" 0 1 (fontified nil)) . -5686) (5668 . 5687)) ((#("
do_all = read_all
" 0 1 (rear-nonsticky nil fontified nil) 1 7 (fontified nil face font-lock-variable-name-face) 7 18 (fontified nil) 18 19 (fontified nil)) . 5668) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -17) (undo-tree-id97 . -17) (undo-tree-id98 . -17) (undo-tree-id99 . -17) (undo-tree-id100 . -17) (undo-tree-id101 . -17) (undo-tree-id102 . -17) (undo-tree-id103 . -17) (undo-tree-id104 . -17) (undo-tree-id105 . -17) (undo-tree-id106 . -17) (undo-tree-id107 . -17) (undo-tree-id108 . -17) (undo-tree-id109 . -1) (undo-tree-id110 . -7) (5686 . 5687) (nil rear-nonsticky t 5668 . 5669)) (25628 21694 352046 379000) 0 nil])
([nil nil ((#("def read_dfs(*args, **kwargs
" 0 3 (fontified t face font-lock-keyword-face) 3 4 (fontified t) 4 12 (fontified t face font-lock-function-name-face) 12 13 (fontified t face (rainbow-delimiters-depth-1-face)) 13 28 (fontified t) 28 29 (fontified t)) . 308) (undo-tree-id219 . -28) (undo-tree-id220 . 1) (undo-tree-id221 . -29) (undo-tree-id222 . -13) (undo-tree-id223 . -12) (undo-tree-id224 . -14) (undo-tree-id225 . -13) (undo-tree-id226 . -15) (undo-tree-id227 . -14) (undo-tree-id228 . -16) (undo-tree-id229 . -15) (undo-tree-id230 . -17) (undo-tree-id231 . -16) (undo-tree-id232 . -18) (undo-tree-id233 . -17) (undo-tree-id234 . -19) (undo-tree-id235 . -18) (undo-tree-id236 . -20) (undo-tree-id237 . -19) (undo-tree-id238 . -21) (undo-tree-id239 . -20) (undo-tree-id240 . -22) (undo-tree-id241 . -21) (undo-tree-id242 . -23) (undo-tree-id243 . -22) (undo-tree-id244 . -24) (undo-tree-id245 . -23) (undo-tree-id246 . -25) (undo-tree-id247 . -24) (undo-tree-id248 . -26) (undo-tree-id249 . -25) (undo-tree-id250 . -27) (undo-tree-id251 . -26) (undo-tree-id252 . -28) (undo-tree-id253 . -27) (undo-tree-id254 . -27) (undo-tree-id255 . -27) (undo-tree-id256 . -27) (undo-tree-id257 . -27) (undo-tree-id258 . -27) (undo-tree-id259 . -27) (undo-tree-id260 . -27) (undo-tree-id261 . -27) (undo-tree-id262 . -27) (undo-tree-id263 . -27) (undo-tree-id264 . -27) (undo-tree-id265 . -4) (undo-tree-id266 . -27) (undo-tree-id267 . -27) (undo-tree-id268 . -4) (undo-tree-id269 . -4) (undo-tree-id270 . -29) 312) nil (25628 21790 115087 561000) 0 nil])
([nil nil ((5252 . 5255) (#("f" 0 1 (fontified t)) . -5252) (undo-tree-id16 . -1) (5246 . 5253) (#("f" 0 1 (fontified t)) . -5246) (undo-tree-id17 . -1) (5242 . 5247) (#("f" 0 1 (fontified t)) . -5242) (undo-tree-id18 . -1) (5242 . 5243) (#("line" 0 4 (fontified t)) . 5242) (undo-tree-id19 . -3) (undo-tree-id20 . -2) (undo-tree-id21 . -2) (undo-tree-id22 . -4) (undo-tree-id23 . -4)) ((5242 . 5246) (#("f" 0 1 (fontified nil)) . 5242) (5242 . 5243) (#("f, df" 0 4 (fontified nil) 4 5 (fontified nil)) . 5242) (undo-tree-id89 . -1) (undo-tree-id90 . -3) (undo-tree-id91 . -4) (undo-tree-id92 . -1) (5246 . 5247) (#("f, conf" 0 6 (fontified nil) 6 7 (fontified nil)) . 5246) (undo-tree-id93 . -1) (5252 . 5253) (#("fig" 0 3 (fontified t)) . 5252)) (25628 21694 192298 293000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 308) (undo-tree-id216 . 1) (undo-tree-id217 . -1) (undo-tree-id218 . -1)) nil (25628 21790 115385 640000) 0 nil])
([nil nil ((#("        f, df, config = line
" 0 8 (fontified t) 8 9 (fontified t face font-lock-variable-name-face) 9 11 (fontified t) 11 13 (fontified t face font-lock-variable-name-face) 13 15 (fontified t) 15 21 (fontified t face font-lock-variable-name-face) 21 29 (fontified t)) . 5264) (undo-tree-id8 . -28) (undo-tree-id9 . -29) (undo-tree-id10 . -21) (undo-tree-id11 . -24) (undo-tree-id12 . -28) (undo-tree-id13 . -21) (undo-tree-id14 . -21) (undo-tree-id15 . -29) 5285) ((5264 . 5293) (t 25628 21621 529589 762000)) (25628 21621 509282 961000) 0 nil])
([nil current ((5196 . 5198) (#("read" 0 4 (fontified t)) . 5196) (undo-tree-id389 . -3) (undo-tree-id390 . -3) (undo-tree-id391 . -4) (undo-tree-id392 . -1) (undo-tree-id393 . -2) (undo-tree-id394 . -1) (undo-tree-id395 . -3) (undo-tree-id396 . -2) (undo-tree-id397 . -4) (undo-tree-id398 . -3) (undo-tree-id399 . -4) (undo-tree-id400 . -4) (undo-tree-id401 . -4) 5200 (t 25628 21792 136076 680000)) nil (25628 21883 580948 294000) 0 nil] [nil nil ((#("
" 0 1 (fontified t)) . 308) (undo-tree-id212 . 1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1)) ((308 . 309)) (25628 21790 115018 539000) 0 nil])
nil
nil
nil
