(undo-tree-save-format-version . 1)
"232f0cf9d6318cc57801c1f51a219fdd4780ca86"
[nil nil nil nil (25701 17565 888793 772000) 0 nil]
([nil nil ((629 . 635) (#("f" 0 1 (fontified t face font-lock-keyword-face)) . -629) (undo-tree-id7 . -1) (628 . 630) (615 . 628) (t 25699 30954 709274 513000) 584) nil (25701 17565 888791 295000) 0 nil])
([nil nil ((#("            if attr
" 0 12 (fontified t) 12 14 (fontified t face font-lock-keyword-face) 14 19 (fontified t) 19 20 (fontified t)) . 616) (undo-tree-id0 . -20) (undo-tree-id1 . -20) (undo-tree-id2 . -20) (undo-tree-id3 . -18) (undo-tree-id4 . 1) (undo-tree-id5 . 2) (undo-tree-id6 . -19) 634) nil (25701 17565 888785 801000) 0 nil])
([nil nil ((127 . 136)) nil (25701 17565 888734 367000) 0 nil])
([nil nil ((1567 . 1575) (#(")" 0 1 (fontified t face (rainbow-delimiters-mismatched-face))) . -1567) (undo-tree-id8 . -1) 1568 (1553 . 1568) (#("I" 0 1 (fontified t face font-lock-string-face)) . -1553) (undo-tree-id9 . -1) 1554 (1542 . 1554) (1525 . 1542) 1475) nil (25701 17599 409572 770000) 0 nil])
([nil nil ((1015 . 1023) (1009 . 1015) (#("f" 0 1 (fontified t)) . -1009) (undo-tree-id10 . -1) (994 . 1010) (t 25701 17599 422332 432000)) nil (25701 17800 301196 490000) 0 nil])
([nil nil ((#(", Wrapper" 0 9 (fontified t)) . 127) (undo-tree-id45 . -8) (undo-tree-id46 . -2) (undo-tree-id47 . -9) (undo-tree-id48 . -2) (undo-tree-id49 . -2) (undo-tree-id50 . -1) (undo-tree-id51 . -2) (undo-tree-id52 . -1) (undo-tree-id53 . -9) (t 25701 17800 316194 707000)) nil (25701 55929 77934 254000) 0 nil])
([nil nil ((#(" or isinstance(func, Wrapper)" 0 1 (fontified t) 1 3 (fontified t face font-lock-keyword-face) 3 4 (fontified t) 4 14 (fontified t face font-lock-builtin-face) 14 15 (fontified t face (rainbow-delimiters-depth-1-face)) 15 28 (fontified t) 28 29 (fontified t face (rainbow-delimiters-depth-1-face))) . 985) (undo-tree-id54 . -29) (undo-tree-id55 . -29) (undo-tree-id56 . -29) (undo-tree-id57 . -28) (undo-tree-id58 . -28) (undo-tree-id59 . -28) (undo-tree-id60 . -28) (undo-tree-id61 . -28) (undo-tree-id62 . -28) (undo-tree-id63 . -21) (undo-tree-id64 . -28)) ((985 . 1014) (t 25701 55394 560145 275000)) (25701 55996 602950 745000) 0 nil])
([nil nil ((1615 . 1628) (t 25701 55394 560145 275000)) nil (25701 56021 64874 65000) 0 nil] [nil nil ((#("                " 0 16 (fontified t)) . -1517) (undo-tree-id220 . -16) (undo-tree-id221 . -16) (undo-tree-id222 . -16) (undo-tree-id223 . -16) 1533 (1516 . 1533) (t 25701 55394 560145 275000) 1455) ((#("
                " 0 1 (fontified t) 1 17 (fontified nil)) . 1516) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -17) (undo-tree-id325 . -17) (undo-tree-id326 . -17) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (1517 . 1533)) (25701 55995 837795 550000) 0 nil])
([nil nil ((#("        print(name, bases)
" 0 8 (fontified t) 8 13 (fontified t face font-lock-keyword-face) 13 14 (fontified t face (rainbow-delimiters-depth-1-face)) 14 25 (fontified t) 25 26 (fontified t face (rainbow-delimiters-depth-1-face)) 26 27 (fontified t)) . 1291) (undo-tree-id381 . -26) (undo-tree-id382 . -27) (undo-tree-id383 . -27) (undo-tree-id384 . -27) (undo-tree-id385 . -27) (undo-tree-id386 . -27) (undo-tree-id387 . -27) (t 25701 56021 83988 566000)) nil (25701 58432 680281 301000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1521 . 1522) (#("
" 0 1 (fontified nil)) . -1868) (1517 . 1869)) ((#("
    @wraps(func)
    def wrapped(*args, **kwargs):
        nonlocal _status
        _coroutine = _status[0] or func(*args, **kwargs)
        try:
            val = _coroutine.send(None)
        except StopIteration as ex:
            _coroutine = None
            val = ex.value
        finally:
            _status[0] = _coroutine
        return val
" 0 1 (fontified t) 1 4 (fontified nil) 4 5 (fontified nil rear-nonsticky nil) 5 11 (fontified nil face font-lock-type-face) 11 12 (fontified nil face (rainbow-delimiters-depth-1-face)) 12 16 (fontified nil) 16 17 (fontified nil face (rainbow-delimiters-depth-1-face)) 17 18 (fontified nil) 18 22 (fontified t) 22 25 (fontified t face font-lock-keyword-face) 25 26 (fontified t) 26 33 (fontified t face font-lock-function-name-face) 33 34 (fontified t face (rainbow-delimiters-depth-1-face)) 34 35 (fontified t) 35 49 (fontified t) 49 50 (fontified t face (rainbow-delimiters-depth-1-face)) 50 52 (fontified t) 52 60 (fontified t) 60 68 (fontified t face font-lock-keyword-face) 68 76 (fontified t) 76 77 (fontified t) 77 85 (fontified t) 85 95 (fontified t face font-lock-variable-name-face) 95 105 (fontified t) 105 106 (fontified t face (rainbow-delimiters-depth-1-face)) 106 107 (fontified t face highlight-numbers-number) 107 108 (fontified t face (rainbow-delimiters-depth-1-face)) 108 109 (fontified t) 109 111 (fontified t face font-lock-keyword-face) 111 116 (fontified t) 116 117 (fontified t face (rainbow-delimiters-depth-1-face)) 117 132 (fontified t) 132 133 (fontified t face (rainbow-delimiters-depth-1-face)) 133 134 (fontified t) 134 142 (fontified t) 142 145 (fontified t face font-lock-keyword-face) 145 147 (fontified t) 147 159 (fontified t) 159 162 (fontified t face font-lock-variable-name-face) 162 180 (fontified t) 180 181 (fontified t face (rainbow-delimiters-depth-1-face)) 181 185 (fontified t face font-lock-constant-face) 185 186 (fontified t face (rainbow-delimiters-depth-1-face)) 186 187 (fontified t) 187 195 (fontified t) 195 201 (fontified t face font-lock-keyword-face) 201 202 (fontified t) 202 215 (fontified t face font-lock-type-face) 215 216 (fontified t) 216 218 (fontified t face font-lock-keyword-face) 218 222 (fontified t) 222 223 (fontified t) 223 227 (fontified t) 227 235 (fontified t) 235 236 (fontified t face font-lock-variable-name-face) 236 245 (fontified t face font-lock-variable-name-face) 245 246 (fontified t) 246 248 (fontified t) 248 252 (fontified t face font-lock-constant-face) 252 253 (fontified t) 253 265 (fontified t) 265 268 (fontified t face font-lock-variable-name-face) 268 277 (fontified t) 277 280 (fontified t) 280 288 (fontified t) 288 295 (fontified t face font-lock-keyword-face) 295 296 (fontified t) 296 297 (fontified t) 297 309 (fontified t) 309 316 (fontified t face font-lock-variable-name-face) 316 317 (fontified t face (rainbow-delimiters-depth-1-face)) 317 318 (fontified t face highlight-numbers-number) 318 319 (fontified t face (rainbow-delimiters-depth-1-face)) 319 322 (fontified t) 322 332 (fontified t) 332 333 (fontified t) 333 341 (fontified nil) 341 347 (fontified nil face font-lock-keyword-face) 347 351 (fontified nil) 351 352 (fontified nil)) . 1517) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -5) (undo-tree-id256 . -337) (undo-tree-id257 . -1) (undo-tree-id258 . -351) (undo-tree-id259 . -5) (undo-tree-id260 . -5) (undo-tree-id261 . -5) (undo-tree-id262 . -5) (undo-tree-id263 . -5) (undo-tree-id264 . -22) (undo-tree-id265 . -5) (undo-tree-id266 . -56) (undo-tree-id267 . -22) (undo-tree-id268 . -81) (undo-tree-id269 . -56) (undo-tree-id270 . -138) (undo-tree-id271 . -81) (undo-tree-id272 . -151) (undo-tree-id273 . -138) (undo-tree-id274 . -191) (undo-tree-id275 . -151) (undo-tree-id276 . -227) (undo-tree-id277 . -191) (undo-tree-id278 . -257) (undo-tree-id279 . -227) (undo-tree-id280 . -284) (undo-tree-id281 . -257) (undo-tree-id282 . -301) (undo-tree-id283 . -284) (undo-tree-id284 . -337) (undo-tree-id285 . -301) (undo-tree-id286 . -333) (undo-tree-id287 . -333) (undo-tree-id288 . -333) (undo-tree-id289 . -333) (undo-tree-id290 . -333) (undo-tree-id291 . -333) (undo-tree-id292 . -333) (undo-tree-id293 . -333) (undo-tree-id294 . -333) (undo-tree-id295 . -333) (undo-tree-id296 . -333) (undo-tree-id297 . -333) (undo-tree-id298 . -351) (undo-tree-id299 . -351) (undo-tree-id300 . -333) (undo-tree-id301 . -351) (undo-tree-id302 . -333) (undo-tree-id303 . -333) (undo-tree-id304 . -297) (undo-tree-id305 . -333) (undo-tree-id306 . -333) (undo-tree-id307 . -297) (undo-tree-id308 . -69) (undo-tree-id309 . -76) (undo-tree-id310 . -69) (undo-tree-id311 . -76) (undo-tree-id312 . -98) (undo-tree-id313 . -105) (undo-tree-id314 . -333) (undo-tree-id315 . -333) (undo-tree-id316 . -333) (1868 . 1869) (nil rear-nonsticky t 1521 . 1522)) (25701 55995 505630 618000) 0 nil])
([nil nil ((#("        # Add attributes for their use in the decorated functions
" 0 8 (fontified t) 8 10 (fontified t face font-lock-comment-delimiter-face) 10 27 (fontified t face font-lock-comment-face) 27 43 (fontified t face font-lock-comment-face) 43 66 (fontified t face font-lock-comment-face)) . 1089) (undo-tree-id388 . -62) (undo-tree-id389 . -65) (undo-tree-id390 . -66) (undo-tree-id391 . -62) (undo-tree-id392 . -66) (undo-tree-id393 . -66) (undo-tree-id394 . -35) (undo-tree-id395 . -35) (undo-tree-id396 . -35) (undo-tree-id397 . -35) (undo-tree-id398 . -62) (undo-tree-id399 . -62) (undo-tree-id400 . -62) (undo-tree-id401 . -62) (undo-tree-id402 . -62) (undo-tree-id403 . -62) (undo-tree-id404 . -62) (undo-tree-id405 . -62) (undo-tree-id406 . -62) (undo-tree-id407 . -66) 1151 (t 25701 58432 694933 51000)) nil (25702 1073 598136 398000) 0 nil])
([nil nil ((#("        " 0 8 (fontified nil)) . -1906) (undo-tree-id187 . -4) (undo-tree-id188 . -4) (undo-tree-id189 . -4) (undo-tree-id190 . -4) (1894 . 1906) (#("            " 0 12 (fontified nil)) . -1870) (undo-tree-id191 . -4) (undo-tree-id192 . -4) (1854 . 1870) (#("        " 0 8 (fontified nil)) . -1845) (undo-tree-id193 . -4) (undo-tree-id194 . -4) (1833 . 1845) (#("            " 0 12 (fontified nil)) . -1818) (undo-tree-id195 . -4) (undo-tree-id196 . -4) (1802 . 1818) (#("            " 0 4 (fontified nil) 4 12 (fontified nil)) . -1784) (undo-tree-id197 . -4) (undo-tree-id198 . -4) (1768 . 1784) (#("        " 0 8 (fontified nil)) . -1740) (undo-tree-id199 . -4) (undo-tree-id200 . -4) (1728 . 1740) (#("            " 0 12 (fontified nil)) . -1700) (undo-tree-id201 . -4) (undo-tree-id202 . -4) (1684 . 1700) (#("        " 0 8 (fontified nil)) . -1679) (undo-tree-id203 . -4) (undo-tree-id204 . -4) (1667 . 1679) (#("        " 0 8 (fontified nil)) . -1618) (undo-tree-id205 . -4) (undo-tree-id206 . -4) (1606 . 1618) (#("        " 0 8 (fontified nil)) . -1589) (undo-tree-id207 . -4) (undo-tree-id208 . -4) (1577 . 1589) (#("    " 0 4 (fontified nil)) . -1547) (undo-tree-id209 . -4) (undo-tree-id210 . -4) (1539 . 1547) (#("    " 0 3 (fontified nil) 3 4 (fontified nil rear-nonsticky t)) . -1526) (undo-tree-id211 . -4) (undo-tree-id212 . -4) (undo-tree-id213 . -4) (undo-tree-id214 . -4) (undo-tree-id215 . -4) (undo-tree-id216 . -4) (undo-tree-id217 . -4) (undo-tree-id218 . -4) (undo-tree-id219 . -4) (1518 . 1526) 1869) ((#("        " 0 8 (fontified nil)) . 1518) (1526 . 1530) (#("        " 0 8 (fontified nil)) . 1539) (1547 . 1551) (#("            " 0 12 (fontified nil)) . 1577) (1589 . 1597) (#("            " 0 12 (fontified nil)) . 1606) (1618 . 1626) (#("            " 0 12 (fontified nil)) . 1667) (1679 . 1687) (#("                " 0 16 (fontified nil)) . 1684) (1700 . 1712) (#("            " 0 12 (fontified nil)) . 1728) (1740 . 1748) (#("                " 0 16 (fontified nil)) . 1768) (1784 . 1796) (#("                " 0 16 (fontified nil)) . 1802) (1818 . 1830) (#("            " 0 12 (fontified nil)) . 1833) (1845 . 1853) (#("                " 0 16 (fontified nil)) . 1854) (1870 . 1882) (#("            " 0 12 (fontified nil)) . 1894) (undo-tree-id247 . -12) (undo-tree-id248 . -12) (undo-tree-id249 . -12) (undo-tree-id250 . -12) (undo-tree-id251 . -12) (undo-tree-id252 . -12) (1906 . 1914)) (25701 55995 123258 805000) 0 nil])
([nil current ((#("    " 0 4 (fontified t)) . -1995) (undo-tree-id408 . -4) (undo-tree-id409 . -4) (undo-tree-id410 . -4) (undo-tree-id411 . -4) 1999 (1994 . 1999) (t 25702 1073 612576 978000) 1994) nil (25702 1100 858051 194000) 0 nil])
([nil nil ((#("            " 0 12 (fontified nil)) . -1954) (undo-tree-id148 . -12) (undo-tree-id149 . -12) (undo-tree-id150 . -12) (undo-tree-id151 . -12) (undo-tree-id152 . -12) (undo-tree-id153 . -12) (undo-tree-id154 . -12) (undo-tree-id155 . -12) (undo-tree-id156 . -12) (undo-tree-id157 . -12) (1938 . 1954) (#("                " 0 16 (fontified nil)) . -1914) (undo-tree-id158 . -16) (undo-tree-id159 . -16) (1894 . 1914) (#("            " 0 12 (fontified nil)) . -1885) (undo-tree-id160 . -12) (undo-tree-id161 . -12) (1869 . 1885) (#("                " 0 16 (fontified nil)) . -1854) (undo-tree-id162 . -16) (undo-tree-id163 . -16) (1834 . 1854) (#("                " 0 16 (fontified nil)) . -1816) (undo-tree-id164 . -16) (undo-tree-id165 . -16) (1796 . 1816) (#("            " 0 12 (fontified nil)) . -1768) (undo-tree-id166 . -12) (undo-tree-id167 . -12) (1752 . 1768) (#("                " 0 16 (fontified nil)) . -1724) (undo-tree-id168 . -16) (undo-tree-id169 . -16) (1704 . 1724) (#("            " 0 12 (fontified nil)) . -1699) (undo-tree-id170 . -12) (undo-tree-id171 . -12) (1683 . 1699) (#("            " 0 12 (fontified nil)) . -1634) (undo-tree-id172 . -12) (undo-tree-id173 . -12) (1618 . 1634) (#("            " 0 12 (fontified nil)) . -1601) (undo-tree-id174 . -12) (undo-tree-id175 . -12) (1585 . 1601) (#("        " 0 8 (fontified nil)) . -1555) (undo-tree-id176 . -8) (undo-tree-id177 . -8) (1543 . 1555) (#("        " 0 8 (fontified nil)) . -1530) (undo-tree-id178 . -8) (undo-tree-id179 . -8) (undo-tree-id180 . -8) (undo-tree-id181 . -8) (undo-tree-id182 . -8) (undo-tree-id183 . -8) (undo-tree-id184 . -8) (undo-tree-id185 . -8) (undo-tree-id186 . -8) (1518 . 1530) 1917) ((#("            " 0 12 (fontified nil)) . 1518) (1530 . 1538) (#("            " 0 12 (fontified nil)) . 1543) (1555 . 1563) (#("                " 0 16 (fontified nil)) . 1585) (1601 . 1613) (#("                " 0 16 (fontified nil)) . 1618) (1634 . 1646) (#("                " 0 16 (fontified nil)) . 1683) (1699 . 1711) (#("                    " 0 20 (fontified nil)) . 1704) (1724 . 1740) (#("                " 0 16 (fontified nil)) . 1752) (1768 . 1780) (#("                    " 0 20 (fontified nil)) . 1796) (1816 . 1832) (#("                    " 0 20 (fontified nil)) . 1834) (1854 . 1870) (#("                " 0 16 (fontified nil)) . 1869) (1885 . 1897) (#("                    " 0 20 (fontified nil)) . 1894) (1914 . 1930) (#("                " 0 16 (fontified nil)) . 1938) (undo-tree-id240 . -16) (undo-tree-id241 . -16) (undo-tree-id242 . -16) (undo-tree-id243 . -16) (undo-tree-id244 . -16) (undo-tree-id245 . -16) (undo-tree-id246 . -16) (1954 . 1966)) (25701 55994 657439 313000) 0 nil])
nil
([nil nil ((#("                " 0 16 (fontified nil)) . -2002) (undo-tree-id103 . -16) (undo-tree-id104 . -16) (undo-tree-id105 . -16) (undo-tree-id106 . -16) (undo-tree-id107 . -16) (undo-tree-id108 . -16) (undo-tree-id109 . -16) (undo-tree-id110 . -16) (undo-tree-id111 . -16) (undo-tree-id112 . -16) (undo-tree-id113 . -16) (undo-tree-id114 . -16) (undo-tree-id115 . -16) (undo-tree-id116 . -16) (undo-tree-id117 . -16) (undo-tree-id118 . -16) (1982 . 2002) (#("                    " 0 20 (fontified nil)) . -1958) (undo-tree-id119 . -20) (undo-tree-id120 . -20) (1934 . 1958) (#("                " 0 16 (fontified nil)) . -1925) (undo-tree-id121 . -16) (undo-tree-id122 . -16) (1905 . 1925) (#("                    " 0 20 (fontified nil)) . -1890) (undo-tree-id123 . -20) (undo-tree-id124 . -20) (1866 . 1890) (#("                    " 0 20 (fontified nil)) . -1848) (undo-tree-id125 . -20) (undo-tree-id126 . -20) (1824 . 1848) (#("                " 0 16 (fontified nil)) . -1796) (undo-tree-id127 . -16) (undo-tree-id128 . -16) (1776 . 1796) (#("                    " 0 20 (fontified nil)) . -1748) (undo-tree-id129 . -20) (undo-tree-id130 . -20) (1724 . 1748) (#("                " 0 16 (fontified nil)) . -1719) (undo-tree-id131 . -16) (undo-tree-id132 . -16) (1699 . 1719) (#("                " 0 16 (fontified nil)) . -1650) (undo-tree-id133 . -16) (undo-tree-id134 . -16) (1630 . 1650) (#("                " 0 16 (fontified nil)) . -1613) (undo-tree-id135 . -16) (undo-tree-id136 . -16) (1593 . 1613) (#("            " 0 12 (fontified nil)) . -1563) (undo-tree-id137 . -12) (undo-tree-id138 . -12) (1547 . 1563) (#("            " 0 12 (fontified nil)) . -1534) (undo-tree-id139 . -12) (undo-tree-id140 . -12) (undo-tree-id141 . -12) (undo-tree-id142 . -12) (undo-tree-id143 . -12) (undo-tree-id144 . -12) (undo-tree-id145 . -12) (undo-tree-id146 . -12) (undo-tree-id147 . -12) (1518 . 1534) 1965) ((#("                " 0 16 (fontified nil)) . 1518) (undo-tree-id229 . -16) (1534 . 1546) (#("                " 0 16 (fontified nil)) . 1547) (1563 . 1575) (#("                    " 0 20 (fontified nil)) . 1593) (1613 . 1629) (#("                    " 0 20 (fontified nil)) . 1630) (1650 . 1666) (#("                    " 0 20 (fontified nil)) . 1699) (1719 . 1735) (#("                        " 0 24 (fontified nil)) . 1724) (1748 . 1768) (#("                    " 0 20 (fontified nil)) . 1776) (1796 . 1812) (#("                        " 0 24 (fontified nil)) . 1824) (1848 . 1868) (#("                        " 0 24 (fontified nil)) . 1866) (1890 . 1910) (#("                    " 0 20 (fontified nil)) . 1905) (1925 . 1941) (#("                        " 0 24 (fontified nil)) . 1934) (undo-tree-id230 . -20) (undo-tree-id231 . -20) (1958 . 1978) (#("                    " 0 20 (fontified nil)) . 1982) (undo-tree-id232 . -20) (undo-tree-id233 . -20) (undo-tree-id234 . -20) (undo-tree-id235 . -20) (undo-tree-id236 . -20) (undo-tree-id237 . -20) (undo-tree-id238 . -20) (undo-tree-id239 . -20) (2002 . 2018)) (25701 55956 843052 933000) 0 nil])
([nil nil ((2029 . 2030) (#("
                namespace[\"_IS_COROUTINE\"] = True
                namespace[\"step\"] = syncify(func)
            elif inspect.isasyncgenfunction(func):
                raise ValueError(\"Illegal step function: {}." 0 1 (fontified t) 17 26 (face font-lock-variable-name-face) 26 27 (face (rainbow-delimiters-depth-1-face)) 27 28 (face font-lock-string-face syntax-table (15)) 28 41 (face font-lock-string-face) 41 42 (face font-lock-string-face syntax-table (15)) 42 43 (face (rainbow-delimiters-depth-1-face)) 46 50 (face font-lock-constant-face) 67 76 (face font-lock-variable-name-face) 76 77 (face (rainbow-delimiters-depth-1-face)) 77 78 (face font-lock-string-face syntax-table (15)) 78 82 (face font-lock-string-face) 82 83 (face font-lock-string-face syntax-table (15)) 83 84 (face (rainbow-delimiters-depth-1-face)) 94 95 (face (rainbow-delimiters-depth-1-face)) 99 100 (face (rainbow-delimiters-depth-1-face)) 113 117 (face font-lock-keyword-face) 144 145 (face (rainbow-delimiters-depth-1-face)) 149 150 (face (rainbow-delimiters-depth-1-face)) 168 173 (face font-lock-keyword-face) 174 184 (face font-lock-type-face) 184 185 (face (rainbow-delimiters-depth-1-face)) 185 186 (face font-lock-string-face syntax-table (15)) 186 209 (face font-lock-string-face) 209 210 (face font-lock-string-face) 210 211 (face font-lock-string-face) 211 212 (face font-lock-string-face)) . 2029) (undo-tree-id65 . 211) (undo-tree-id66 . -71) (undo-tree-id67 . -71) (undo-tree-id68 . 212) (undo-tree-id69 . -87) (undo-tree-id70 . -87) (undo-tree-id71 . 180) (undo-tree-id72 . -41) (undo-tree-id73 . -87) (undo-tree-id74 . -137) (undo-tree-id75 . -87) (undo-tree-id76 . -87) (undo-tree-id77 . -87) (undo-tree-id78 . -87) (undo-tree-id79 . -87) (undo-tree-id80 . -87) (undo-tree-id81 . -87) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -51) (undo-tree-id85 . -51) (undo-tree-id86 . -101) (undo-tree-id87 . -101) (undo-tree-id88 . -152) (undo-tree-id89 . -152) (undo-tree-id90 . -1) (undo-tree-id91 . -76) (undo-tree-id92 . -76) (undo-tree-id93 . -76) (undo-tree-id94 . -87) (undo-tree-id95 . -94) (undo-tree-id96 . -87) (undo-tree-id97 . -76) (undo-tree-id98 . -87) (undo-tree-id99 . -87) (undo-tree-id100 . -87) (undo-tree-id101 . -87) (undo-tree-id102 . -212) (2012 . 2029) 2002) ((#("
                " 0 1 (fontified t) 1 17 (fontified nil)) . 2012) (undo-tree-id224 . -1) (undo-tree-id225 . -17) (undo-tree-id226 . -17) (undo-tree-id227 . -17) (undo-tree-id228 . -17) (2029 . 2241) (#("j" 0 1 (fontified t)) . 2029)) (25701 55956 834910 226000) 0 nil])
nil
