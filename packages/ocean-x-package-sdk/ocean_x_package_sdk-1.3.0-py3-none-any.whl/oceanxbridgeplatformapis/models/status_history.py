# -*- coding: utf-8 -*-

"""
oceanxbridgeplatformapis

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from oceanxbridgeplatformapis.api_helper import APIHelper


class StatusHistory(object):

    """Implementation of the 'StatusHistory' model.

    TODO: type model description here.

    Attributes:
        received_date (datetime): TODO: type description here.
        process_date (datetime): TODO: type description here.
        shipped_date (datetime): TODO: type description here.
        voided_date (datetime): TODO: type description here.
        return_date (datetime): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "received_date": 'receivedDate',
        "process_date": 'processDate',
        "shipped_date": 'shippedDate',
        "voided_date": 'voidedDate',
        "return_date": 'returnDate'
    }

    _optionals = [
        'received_date',
        'process_date',
        'shipped_date',
        'voided_date',
        'return_date',
    ]

    def __init__(self,
                 received_date=APIHelper.SKIP,
                 process_date=APIHelper.SKIP,
                 shipped_date=APIHelper.SKIP,
                 voided_date=APIHelper.SKIP,
                 return_date=APIHelper.SKIP):
        """Constructor for the StatusHistory class"""

        # Initialize members of the class
        if received_date is not APIHelper.SKIP:
            self.received_date = APIHelper.RFC3339DateTime(received_date) if received_date else None 
        if process_date is not APIHelper.SKIP:
            self.process_date = APIHelper.RFC3339DateTime(process_date) if process_date else None 
        if shipped_date is not APIHelper.SKIP:
            self.shipped_date = APIHelper.RFC3339DateTime(shipped_date) if shipped_date else None 
        if voided_date is not APIHelper.SKIP:
            self.voided_date = APIHelper.RFC3339DateTime(voided_date) if voided_date else None 
        if return_date is not APIHelper.SKIP:
            self.return_date = APIHelper.RFC3339DateTime(return_date) if return_date else None 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        received_date = APIHelper.RFC3339DateTime.from_value(dictionary.get("receivedDate")).datetime if dictionary.get("receivedDate") else APIHelper.SKIP
        process_date = APIHelper.RFC3339DateTime.from_value(dictionary.get("processDate")).datetime if dictionary.get("processDate") else APIHelper.SKIP
        shipped_date = APIHelper.RFC3339DateTime.from_value(dictionary.get("shippedDate")).datetime if dictionary.get("shippedDate") else APIHelper.SKIP
        voided_date = APIHelper.RFC3339DateTime.from_value(dictionary.get("voidedDate")).datetime if dictionary.get("voidedDate") else APIHelper.SKIP
        return_date = APIHelper.RFC3339DateTime.from_value(dictionary.get("returnDate")).datetime if dictionary.get("returnDate") else APIHelper.SKIP
        # Return an object of this model
        return cls(received_date,
                   process_date,
                   shipped_date,
                   voided_date,
                   return_date)
