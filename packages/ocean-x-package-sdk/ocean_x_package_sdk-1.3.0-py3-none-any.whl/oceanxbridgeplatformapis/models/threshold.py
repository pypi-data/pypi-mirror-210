# -*- coding: utf-8 -*-

"""
oceanxbridgeplatformapis

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from oceanxbridgeplatformapis.api_helper import APIHelper


class Threshold(object):

    """Implementation of the 'Threshold' model.

    TODO: type model description here.

    Attributes:
        threshold_type (ThresholdTypeEnum): Used to indicate the type of
            product threshold that has been configured for the product code.
            (Threshold types; Supply Days - Will trigger a threshold when the
            supply days inventory calculation goes below configured value.
            Inventory - Will trigger a threshold when the inventory levels
            drop below the configured value )
        threshold_value (int): Used to indicate the value on which the
            threshold will trigger when it goes below the indicate
            number.(Note - Trigger will only happen when number is below the
            value and not equal too)
        threshold_status (ThresholdStatusEnum): Description:    Used to
            indicate if the threshold attached to the product is in an active
            , an inactive, or deleted state. > Status:   * `active` -
            Indicates that the threshold is active and when parameters are
            met, notifications will be sent.   * `inactive` - Indicates that
            the threshold is not active and will not trigger any
            notifications. >

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "threshold_type": 'thresholdType',
        "threshold_value": 'thresholdValue',
        "threshold_status": 'thresholdStatus'
    }

    _optionals = [
        'threshold_status',
    ]

    def __init__(self,
                 threshold_type=None,
                 threshold_value=None,
                 threshold_status=APIHelper.SKIP):
        """Constructor for the Threshold class"""

        # Initialize members of the class
        self.threshold_type = threshold_type 
        self.threshold_value = threshold_value 
        if threshold_status is not APIHelper.SKIP:
            self.threshold_status = threshold_status 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        threshold_type = dictionary.get("thresholdType") if dictionary.get("thresholdType") else None
        threshold_value = dictionary.get("thresholdValue") if dictionary.get("thresholdValue") else None
        threshold_status = dictionary.get("thresholdStatus") if dictionary.get("thresholdStatus") else APIHelper.SKIP
        # Return an object of this model
        return cls(threshold_type,
                   threshold_value,
                   threshold_status)
