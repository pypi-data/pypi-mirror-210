# -*- coding: utf-8 -*-

"""
oceanxbridgeplatformapis

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from oceanxbridgeplatformapis.api_helper import APIHelper
from oceanxbridgeplatformapis.models.address import Address
from oceanxbridgeplatformapis.models.custom_option import CustomOption
from oceanxbridgeplatformapis.models.shipment_option import ShipmentOption
from oceanxbridgeplatformapis.models.shipped_product import ShippedProduct
from oceanxbridgeplatformapis.models.status_history import StatusHistory


class ShipmentView(object):

    """Implementation of the 'shipmentView' model.

    TODO: type model description here.

    Attributes:
        client_id (string): The OceanX platform Client identification. This is
            assigned by the OceanX platform during on-boarding. Please contact
            your OceanX Client Service Account Manager to get this Id.
        brand_id (string): The OceanX platform Brand identification. This is
            assigned by the OceanX platform during on-boarding. Please contact
            your OceanX Client Service Account Manager to get this Id.
        sub_division (string): TODO: type description here.
        customer_number (string): TODO: type description here.
        order_number (string): TODO: type description here.
        shipment_number (string): TODO: type description here.
        reference_id (string): TODO: type description here.
        customer_ship_to_details (Address): The address object model
            definition that is used.
        status (string): TODO: type description here.
        status_date (datetime): TODO: type description here.
        status_history (StatusHistory): TODO: type description here.
        fulfilled_warehouse (WarehousesEnum): Description:    List of
            available warehouses within the OceanX platform. > Warehouses
            Codes:   * `ANC` - Arden, North Carolina   * `COH` - Columbus,
            Ohio   * `CO2` - Columbus SL, OH   * `FHR` - Foothill Ranch, CA >
            Note: All available warehouse codes may not be available for all
            clients or brands.
        requested_warehouse (WarehousesEnum): Description:    List of
            available warehouses within the OceanX platform. > Warehouses
            Codes:   * `ANC` - Arden, North Carolina   * `COH` - Columbus,
            Ohio   * `CO2` - Columbus SL, OH   * `FHR` - Foothill Ranch, CA >
            Note: All available warehouse codes may not be available for all
            clients or brands.
        ship_service (string): The shipping services that can be used for
            shipments based on delivery times. Usable options; STANDARD (5-7
            days),OVERNIGHT (1-2 days),TWODAY (2 Days),THREEDAY (3 Days)
        carrier_name (CarrierNameEnum): TODO: type description here.
        ship_service_name (string): TODO: type description here.
        ship_service_code (string): TODO: type description here.
        tracking_number (string): TODO: type description here.
        ship_weight (float): TODO: type description here.
        reason_code (VoidReasonCodesEnum): The void shipment reason code.
        order_date (datetime): TODO: type description here.
        order_total (float): TODO: type description here.
        products (list of ShippedProduct): TODO: type description here.
        shipment_options (list of ShipmentOption): TODO: type description
            here.
        custom_options (list of CustomOption): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "order_number": 'orderNumber',
        "status": 'status',
        "status_date": 'statusDate',
        "fulfilled_warehouse": 'fulfilledWarehouse',
        "ship_service": 'shipService',
        "carrier_name": 'carrierName',
        "ship_service_code": 'shipServiceCode',
        "tracking_number": 'trackingNumber',
        "ship_weight": 'shipWeight',
        "products": 'products',
        "client_id": 'clientId',
        "brand_id": 'brandId',
        "sub_division": 'subDivision',
        "customer_number": 'customerNumber',
        "shipment_number": 'shipmentNumber',
        "reference_id": 'referenceId',
        "customer_ship_to_details": 'customerShipToDetails',
        "status_history": 'statusHistory',
        "requested_warehouse": 'requestedWarehouse',
        "ship_service_name": 'shipServiceName',
        "reason_code": 'reasonCode',
        "order_date": 'orderDate',
        "order_total": 'orderTotal',
        "shipment_options": 'shipmentOptions',
        "custom_options": 'customOptions'
    }

    _optionals = [
        'client_id',
        'brand_id',
        'sub_division',
        'customer_number',
        'shipment_number',
        'reference_id',
        'customer_ship_to_details',
        'status_history',
        'requested_warehouse',
        'ship_service_name',
        'reason_code',
        'order_date',
        'order_total',
        'shipment_options',
        'custom_options',
    ]

    def __init__(self,
                 order_number=None,
                 status=None,
                 status_date=None,
                 fulfilled_warehouse=None,
                 ship_service=None,
                 carrier_name=None,
                 ship_service_code=None,
                 tracking_number=None,
                 ship_weight=None,
                 products=None,
                 client_id=APIHelper.SKIP,
                 brand_id=APIHelper.SKIP,
                 sub_division=APIHelper.SKIP,
                 customer_number=APIHelper.SKIP,
                 shipment_number=APIHelper.SKIP,
                 reference_id=APIHelper.SKIP,
                 customer_ship_to_details=APIHelper.SKIP,
                 status_history=APIHelper.SKIP,
                 requested_warehouse=APIHelper.SKIP,
                 ship_service_name=APIHelper.SKIP,
                 reason_code=APIHelper.SKIP,
                 order_date=APIHelper.SKIP,
                 order_total=APIHelper.SKIP,
                 shipment_options=APIHelper.SKIP,
                 custom_options=APIHelper.SKIP):
        """Constructor for the ShipmentView class"""

        # Initialize members of the class
        if client_id is not APIHelper.SKIP:
            self.client_id = client_id 
        if brand_id is not APIHelper.SKIP:
            self.brand_id = brand_id 
        if sub_division is not APIHelper.SKIP:
            self.sub_division = sub_division 
        if customer_number is not APIHelper.SKIP:
            self.customer_number = customer_number 
        self.order_number = order_number 
        if shipment_number is not APIHelper.SKIP:
            self.shipment_number = shipment_number 
        if reference_id is not APIHelper.SKIP:
            self.reference_id = reference_id 
        if customer_ship_to_details is not APIHelper.SKIP:
            self.customer_ship_to_details = customer_ship_to_details 
        self.status = status 
        self.status_date = APIHelper.RFC3339DateTime(status_date) if status_date else None 
        if status_history is not APIHelper.SKIP:
            self.status_history = status_history 
        self.fulfilled_warehouse = fulfilled_warehouse 
        if requested_warehouse is not APIHelper.SKIP:
            self.requested_warehouse = requested_warehouse 
        self.ship_service = ship_service 
        self.carrier_name = carrier_name 
        if ship_service_name is not APIHelper.SKIP:
            self.ship_service_name = ship_service_name 
        self.ship_service_code = ship_service_code 
        self.tracking_number = tracking_number 
        self.ship_weight = ship_weight 
        if reason_code is not APIHelper.SKIP:
            self.reason_code = reason_code 
        if order_date is not APIHelper.SKIP:
            self.order_date = APIHelper.RFC3339DateTime(order_date) if order_date else None 
        if order_total is not APIHelper.SKIP:
            self.order_total = order_total 
        self.products = products 
        if shipment_options is not APIHelper.SKIP:
            self.shipment_options = shipment_options 
        if custom_options is not APIHelper.SKIP:
            self.custom_options = custom_options 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        order_number = dictionary.get("orderNumber") if dictionary.get("orderNumber") else None
        status = dictionary.get("status") if dictionary.get("status") else None
        status_date = APIHelper.RFC3339DateTime.from_value(dictionary.get("statusDate")).datetime if dictionary.get("statusDate") else None
        fulfilled_warehouse = dictionary.get("fulfilledWarehouse") if dictionary.get("fulfilledWarehouse") else None
        ship_service = dictionary.get("shipService") if dictionary.get("shipService") else None
        carrier_name = dictionary.get("carrierName") if dictionary.get("carrierName") else None
        ship_service_code = dictionary.get("shipServiceCode") if dictionary.get("shipServiceCode") else None
        tracking_number = dictionary.get("trackingNumber") if dictionary.get("trackingNumber") else None
        ship_weight = dictionary.get("shipWeight") if dictionary.get("shipWeight") else None
        products = None
        if dictionary.get('products') is not None:
            products = [ShippedProduct.from_dictionary(x) for x in dictionary.get('products')]
        client_id = dictionary.get("clientId") if dictionary.get("clientId") else APIHelper.SKIP
        brand_id = dictionary.get("brandId") if dictionary.get("brandId") else APIHelper.SKIP
        sub_division = dictionary.get("subDivision") if dictionary.get("subDivision") else APIHelper.SKIP
        customer_number = dictionary.get("customerNumber") if dictionary.get("customerNumber") else APIHelper.SKIP
        shipment_number = dictionary.get("shipmentNumber") if dictionary.get("shipmentNumber") else APIHelper.SKIP
        reference_id = dictionary.get("referenceId") if dictionary.get("referenceId") else APIHelper.SKIP
        customer_ship_to_details = Address.from_dictionary(dictionary.get('customerShipToDetails')) if 'customerShipToDetails' in dictionary.keys() else APIHelper.SKIP
        status_history = StatusHistory.from_dictionary(dictionary.get('statusHistory')) if 'statusHistory' in dictionary.keys() else APIHelper.SKIP
        requested_warehouse = dictionary.get("requestedWarehouse") if dictionary.get("requestedWarehouse") else APIHelper.SKIP
        ship_service_name = dictionary.get("shipServiceName") if dictionary.get("shipServiceName") else APIHelper.SKIP
        reason_code = dictionary.get("reasonCode") if dictionary.get("reasonCode") else APIHelper.SKIP
        order_date = APIHelper.RFC3339DateTime.from_value(dictionary.get("orderDate")).datetime if dictionary.get("orderDate") else APIHelper.SKIP
        order_total = dictionary.get("orderTotal") if dictionary.get("orderTotal") else APIHelper.SKIP
        shipment_options = None
        if dictionary.get('shipmentOptions') is not None:
            shipment_options = [ShipmentOption.from_dictionary(x) for x in dictionary.get('shipmentOptions')]
        else:
            shipment_options = APIHelper.SKIP
        custom_options = None
        if dictionary.get('customOptions') is not None:
            custom_options = [CustomOption.from_dictionary(x) for x in dictionary.get('customOptions')]
        else:
            custom_options = APIHelper.SKIP
        # Return an object of this model
        return cls(order_number,
                   status,
                   status_date,
                   fulfilled_warehouse,
                   ship_service,
                   carrier_name,
                   ship_service_code,
                   tracking_number,
                   ship_weight,
                   products,
                   client_id,
                   brand_id,
                   sub_division,
                   customer_number,
                   shipment_number,
                   reference_id,
                   customer_ship_to_details,
                   status_history,
                   requested_warehouse,
                   ship_service_name,
                   reason_code,
                   order_date,
                   order_total,
                   shipment_options,
                   custom_options)
