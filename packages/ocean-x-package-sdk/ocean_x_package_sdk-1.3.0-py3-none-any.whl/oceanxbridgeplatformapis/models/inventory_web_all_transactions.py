# -*- coding: utf-8 -*-

"""
oceanxbridgeplatformapis

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from oceanxbridgeplatformapis.models.inventory_web_transaction import InventoryWebTransaction


class InventoryWebAllTransactions(object):

    """Implementation of the 'inventoryWebAllTransactions' model.

    TODO: type model description here.

    Attributes:
        category (InventoryTransactionCategoriesEnum): Description:    List of
            inventory transaction types. > Categories:   * `adjustment` -
            Inventory Adjustments - In and Out   * `receipt` - Inventory
            Receipts - Adds inventory    * `shipment` - Shipment Inventory
            changes - Adds and Removes Inventory >
        transactions (list of InventoryWebTransaction): TODO: type description
            here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "category": 'category',
        "transactions": 'transactions'
    }

    def __init__(self,
                 category=None,
                 transactions=None):
        """Constructor for the InventoryWebAllTransactions class"""

        # Initialize members of the class
        self.category = category 
        self.transactions = transactions 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        category = dictionary.get("category") if dictionary.get("category") else None
        transactions = None
        if dictionary.get('transactions') is not None:
            transactions = [InventoryWebTransaction.from_dictionary(x) for x in dictionary.get('transactions')]
        # Return an object of this model
        return cls(category,
                   transactions)
