# -*- coding: utf-8 -*-

"""
oceanxbridgeplatformapis

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
import dateutil.parser

from oceanxbridgeplatformapis.api_helper import APIHelper
from oceanxbridgeplatformapis.models.pagination import Pagination
from oceanxbridgeplatformapis.models.shipment import Shipment


class ShipmentsView(object):

    """Implementation of the 'shipmentsView' model.

    TODO: type model description here.

    Attributes:
        start_date (date): TODO: type description here.
        end_date (date): TODO: type description here.
        shipments (list of Shipment): TODO: type description here.
        pagination (Pagination): Pagination is the sequence of numbers
            assigned to the data request of the API. This is used to help
            managed the viewing of large data sets via API calls.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "shipments": 'shipments',
        "start_date": 'startDate',
        "end_date": 'endDate',
        "pagination": 'pagination'
    }

    _optionals = [
        'start_date',
        'end_date',
        'pagination',
    ]

    def __init__(self,
                 shipments=None,
                 start_date=APIHelper.SKIP,
                 end_date=APIHelper.SKIP,
                 pagination=APIHelper.SKIP):
        """Constructor for the ShipmentsView class"""

        # Initialize members of the class
        if start_date is not APIHelper.SKIP:
            self.start_date = start_date 
        if end_date is not APIHelper.SKIP:
            self.end_date = end_date 
        self.shipments = shipments 
        if pagination is not APIHelper.SKIP:
            self.pagination = pagination 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        shipments = None
        if dictionary.get('shipments') is not None:
            shipments = [Shipment.from_dictionary(x) for x in dictionary.get('shipments')]
        start_date = dateutil.parser.parse(dictionary.get('startDate')).date() if dictionary.get('startDate') else APIHelper.SKIP
        end_date = dateutil.parser.parse(dictionary.get('endDate')).date() if dictionary.get('endDate') else APIHelper.SKIP
        pagination = Pagination.from_dictionary(dictionary.get('pagination')) if 'pagination' in dictionary.keys() else APIHelper.SKIP
        # Return an object of this model
        return cls(shipments,
                   start_date,
                   end_date,
                   pagination)
