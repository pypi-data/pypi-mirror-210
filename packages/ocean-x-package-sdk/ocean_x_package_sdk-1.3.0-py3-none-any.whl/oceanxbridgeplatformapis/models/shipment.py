# -*- coding: utf-8 -*-

"""
oceanxbridgeplatformapis

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
import dateutil.parser

from oceanxbridgeplatformapis.api_helper import APIHelper
from oceanxbridgeplatformapis.models.custom_option import CustomOption
from oceanxbridgeplatformapis.models.shipment_option import ShipmentOption
from oceanxbridgeplatformapis.models.shipment_product import ShipmentProduct


class Shipment(object):

    """Implementation of the 'shipment' model.

    TODO: type model description here.

    Attributes:
        sub_division (string): TODO: type description here.
        customer_number (string): TODO: type description here.
        order_number (string): TODO: type description here.
        shipment_number (string): TODO: type description here.
        reference_id (string): TODO: type description here.
        status (string): TODO: type description here.
        received_date (date): TODO: type description here.
        shipped_date (date): TODO: type description here.
        return_date (date): TODO: type description here.
        voided_date (date): TODO: type description here.
        reason_code (VoidReasonCodesEnum): The void shipment reason code.
        last_status_update (datetime): TODO: type description here.
        fulfilled_warehouse (WarehousesEnum): Description:    List of
            available warehouses within the OceanX platform. > Warehouses
            Codes:   * `ANC` - Arden, North Carolina   * `COH` - Columbus,
            Ohio   * `CO2` - Columbus SL, OH   * `FHR` - Foothill Ranch, CA >
            Note: All available warehouse codes may not be available for all
            clients or brands.
        requested_warehouse (WarehousesEnum): Description:    List of
            available warehouses within the OceanX platform. > Warehouses
            Codes:   * `ANC` - Arden, North Carolina   * `COH` - Columbus,
            Ohio   * `CO2` - Columbus SL, OH   * `FHR` - Foothill Ranch, CA >
            Note: All available warehouse codes may not be available for all
            clients or brands.
        carrier_name (CarrierNameEnum): TODO: type description here.
        ship_service (string): The shipping services that can be used for
            shipments based on delivery times. Usable options; STANDARD (5-7
            days),OVERNIGHT (1-2 days),TWODAY (2 Days),THREEDAY (3 Days)
        ship_service_name (string): TODO: type description here.
        ship_service_code (string): TODO: type description here.
        tracking_number (string): TODO: type description here.
        products (list of ShipmentProduct): TODO: type description here.
        shipment_options (list of ShipmentOption): TODO: type description
            here.
        custom_options (list of CustomOption): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "sub_division": 'subDivision',
        "customer_number": 'customerNumber',
        "order_number": 'orderNumber',
        "shipment_number": 'shipmentNumber',
        "reference_id": 'referenceId',
        "status": 'status',
        "received_date": 'receivedDate',
        "shipped_date": 'shippedDate',
        "return_date": 'returnDate',
        "voided_date": 'voidedDate',
        "reason_code": 'reasonCode',
        "last_status_update": 'lastStatusUpdate',
        "fulfilled_warehouse": 'fulfilledWarehouse',
        "requested_warehouse": 'requestedWarehouse',
        "carrier_name": 'carrierName',
        "ship_service": 'shipService',
        "ship_service_name": 'shipServiceName',
        "ship_service_code": 'shipServiceCode',
        "tracking_number": 'trackingNumber',
        "products": 'products',
        "shipment_options": 'shipmentOptions',
        "custom_options": 'customOptions'
    }

    _optionals = [
        'sub_division',
        'customer_number',
        'order_number',
        'shipment_number',
        'reference_id',
        'status',
        'received_date',
        'shipped_date',
        'return_date',
        'voided_date',
        'reason_code',
        'last_status_update',
        'fulfilled_warehouse',
        'requested_warehouse',
        'carrier_name',
        'ship_service',
        'ship_service_name',
        'ship_service_code',
        'tracking_number',
        'products',
        'shipment_options',
        'custom_options',
    ]

    def __init__(self,
                 sub_division=APIHelper.SKIP,
                 customer_number=APIHelper.SKIP,
                 order_number=APIHelper.SKIP,
                 shipment_number=APIHelper.SKIP,
                 reference_id=APIHelper.SKIP,
                 status=APIHelper.SKIP,
                 received_date=APIHelper.SKIP,
                 shipped_date=APIHelper.SKIP,
                 return_date=APIHelper.SKIP,
                 voided_date=APIHelper.SKIP,
                 reason_code=APIHelper.SKIP,
                 last_status_update=APIHelper.SKIP,
                 fulfilled_warehouse=APIHelper.SKIP,
                 requested_warehouse=APIHelper.SKIP,
                 carrier_name=APIHelper.SKIP,
                 ship_service=APIHelper.SKIP,
                 ship_service_name=APIHelper.SKIP,
                 ship_service_code=APIHelper.SKIP,
                 tracking_number=APIHelper.SKIP,
                 products=APIHelper.SKIP,
                 shipment_options=APIHelper.SKIP,
                 custom_options=APIHelper.SKIP):
        """Constructor for the Shipment class"""

        # Initialize members of the class
        if sub_division is not APIHelper.SKIP:
            self.sub_division = sub_division 
        if customer_number is not APIHelper.SKIP:
            self.customer_number = customer_number 
        if order_number is not APIHelper.SKIP:
            self.order_number = order_number 
        if shipment_number is not APIHelper.SKIP:
            self.shipment_number = shipment_number 
        if reference_id is not APIHelper.SKIP:
            self.reference_id = reference_id 
        if status is not APIHelper.SKIP:
            self.status = status 
        if received_date is not APIHelper.SKIP:
            self.received_date = received_date 
        if shipped_date is not APIHelper.SKIP:
            self.shipped_date = shipped_date 
        if return_date is not APIHelper.SKIP:
            self.return_date = return_date 
        if voided_date is not APIHelper.SKIP:
            self.voided_date = voided_date 
        if reason_code is not APIHelper.SKIP:
            self.reason_code = reason_code 
        if last_status_update is not APIHelper.SKIP:
            self.last_status_update = APIHelper.RFC3339DateTime(last_status_update) if last_status_update else None 
        if fulfilled_warehouse is not APIHelper.SKIP:
            self.fulfilled_warehouse = fulfilled_warehouse 
        if requested_warehouse is not APIHelper.SKIP:
            self.requested_warehouse = requested_warehouse 
        if carrier_name is not APIHelper.SKIP:
            self.carrier_name = carrier_name 
        if ship_service is not APIHelper.SKIP:
            self.ship_service = ship_service 
        if ship_service_name is not APIHelper.SKIP:
            self.ship_service_name = ship_service_name 
        if ship_service_code is not APIHelper.SKIP:
            self.ship_service_code = ship_service_code 
        if tracking_number is not APIHelper.SKIP:
            self.tracking_number = tracking_number 
        if products is not APIHelper.SKIP:
            self.products = products 
        if shipment_options is not APIHelper.SKIP:
            self.shipment_options = shipment_options 
        if custom_options is not APIHelper.SKIP:
            self.custom_options = custom_options 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        sub_division = dictionary.get("subDivision") if dictionary.get("subDivision") else APIHelper.SKIP
        customer_number = dictionary.get("customerNumber") if dictionary.get("customerNumber") else APIHelper.SKIP
        order_number = dictionary.get("orderNumber") if dictionary.get("orderNumber") else APIHelper.SKIP
        shipment_number = dictionary.get("shipmentNumber") if dictionary.get("shipmentNumber") else APIHelper.SKIP
        reference_id = dictionary.get("referenceId") if dictionary.get("referenceId") else APIHelper.SKIP
        status = dictionary.get("status") if dictionary.get("status") else APIHelper.SKIP
        received_date = dateutil.parser.parse(dictionary.get('receivedDate')).date() if dictionary.get('receivedDate') else APIHelper.SKIP
        shipped_date = dateutil.parser.parse(dictionary.get('shippedDate')).date() if dictionary.get('shippedDate') else APIHelper.SKIP
        return_date = dateutil.parser.parse(dictionary.get('returnDate')).date() if dictionary.get('returnDate') else APIHelper.SKIP
        voided_date = dateutil.parser.parse(dictionary.get('voidedDate')).date() if dictionary.get('voidedDate') else APIHelper.SKIP
        reason_code = dictionary.get("reasonCode") if dictionary.get("reasonCode") else APIHelper.SKIP
        last_status_update = APIHelper.RFC3339DateTime.from_value(dictionary.get("lastStatusUpdate")).datetime if dictionary.get("lastStatusUpdate") else APIHelper.SKIP
        fulfilled_warehouse = dictionary.get("fulfilledWarehouse") if dictionary.get("fulfilledWarehouse") else APIHelper.SKIP
        requested_warehouse = dictionary.get("requestedWarehouse") if dictionary.get("requestedWarehouse") else APIHelper.SKIP
        carrier_name = dictionary.get("carrierName") if dictionary.get("carrierName") else APIHelper.SKIP
        ship_service = dictionary.get("shipService") if dictionary.get("shipService") else APIHelper.SKIP
        ship_service_name = dictionary.get("shipServiceName") if dictionary.get("shipServiceName") else APIHelper.SKIP
        ship_service_code = dictionary.get("shipServiceCode") if dictionary.get("shipServiceCode") else APIHelper.SKIP
        tracking_number = dictionary.get("trackingNumber") if dictionary.get("trackingNumber") else APIHelper.SKIP
        products = None
        if dictionary.get('products') is not None:
            products = [ShipmentProduct.from_dictionary(x) for x in dictionary.get('products')]
        else:
            products = APIHelper.SKIP
        shipment_options = None
        if dictionary.get('shipmentOptions') is not None:
            shipment_options = [ShipmentOption.from_dictionary(x) for x in dictionary.get('shipmentOptions')]
        else:
            shipment_options = APIHelper.SKIP
        custom_options = None
        if dictionary.get('customOptions') is not None:
            custom_options = [CustomOption.from_dictionary(x) for x in dictionary.get('customOptions')]
        else:
            custom_options = APIHelper.SKIP
        # Return an object of this model
        return cls(sub_division,
                   customer_number,
                   order_number,
                   shipment_number,
                   reference_id,
                   status,
                   received_date,
                   shipped_date,
                   return_date,
                   voided_date,
                   reason_code,
                   last_status_update,
                   fulfilled_warehouse,
                   requested_warehouse,
                   carrier_name,
                   ship_service,
                   ship_service_name,
                   ship_service_code,
                   tracking_number,
                   products,
                   shipment_options,
                   custom_options)
