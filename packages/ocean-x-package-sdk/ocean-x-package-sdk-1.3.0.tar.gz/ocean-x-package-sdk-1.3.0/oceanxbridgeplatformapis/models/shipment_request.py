# -*- coding: utf-8 -*-

"""
oceanxbridgeplatformapis

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from oceanxbridgeplatformapis.api_helper import APIHelper
from oceanxbridgeplatformapis.models.address import Address
from oceanxbridgeplatformapis.models.custom_option_1 import CustomOption1
from oceanxbridgeplatformapis.models.messaging import Messaging
from oceanxbridgeplatformapis.models.order_details import OrderDetails
from oceanxbridgeplatformapis.models.shipment_option_1 import ShipmentOption1
from oceanxbridgeplatformapis.models.shipment_product import ShipmentProduct
from oceanxbridgeplatformapis.models.shipping import Shipping


class ShipmentRequest(object):

    """Implementation of the 'shipmentRequest' model.

    Shipment Request object model definition.

    Attributes:
        client_id (string): The OceanX platform Client identification. This is
            assigned by the OceanX platform during on-boarding. Please contact
            your OceanX Client Service Account Manager to get this Id.
        brand_id (string): The OceanX platform Brand identification. This is
            assigned by the OceanX platform during on-boarding. Please contact
            your OceanX Client Service Account Manager to get this Id.
        order_details (OrderDetails): Order Details object model of the
            shipment definition.
        billing_address (Address): The address object model definition that is
            used.
        shipping_address (Address): The address object model definition that
            is used.
        products (list of ShipmentProduct): TODO: type description here.
        shipping (Shipping): Shipping object model definition. Used to pass
            requested shipping service and requested warehouse to be shipped
            from.
        messaging (Messaging): TODO: type description here.
        shipment_options (list of ShipmentOption1): TODO: type description
            here.
        custom_options (list of CustomOption1): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "order_details": 'orderDetails',
        "shipping_address": 'shippingAddress',
        "products": 'products',
        "shipping": 'shipping',
        "client_id": 'clientId',
        "brand_id": 'brandId',
        "billing_address": 'billingAddress',
        "messaging": 'messaging',
        "shipment_options": 'shipmentOptions',
        "custom_options": 'customOptions'
    }

    _optionals = [
        'client_id',
        'brand_id',
        'billing_address',
        'messaging',
        'shipment_options',
        'custom_options',
    ]

    def __init__(self,
                 order_details=None,
                 shipping_address=None,
                 products=None,
                 shipping=None,
                 client_id=APIHelper.SKIP,
                 brand_id=APIHelper.SKIP,
                 billing_address=APIHelper.SKIP,
                 messaging=APIHelper.SKIP,
                 shipment_options=APIHelper.SKIP,
                 custom_options=APIHelper.SKIP):
        """Constructor for the ShipmentRequest class"""

        # Initialize members of the class
        if client_id is not APIHelper.SKIP:
            self.client_id = client_id 
        if brand_id is not APIHelper.SKIP:
            self.brand_id = brand_id 
        self.order_details = order_details 
        if billing_address is not APIHelper.SKIP:
            self.billing_address = billing_address 
        self.shipping_address = shipping_address 
        self.products = products 
        self.shipping = shipping 
        if messaging is not APIHelper.SKIP:
            self.messaging = messaging 
        if shipment_options is not APIHelper.SKIP:
            self.shipment_options = shipment_options 
        if custom_options is not APIHelper.SKIP:
            self.custom_options = custom_options 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        order_details = OrderDetails.from_dictionary(dictionary.get('orderDetails')) if dictionary.get('orderDetails') else None
        shipping_address = Address.from_dictionary(dictionary.get('shippingAddress')) if dictionary.get('shippingAddress') else None
        products = None
        if dictionary.get('products') is not None:
            products = [ShipmentProduct.from_dictionary(x) for x in dictionary.get('products')]
        shipping = Shipping.from_dictionary(dictionary.get('shipping')) if dictionary.get('shipping') else None
        client_id = dictionary.get("clientId") if dictionary.get("clientId") else APIHelper.SKIP
        brand_id = dictionary.get("brandId") if dictionary.get("brandId") else APIHelper.SKIP
        billing_address = Address.from_dictionary(dictionary.get('billingAddress')) if 'billingAddress' in dictionary.keys() else APIHelper.SKIP
        messaging = Messaging.from_dictionary(dictionary.get('messaging')) if 'messaging' in dictionary.keys() else APIHelper.SKIP
        shipment_options = None
        if dictionary.get('shipmentOptions') is not None:
            shipment_options = [ShipmentOption1.from_dictionary(x) for x in dictionary.get('shipmentOptions')]
        else:
            shipment_options = APIHelper.SKIP
        custom_options = None
        if dictionary.get('customOptions') is not None:
            custom_options = [CustomOption1.from_dictionary(x) for x in dictionary.get('customOptions')]
        else:
            custom_options = APIHelper.SKIP
        # Return an object of this model
        return cls(order_details,
                   shipping_address,
                   products,
                   shipping,
                   client_id,
                   brand_id,
                   billing_address,
                   messaging,
                   shipment_options,
                   custom_options)
