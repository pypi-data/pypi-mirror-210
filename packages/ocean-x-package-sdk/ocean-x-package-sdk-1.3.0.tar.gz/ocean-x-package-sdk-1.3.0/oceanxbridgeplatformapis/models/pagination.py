# -*- coding: utf-8 -*-

"""
oceanxbridgeplatformapis

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""


class Pagination(object):

    """Implementation of the 'pagination' model.

    Pagination is the sequence of numbers assigned to the data request of the
    API. This is used to help managed the viewing of large data sets via API
    calls.

    Attributes:
        current_page (int): Indicates the current page number for the
            pagination data query.
        mfrom (int): Indicates the last record for the current page.
        last_page (int): Indicates the last page number for the pagination
            data query.
        per_page (int): Indicates the number of records to be displayed for
            each page.
        total (int): Indicates the total number of records in the pagination
            data query.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "current_page": 'currentPage',
        "mfrom": 'from',
        "last_page": 'lastPage',
        "per_page": 'perPage',
        "total": 'total'
    }

    def __init__(self,
                 current_page=None,
                 mfrom=None,
                 last_page=None,
                 per_page=20,
                 total=None):
        """Constructor for the Pagination class"""

        # Initialize members of the class
        self.current_page = current_page 
        self.mfrom = mfrom 
        self.last_page = last_page 
        self.per_page = per_page 
        self.total = total 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        current_page = dictionary.get("currentPage") if dictionary.get("currentPage") else None
        mfrom = dictionary.get("from") if dictionary.get("from") else None
        last_page = dictionary.get("lastPage") if dictionary.get("lastPage") else None
        per_page = dictionary.get("perPage") if dictionary.get("perPage") else 20
        total = dictionary.get("total") if dictionary.get("total") else None
        # Return an object of this model
        return cls(current_page,
                   mfrom,
                   last_page,
                   per_page,
                   total)
