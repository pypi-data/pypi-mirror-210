# -*- coding: utf-8 -*-

"""
oceanxbridgeplatformapis

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from oceanxbridgeplatformapis.api_helper import APIHelper


class Address(object):

    """Implementation of the 'address' model.

    The address object model definition that is used.

    Attributes:
        first_name (string): Customer's first name
        last_name (string): Customer's last name
        address_1 (string): Customer's address line number one
        address_2 (string): Customer's address line number two
        address_3 (string): Customer's address line number three
        city (string): Customer's City
        state (string): Customer's state. US and Canadian addresses use
            2-character state/province codes.
        postal_code (string): Customer's Postal code or Zip code depending on
            Country. US should be 5 or 9 digits and Canada format is 7
            characters (aNa NaN)
        country_code (string): Customer's addresses Country Code. Country Code
            format of ISO 3166
        phone_number (string): Customer's phone number
        email (string): Customer's email address

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "first_name": 'firstName',
        "last_name": 'lastName',
        "address_1": 'address1',
        "city": 'city',
        "state": 'state',
        "postal_code": 'postalCode',
        "country_code": 'countryCode',
        "address_2": 'address2',
        "address_3": 'address3',
        "phone_number": 'phoneNumber',
        "email": 'email'
    }

    _optionals = [
        'address_2',
        'address_3',
        'phone_number',
        'email',
    ]

    def __init__(self,
                 first_name=None,
                 last_name=None,
                 address_1=None,
                 city=None,
                 state=None,
                 postal_code=None,
                 country_code=None,
                 address_2=APIHelper.SKIP,
                 address_3=APIHelper.SKIP,
                 phone_number=APIHelper.SKIP,
                 email=APIHelper.SKIP):
        """Constructor for the Address class"""

        # Initialize members of the class
        self.first_name = first_name 
        self.last_name = last_name 
        self.address_1 = address_1 
        if address_2 is not APIHelper.SKIP:
            self.address_2 = address_2 
        if address_3 is not APIHelper.SKIP:
            self.address_3 = address_3 
        self.city = city 
        self.state = state 
        self.postal_code = postal_code 
        self.country_code = country_code 
        if phone_number is not APIHelper.SKIP:
            self.phone_number = phone_number 
        if email is not APIHelper.SKIP:
            self.email = email 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        first_name = dictionary.get("firstName") if dictionary.get("firstName") else None
        last_name = dictionary.get("lastName") if dictionary.get("lastName") else None
        address_1 = dictionary.get("address1") if dictionary.get("address1") else None
        city = dictionary.get("city") if dictionary.get("city") else None
        state = dictionary.get("state") if dictionary.get("state") else None
        postal_code = dictionary.get("postalCode") if dictionary.get("postalCode") else None
        country_code = dictionary.get("countryCode") if dictionary.get("countryCode") else None
        address_2 = dictionary.get("address2") if dictionary.get("address2") else APIHelper.SKIP
        address_3 = dictionary.get("address3") if dictionary.get("address3") else APIHelper.SKIP
        phone_number = dictionary.get("phoneNumber") if dictionary.get("phoneNumber") else APIHelper.SKIP
        email = dictionary.get("email") if dictionary.get("email") else APIHelper.SKIP
        # Return an object of this model
        return cls(first_name,
                   last_name,
                   address_1,
                   city,
                   state,
                   postal_code,
                   country_code,
                   address_2,
                   address_3,
                   phone_number,
                   email)
