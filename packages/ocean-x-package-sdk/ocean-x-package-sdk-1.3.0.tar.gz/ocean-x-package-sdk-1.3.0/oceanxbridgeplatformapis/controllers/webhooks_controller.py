# -*- coding: utf-8 -*-

"""
oceanxbridgeplatformapis

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""

from oceanxbridgeplatformapis.api_helper import APIHelper
from oceanxbridgeplatformapis.configuration import Server
from oceanxbridgeplatformapis.controllers.base_controller import BaseController
from apimatic_core.request_builder import RequestBuilder
from apimatic_core.response_handler import ResponseHandler
from apimatic_core.types.parameter import Parameter
from oceanxbridgeplatformapis.http.http_method_enum import HttpMethodEnum
from apimatic_core.authentication.multiple.single_auth import Single
from apimatic_core.authentication.multiple.and_auth_group import And
from apimatic_core.authentication.multiple.or_auth_group import Or
from oceanxbridgeplatformapis.models.webhooks_shipments_confirmations_response import WebhooksShipmentsConfirmationsResponse
from oceanxbridgeplatformapis.models.response_inv_tran_200 import ResponseInvTran200
from oceanxbridgeplatformapis.exceptions.error_responses_exception import ErrorResponsesException
from oceanxbridgeplatformapis.exceptions.response_inv_tran_400_exception import ResponseInvTran400Exception


class WebhooksController(BaseController):

    """A Controller to access Endpoints in the oceanxbridgeplatformapis API."""
    def __init__(self, config):
        super(WebhooksController, self).__init__(config)

    def post_ship_confirmation(self,
                               body):
        """Does a POST request to /webhooks/shipments/confirmations.

        Used to post shipment confirmation.

        Args:
            body (ShipmentView): TODO: type description here.

        Returns:
            WebhooksShipmentsConfirmationsResponse: Response from the API.
                shipment accepted

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.DEFAULT_SERVER)
            .path('/webhooks/shipments/confirmations')
            .http_method(HttpMethodEnum.POST)
            .body_param(Parameter()
                        .value(body))
            .header_param(Parameter()
                          .key('content-type')
                          .value('application/json; charset=utf-8'))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .body_serializer(APIHelper.json_serialize)
            .auth(Single('global'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(WebhooksShipmentsConfirmationsResponse.from_dictionary)
            .local_error('400', 'invalid input, object invalid', ErrorResponsesException)
        ).execute()

    def submit_inventory_transactions(self,
                                      body):
        """Does a POST request to /webhooks/inventory/transactions/.

        Posting of inventory transactions from Oceanx.

        Args:
            body (InventoryWebAllTransactions): Allows shipments to be
                submitted into the OceanX Bridge Platform.

        Returns:
            ResponseInvTran200: Response from the API. When some transactions
                transactions fail and some success.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.DEFAULT_SERVER)
            .path('/webhooks/inventory/transactions/')
            .http_method(HttpMethodEnum.POST)
            .body_param(Parameter()
                        .value(body))
            .header_param(Parameter()
                          .key('content-type')
                          .value('application/json; charset=utf-8'))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .body_serializer(APIHelper.json_serialize)
            .auth(Single('global'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(ResponseInvTran200.from_dictionary)
            .local_error('400', 'When posting all transaction fail.', ResponseInvTran400Exception)
        ).execute()
